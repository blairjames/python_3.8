20200802_201921 - Starting Build.

20200802_201921 - Build FAILED!! Aborting.


20200802_201935 - Starting Build.

Sending build context to Docker daemon  83.97kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_201935
20200802_201935 - Build completed successfully.


Already up to date.
[master ccee68a] Automatic build $timestp
 2 files changed, 125 insertions(+)
20200802_201945 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200802_201935: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_201952 - Docker push completed successfully.


20200802_201952 - All completed successfully
20200802_203901 - Starting Build.

Sending build context to Docker daemon  94.72kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_203901
20200802_203901 - Build completed successfully.


Already up to date.
[master b37c127] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200802_203911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200802_203901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_203918 - Docker push completed successfully.


20200802_203918 - All completed successfully
20200802_213901 - Starting Build.

Sending build context to Docker daemon  102.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_213901
20200802_213901 - Build completed successfully.


Already up to date.
[master e75fb89] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200802_213909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200802_213901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_213917 - Docker push completed successfully.


20200802_213917 - All completed successfully
20200802_223901 - Starting Build.

Sending build context to Docker daemon  110.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_223901
20200802_223901 - Build completed successfully.


Already up to date.
[master 3ca1e86] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200802_223910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
0171a6524714: Layer already exists
20200802_223901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_223919 - Docker push completed successfully.


20200802_223919 - All completed successfully
20200802_233901 - Starting Build.

Sending build context to Docker daemon  119.8kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_233901
20200802_233901 - Build completed successfully.


Already up to date.
[master 90a1360] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200802_233911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200802_233901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_233920 - Docker push completed successfully.


20200802_233920 - All completed successfully
20200803_003901 - Starting Build.

Sending build context to Docker daemon    128kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_003901
20200803_003901 - Build completed successfully.


Already up to date.
[master 972104e] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_003910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_003901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_003917 - Docker push completed successfully.


20200803_003917 - All completed successfully
20200803_013901 - Starting Build.

Sending build context to Docker daemon  135.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_013901
20200803_013901 - Build completed successfully.


Already up to date.
[master 97a78fd] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_013910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
a122d8ec09be: Layer already exists
20200803_013901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_013918 - Docker push completed successfully.


20200803_013918 - All completed successfully
20200803_023901 - Starting Build.

Sending build context to Docker daemon  144.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_023901
20200803_023901 - Build completed successfully.


Already up to date.
[master e90bc99] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_023909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200803_023901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_023919 - Docker push completed successfully.


20200803_023919 - All completed successfully
20200803_033901 - Starting Build.

Sending build context to Docker daemon  153.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_033901
20200803_033901 - Build completed successfully.


Already up to date.
[master 1a7c8ba] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_033910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
057a0a11b1cd: Layer already exists
20200803_033901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_033918 - Docker push completed successfully.


20200803_033918 - All completed successfully
20200803_043901 - Starting Build.

Sending build context to Docker daemon  160.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_043901
20200803_043902 - Build completed successfully.


Already up to date.
[master e2df20b] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_043910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_043901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_043917 - Docker push completed successfully.


20200803_043917 - All completed successfully
20200803_053901 - Starting Build.

Sending build context to Docker daemon  169.5kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_053901
20200803_053901 - Build completed successfully.


Already up to date.
[master b6506e3] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_053910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_053901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_053917 - Docker push completed successfully.


20200803_053917 - All completed successfully
20200803_063901 - Starting Build.

Sending build context to Docker daemon  177.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_063901
20200803_063901 - Build completed successfully.


Already up to date.
[master aa792df] Automatic build $timestp
 1 file changed, 64 insertions(+)
20200803_063909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_063901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_063918 - Docker push completed successfully.


20200803_063918 - All completed successfully
20200803_073901 - Starting Build.

Sending build context to Docker daemon  187.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_073901
20200803_073901 - Build completed successfully.


Already up to date.
[master 6950429] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_073912 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
a6efc444afea: Layer already exists
20200803_073901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_073921 - Docker push completed successfully.


20200803_073921 - All completed successfully
20200803_083901 - Starting Build.

Sending build context to Docker daemon  196.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_083901
20200803_083901 - Build completed successfully.


Already up to date.
[master 08240af] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200803_083910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_083901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_083918 - Docker push completed successfully.


20200803_083918 - All completed successfully
20200803_093901 - Starting Build.

Sending build context to Docker daemon  204.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_093901
20200803_093902 - Build completed successfully.


Already up to date.
[master a1d5c31] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_093910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200803_093901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_093918 - Docker push completed successfully.


20200803_093918 - All completed successfully
20200803_101650 - Starting Build.

Sending build context to Docker daemon  280.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_101650
20200803_101650 - Build completed successfully.


Already up to date.
[master 3b20162] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_101657 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_101650: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_101705 - Docker push completed successfully.


20200803_101705 - All completed successfully
20200803_101712 - Starting Build.

Sending build context to Docker daemon  288.8kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_101712
20200803_101713 - Build completed successfully.


Already up to date.
[master 402531f] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_101720 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
a6efc444afea: Layer already exists
20200803_101712: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_101729 - Docker push completed successfully.


20200803_101729 - All completed successfully
20200803_103901 - Starting Build.

Sending build context to Docker daemon  311.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_103901
20200803_103901 - Build completed successfully.


Already up to date.
[master c4b7a21] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_103909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_103901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_103917 - Docker push completed successfully.


20200803_103917 - All completed successfully
20200803_113901 - Starting Build.

Sending build context to Docker daemon  329.2kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_113901
20200803_113901 - Build completed successfully.


Already up to date.
[master 7f54515] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_113910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_113901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_113919 - Docker push completed successfully.


20200803_113919 - All completed successfully
20200803_123901 - Starting Build.

Sending build context to Docker daemon  346.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_123901
20200803_123902 - Build completed successfully.


Already up to date.
[master 11c7155] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_123910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
20200803_123901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_123918 - Docker push completed successfully.


20200803_123918 - All completed successfully
20200803_133901 - Starting Build.

Sending build context to Docker daemon    362kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_133901
20200803_133902 - Build completed successfully.


Already up to date.
[master 2bc3f2a] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_133910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
a122d8ec09be: Layer already exists
20200803_133901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_133919 - Docker push completed successfully.


20200803_133919 - All completed successfully
20200803_143901 - Starting Build.

Sending build context to Docker daemon  379.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_143901
20200803_143902 - Build completed successfully.


Already up to date.
[master 25b2605] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_143910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_143901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_143917 - Docker push completed successfully.


20200803_143917 - All completed successfully
20200803_153901 - Starting Build.

Sending build context to Docker daemon  396.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_153901
20200803_153901 - Build completed successfully.


Already up to date.
[master 82429ed] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_153909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_153901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_153916 - Docker push completed successfully.


20200803_153916 - All completed successfully
20200803_163901 - Starting Build.

Sending build context to Docker daemon  413.2kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_163901
20200803_163901 - Build completed successfully.


Already up to date.
[master 49207ea] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_163910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
a122d8ec09be: Layer already exists
20200803_163901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_163918 - Docker push completed successfully.


20200803_163918 - All completed successfully
20200803_173901 - Starting Build.

Sending build context to Docker daemon  430.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_173901
20200803_173901 - Build completed successfully.


Already up to date.
[master e294317] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_173910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200803_173901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_173918 - Docker push completed successfully.


20200803_173918 - All completed successfully
20200803_183901 - Starting Build.

Sending build context to Docker daemon    446kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_183901
20200803_183901 - Build completed successfully.


Already up to date.
[master 4c5bb64] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_183910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_183901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_183918 - Docker push completed successfully.


20200803_183918 - All completed successfully
20200803_193901 - Starting Build.

Sending build context to Docker daemon  463.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_193901
20200803_193901 - Build completed successfully.


Already up to date.
[master 4ff1d04] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_193910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200803_193901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_193919 - Docker push completed successfully.


20200803_193919 - All completed successfully
20200803_203901 - Starting Build.

Sending build context to Docker daemon  481.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_203901
20200803_203902 - Build completed successfully.


Already up to date.
[master cad84ac] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_203911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_203901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_203923 - Docker push completed successfully.


20200803_203923 - All completed successfully
20200803_213901 - Starting Build.

Sending build context to Docker daemon  499.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_213901
20200803_213901 - Build completed successfully.


Already up to date.
[master 7f7033c] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_213911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_213901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_213919 - Docker push completed successfully.


20200803_213919 - All completed successfully
20200803_223901 - Starting Build.

Sending build context to Docker daemon  518.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_223901
20200803_223901 - Build completed successfully.


Already up to date.
[master 57e55d5] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_223910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200803_223901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_223917 - Docker push completed successfully.


20200803_223917 - All completed successfully
20200803_233901 - Starting Build.

Sending build context to Docker daemon  536.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_233901
20200803_233901 - Build completed successfully.


Already up to date.
[master 5bd0f2e] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_233910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200803_233901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_233918 - Docker push completed successfully.


20200803_233918 - All completed successfully
20200804_003901 - Starting Build.

Sending build context to Docker daemon    554kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_003901
20200804_003901 - Build completed successfully.


Already up to date.
[master 19c6843] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_003910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200804_003901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_003920 - Docker push completed successfully.


20200804_003920 - All completed successfully
20200804_013901 - Starting Build.

Sending build context to Docker daemon  572.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_013901
20200804_013901 - Build completed successfully.


Already up to date.
[master 1d13ebc] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_013911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200804_013901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_013919 - Docker push completed successfully.


20200804_013919 - All completed successfully
20200804_023901 - Starting Build.

Sending build context to Docker daemon  591.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_023901
20200804_023901 - Build completed successfully.


Already up to date.
[master c44d765] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_023910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_023901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_023920 - Docker push completed successfully.


20200804_023920 - All completed successfully
