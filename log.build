20200802_201921 - Starting Build.

20200802_201921 - Build FAILED!! Aborting.


20200802_201935 - Starting Build.

Sending build context to Docker daemon  83.97kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_201935
20200802_201935 - Build completed successfully.


Already up to date.
[master ccee68a] Automatic build $timestp
 2 files changed, 125 insertions(+)
20200802_201945 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200802_201935: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_201952 - Docker push completed successfully.


20200802_201952 - All completed successfully
20200802_203901 - Starting Build.

Sending build context to Docker daemon  94.72kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_203901
20200802_203901 - Build completed successfully.


Already up to date.
[master b37c127] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200802_203911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200802_203901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_203918 - Docker push completed successfully.


20200802_203918 - All completed successfully
20200802_213901 - Starting Build.

Sending build context to Docker daemon  102.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_213901
20200802_213901 - Build completed successfully.


Already up to date.
[master e75fb89] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200802_213909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200802_213901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_213917 - Docker push completed successfully.


20200802_213917 - All completed successfully
20200802_223901 - Starting Build.

Sending build context to Docker daemon  110.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_223901
20200802_223901 - Build completed successfully.


Already up to date.
[master 3ca1e86] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200802_223910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
0171a6524714: Layer already exists
20200802_223901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_223919 - Docker push completed successfully.


20200802_223919 - All completed successfully
20200802_233901 - Starting Build.

Sending build context to Docker daemon  119.8kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200802_233901
20200802_233901 - Build completed successfully.


Already up to date.
[master 90a1360] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200802_233911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200802_233901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200802_233920 - Docker push completed successfully.


20200802_233920 - All completed successfully
20200803_003901 - Starting Build.

Sending build context to Docker daemon    128kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_003901
20200803_003901 - Build completed successfully.


Already up to date.
[master 972104e] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_003910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_003901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_003917 - Docker push completed successfully.


20200803_003917 - All completed successfully
20200803_013901 - Starting Build.

Sending build context to Docker daemon  135.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_013901
20200803_013901 - Build completed successfully.


Already up to date.
[master 97a78fd] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_013910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
a122d8ec09be: Layer already exists
20200803_013901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_013918 - Docker push completed successfully.


20200803_013918 - All completed successfully
20200803_023901 - Starting Build.

Sending build context to Docker daemon  144.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_023901
20200803_023901 - Build completed successfully.


Already up to date.
[master e90bc99] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_023909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200803_023901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_023919 - Docker push completed successfully.


20200803_023919 - All completed successfully
20200803_033901 - Starting Build.

Sending build context to Docker daemon  153.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_033901
20200803_033901 - Build completed successfully.


Already up to date.
[master 1a7c8ba] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_033910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
057a0a11b1cd: Layer already exists
20200803_033901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_033918 - Docker push completed successfully.


20200803_033918 - All completed successfully
20200803_043901 - Starting Build.

Sending build context to Docker daemon  160.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_043901
20200803_043902 - Build completed successfully.


Already up to date.
[master e2df20b] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_043910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_043901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_043917 - Docker push completed successfully.


20200803_043917 - All completed successfully
20200803_053901 - Starting Build.

Sending build context to Docker daemon  169.5kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_053901
20200803_053901 - Build completed successfully.


Already up to date.
[master b6506e3] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_053910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_053901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_053917 - Docker push completed successfully.


20200803_053917 - All completed successfully
20200803_063901 - Starting Build.

Sending build context to Docker daemon  177.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_063901
20200803_063901 - Build completed successfully.


Already up to date.
[master aa792df] Automatic build $timestp
 1 file changed, 64 insertions(+)
20200803_063909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_063901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_063918 - Docker push completed successfully.


20200803_063918 - All completed successfully
20200803_073901 - Starting Build.

Sending build context to Docker daemon  187.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_073901
20200803_073901 - Build completed successfully.


Already up to date.
[master 6950429] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_073912 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
a6efc444afea: Layer already exists
20200803_073901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_073921 - Docker push completed successfully.


20200803_073921 - All completed successfully
20200803_083901 - Starting Build.

Sending build context to Docker daemon  196.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_083901
20200803_083901 - Build completed successfully.


Already up to date.
[master 08240af] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200803_083910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_083901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_083918 - Docker push completed successfully.


20200803_083918 - All completed successfully
20200803_093901 - Starting Build.

Sending build context to Docker daemon  204.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_093901
20200803_093902 - Build completed successfully.


Already up to date.
[master a1d5c31] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_093910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200803_093901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_093918 - Docker push completed successfully.


20200803_093918 - All completed successfully
20200803_101650 - Starting Build.

Sending build context to Docker daemon  280.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_101650
20200803_101650 - Build completed successfully.


Already up to date.
[master 3b20162] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_101657 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_101650: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_101705 - Docker push completed successfully.


20200803_101705 - All completed successfully
20200803_101712 - Starting Build.

Sending build context to Docker daemon  288.8kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_101712
20200803_101713 - Build completed successfully.


Already up to date.
[master 402531f] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200803_101720 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
a6efc444afea: Layer already exists
20200803_101712: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_101729 - Docker push completed successfully.


20200803_101729 - All completed successfully
20200803_103901 - Starting Build.

Sending build context to Docker daemon  311.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_103901
20200803_103901 - Build completed successfully.


Already up to date.
[master c4b7a21] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_103909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_103901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_103917 - Docker push completed successfully.


20200803_103917 - All completed successfully
20200803_113901 - Starting Build.

Sending build context to Docker daemon  329.2kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_113901
20200803_113901 - Build completed successfully.


Already up to date.
[master 7f54515] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_113910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_113901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_113919 - Docker push completed successfully.


20200803_113919 - All completed successfully
20200803_123901 - Starting Build.

Sending build context to Docker daemon  346.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_123901
20200803_123902 - Build completed successfully.


Already up to date.
[master 11c7155] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_123910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
20200803_123901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_123918 - Docker push completed successfully.


20200803_123918 - All completed successfully
20200803_133901 - Starting Build.

Sending build context to Docker daemon    362kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_133901
20200803_133902 - Build completed successfully.


Already up to date.
[master 2bc3f2a] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_133910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
a122d8ec09be: Layer already exists
20200803_133901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_133919 - Docker push completed successfully.


20200803_133919 - All completed successfully
20200803_143901 - Starting Build.

Sending build context to Docker daemon  379.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_143901
20200803_143902 - Build completed successfully.


Already up to date.
[master 25b2605] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_143910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_143901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_143917 - Docker push completed successfully.


20200803_143917 - All completed successfully
20200803_153901 - Starting Build.

Sending build context to Docker daemon  396.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_153901
20200803_153901 - Build completed successfully.


Already up to date.
[master 82429ed] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_153909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_153901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_153916 - Docker push completed successfully.


20200803_153916 - All completed successfully
20200803_163901 - Starting Build.

Sending build context to Docker daemon  413.2kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_163901
20200803_163901 - Build completed successfully.


Already up to date.
[master 49207ea] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_163910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
a122d8ec09be: Layer already exists
20200803_163901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_163918 - Docker push completed successfully.


20200803_163918 - All completed successfully
20200803_173901 - Starting Build.

Sending build context to Docker daemon  430.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_173901
20200803_173901 - Build completed successfully.


Already up to date.
[master e294317] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_173910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200803_173901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_173918 - Docker push completed successfully.


20200803_173918 - All completed successfully
20200803_183901 - Starting Build.

Sending build context to Docker daemon    446kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_183901
20200803_183901 - Build completed successfully.


Already up to date.
[master 4c5bb64] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_183910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200803_183901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_183918 - Docker push completed successfully.


20200803_183918 - All completed successfully
20200803_193901 - Starting Build.

Sending build context to Docker daemon  463.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_193901
20200803_193901 - Build completed successfully.


Already up to date.
[master 4ff1d04] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_193910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200803_193901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_193919 - Docker push completed successfully.


20200803_193919 - All completed successfully
20200803_203901 - Starting Build.

Sending build context to Docker daemon  481.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_203901
20200803_203902 - Build completed successfully.


Already up to date.
[master cad84ac] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_203911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200803_203901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_203923 - Docker push completed successfully.


20200803_203923 - All completed successfully
20200803_213901 - Starting Build.

Sending build context to Docker daemon  499.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_213901
20200803_213901 - Build completed successfully.


Already up to date.
[master 7f7033c] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_213911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200803_213901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_213919 - Docker push completed successfully.


20200803_213919 - All completed successfully
20200803_223901 - Starting Build.

Sending build context to Docker daemon  518.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_223901
20200803_223901 - Build completed successfully.


Already up to date.
[master 57e55d5] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_223910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200803_223901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_223917 - Docker push completed successfully.


20200803_223917 - All completed successfully
20200803_233901 - Starting Build.

Sending build context to Docker daemon  536.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_233901
20200803_233901 - Build completed successfully.


Already up to date.
[master 5bd0f2e] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200803_233910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200803_233901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200803_233918 - Docker push completed successfully.


20200803_233918 - All completed successfully
20200804_003901 - Starting Build.

Sending build context to Docker daemon    554kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_003901
20200804_003901 - Build completed successfully.


Already up to date.
[master 19c6843] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_003910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200804_003901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_003920 - Docker push completed successfully.


20200804_003920 - All completed successfully
20200804_013901 - Starting Build.

Sending build context to Docker daemon  572.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_013901
20200804_013901 - Build completed successfully.


Already up to date.
[master 1d13ebc] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_013911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200804_013901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_013919 - Docker push completed successfully.


20200804_013919 - All completed successfully
20200804_023901 - Starting Build.

Sending build context to Docker daemon  591.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_023901
20200804_023901 - Build completed successfully.


Already up to date.
[master c44d765] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_023910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_023901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_023920 - Docker push completed successfully.


20200804_023920 - All completed successfully
20200804_033901 - Starting Build.

Sending build context to Docker daemon  609.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_033901
20200804_033901 - Build completed successfully.


Already up to date.
[master 3808e70] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_033910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_033901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_033919 - Docker push completed successfully.


20200804_033919 - All completed successfully
20200804_043901 - Starting Build.

Sending build context to Docker daemon  628.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_043901
20200804_043901 - Build completed successfully.


Already up to date.
[master 67af776] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_043911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_043901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_043921 - Docker push completed successfully.


20200804_043921 - All completed successfully
20200804_053901 - Starting Build.

Sending build context to Docker daemon  646.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_053901
20200804_053901 - Build completed successfully.


Already up to date.
[master 4662878] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_053910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200804_053901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_053920 - Docker push completed successfully.


20200804_053920 - All completed successfully
20200804_063901 - Starting Build.

Sending build context to Docker daemon  665.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_063901
20200804_063901 - Build completed successfully.


Already up to date.
[master 7c24901] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_063911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_063901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_063919 - Docker push completed successfully.


20200804_063919 - All completed successfully
20200804_073901 - Starting Build.

Sending build context to Docker daemon  684.5kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_073901
20200804_073901 - Build completed successfully.


Already up to date.
[master 3d86dd4] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_073910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_073901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_073918 - Docker push completed successfully.


20200804_073918 - All completed successfully
20200804_083901 - Starting Build.

Sending build context to Docker daemon  703.5kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_083901
20200804_083901 - Build completed successfully.


Already up to date.
[master 2532879] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_083910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200804_083901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_083918 - Docker push completed successfully.


20200804_083918 - All completed successfully
20200804_093901 - Starting Build.

Sending build context to Docker daemon  722.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_093901
20200804_093902 - Build completed successfully.


Already up to date.
[master 1891bdb] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_093910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_093901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_093920 - Docker push completed successfully.


20200804_093920 - All completed successfully
20200804_103901 - Starting Build.

Sending build context to Docker daemon  742.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_103901
20200804_103901 - Build completed successfully.


Already up to date.
[master 57b34d8] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_103911 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200804_103901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_103918 - Docker push completed successfully.


20200804_103918 - All completed successfully
20200804_113901 - Starting Build.

Sending build context to Docker daemon  762.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_113901
20200804_113901 - Build completed successfully.


Already up to date.
[master f1c26a9] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_113909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
20200804_113901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_113916 - Docker push completed successfully.


20200804_113916 - All completed successfully
20200804_123901 - Starting Build.

Sending build context to Docker daemon  782.8kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_123901
20200804_123901 - Build completed successfully.


Already up to date.
[master 68bbaa7] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_123909 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200804_123901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_123916 - Docker push completed successfully.


20200804_123916 - All completed successfully
20200804_133901 - Starting Build.

Sending build context to Docker daemon  803.8kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_133901
20200804_133902 - Build completed successfully.


Already up to date.
[master 575075f] Automatic build $timestp
 1 file changed, 38 insertions(+)
20200804_133910 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
a122d8ec09be: Layer already exists
20200804_133901: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_133921 - Docker push completed successfully.


20200804_133921 - All completed successfully
20200804_143601 - Starting Build.

Sending build context to Docker daemon  815.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_143601
20200804_143602 - Build completed successfully.


Already up to date.
[master b8d4f74] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200804_143610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_143601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_143618 - Docker push completed successfully.


20200804_143618 - All completed successfully
20200804_153601 - Starting Build.

Sending build context to Docker daemon  826.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_153601
20200804_153602 - Build completed successfully.


Already up to date.
[master 33cd407] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200804_153610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_153601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_153616 - Docker push completed successfully.


20200804_153616 - All completed successfully
20200804_163601 - Starting Build.

Sending build context to Docker daemon  838.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_163601
20200804_163601 - Build completed successfully.


Already up to date.
[master 9948f06] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200804_163610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_163601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_163617 - Docker push completed successfully.


20200804_163617 - All completed successfully
20200804_173601 - Starting Build.

Sending build context to Docker daemon  850.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_173601
20200804_173601 - Build completed successfully.


Already up to date.
[master 666132e] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200804_173610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200804_173601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_173618 - Docker push completed successfully.


20200804_173618 - All completed successfully
20200804_183601 - Starting Build.

Sending build context to Docker daemon  862.7kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_183601
20200804_183601 - Build completed successfully.


Already up to date.
[master 5b153c1] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200804_183610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_183601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_183618 - Docker push completed successfully.


20200804_183618 - All completed successfully
20200804_193601 - Starting Build.

Sending build context to Docker daemon  873.5kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_193601
20200804_193601 - Build completed successfully.


Already up to date.
[master 1c04849] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200804_193609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200804_193601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_193617 - Docker push completed successfully.


20200804_193617 - All completed successfully
20200804_203601 - Starting Build.

Sending build context to Docker daemon  886.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_203601
20200804_203601 - Build completed successfully.


Already up to date.
[master f2c6f83] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200804_203610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200804_203601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_203617 - Docker push completed successfully.


20200804_203617 - All completed successfully
20200804_213601 - Starting Build.

Sending build context to Docker daemon  898.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_213601
20200804_213601 - Build completed successfully.


Already up to date.
[master 050a0f2] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200804_213611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200804_213601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_213618 - Docker push completed successfully.


20200804_213618 - All completed successfully
20200804_223601 - Starting Build.

Sending build context to Docker daemon  909.8kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_223601
20200804_223601 - Build completed successfully.


Already up to date.
[master 7ad94b7] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200804_223610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200804_223601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_223617 - Docker push completed successfully.


20200804_223617 - All completed successfully
20200804_233601 - Starting Build.

Sending build context to Docker daemon  923.1kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200804_233601
20200804_233602 - Build completed successfully.


Already up to date.
[master f226cd4] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200804_234208 - git
20200804_234208 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200804_233601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200804_234217 - Docker push completed successfully.


20200804_234217 - All completed successfully
20200805_003601 - Starting Build.

Sending build context to Docker daemon  935.4kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_003601
20200805_003601 - Build completed successfully.


Already up to date.
[master 409e50c] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_003610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
0171a6524714: Layer already exists
20200805_003601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_003628 - Docker push completed successfully.


20200805_003628 - All completed successfully
20200805_013601 - Starting Build.

Sending build context to Docker daemon  947.2kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_013601
20200805_013602 - Build completed successfully.


Already up to date.
[master 42a2789] Automatic build $timestp
 1 file changed, 64 insertions(+)
20200805_013611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200805_013601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_013619 - Docker push completed successfully.


20200805_013619 - All completed successfully
20200805_023601 - Starting Build.

Sending build context to Docker daemon    961kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_023601
20200805_023601 - Build completed successfully.


Already up to date.
[master a804ec8] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_023610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
20200805_023601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_023618 - Docker push completed successfully.


20200805_023618 - All completed successfully
20200805_033601 - Starting Build.

Sending build context to Docker daemon  972.3kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_033601
20200805_033601 - Build completed successfully.


Already up to date.
[master 7f0031a] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_033611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200805_033601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_033623 - Docker push completed successfully.


20200805_033623 - All completed successfully
20200805_043601 - Starting Build.

Sending build context to Docker daemon  985.6kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_043601
20200805_043601 - Build completed successfully.


Already up to date.
[master cad5382] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_043610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200805_043601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_043618 - Docker push completed successfully.


20200805_043618 - All completed successfully
20200805_053601 - Starting Build.

Sending build context to Docker daemon  997.9kB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_053601
20200805_053601 - Build completed successfully.


Already up to date.
[master d44f794] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200805_053611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200805_053601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_053619 - Docker push completed successfully.


20200805_053619 - All completed successfully
20200805_063601 - Starting Build.

Sending build context to Docker daemon  1.012MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_063601
20200805_063601 - Build completed successfully.


Already up to date.
[master 573f20e] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_063610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
fd0e7f89fb75: Layer already exists
20200805_063601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_063619 - Docker push completed successfully.


20200805_063619 - All completed successfully
20200805_073601 - Starting Build.

Sending build context to Docker daemon  1.024MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_073601
20200805_073601 - Build completed successfully.


Already up to date.
[master d0c524b] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_073610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200805_073601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_073618 - Docker push completed successfully.


20200805_073618 - All completed successfully
20200805_083601 - Starting Build.

Sending build context to Docker daemon  1.037MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_083601
20200805_083602 - Build completed successfully.


Already up to date.
[master 837922f] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_083611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200805_083601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_083618 - Docker push completed successfully.


20200805_083618 - All completed successfully
20200805_093601 - Starting Build.

Sending build context to Docker daemon  1.051MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_093601
20200805_093601 - Build completed successfully.


Already up to date.
[master 3a03cba] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_093611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200805_093601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_093618 - Docker push completed successfully.


20200805_093618 - All completed successfully
20200805_103601 - Starting Build.

Sending build context to Docker daemon  1.064MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_103601
20200805_103601 - Build completed successfully.


Already up to date.
[master 3a8e5f9] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200805_103610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200805_103601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_103618 - Docker push completed successfully.


20200805_103618 - All completed successfully
20200805_113601 - Starting Build.

Sending build context to Docker daemon  1.077MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_113601
20200805_113601 - Build completed successfully.


Already up to date.
[master ed337d0] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200805_113609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200805_113601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_113616 - Docker push completed successfully.


20200805_113616 - All completed successfully
20200805_123601 - Starting Build.

Sending build context to Docker daemon  1.091MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_123601
20200805_123601 - Build completed successfully.


Already up to date.
[master 1157313] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_123610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200805_123601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_123619 - Docker push completed successfully.


20200805_123619 - All completed successfully
20200805_133601 - Starting Build.

Sending build context to Docker daemon  1.103MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_133601
20200805_133601 - Build completed successfully.


Already up to date.
[master d49452d] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_133610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200805_133601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_133617 - Docker push completed successfully.


20200805_133617 - All completed successfully
20200805_143601 - Starting Build.

Sending build context to Docker daemon  1.117MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_143601
20200805_143601 - Build completed successfully.


Already up to date.
[master c0e4682] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_143610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200805_143601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_143617 - Docker push completed successfully.


20200805_143617 - All completed successfully
20200805_153601 - Starting Build.

Sending build context to Docker daemon  1.131MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_153601
20200805_153601 - Build completed successfully.


Already up to date.
[master f7d1539] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_153609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200805_153601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_153617 - Docker push completed successfully.


20200805_153617 - All completed successfully
20200805_163601 - Starting Build.

Sending build context to Docker daemon  1.145MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_163601
20200805_163601 - Build completed successfully.


Already up to date.
[master de1b13a] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_163611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200805_163601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_163619 - Docker push completed successfully.


20200805_163619 - All completed successfully
20200805_173601 - Starting Build.

Sending build context to Docker daemon  1.159MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_173601
20200805_173602 - Build completed successfully.


Already up to date.
[master ec4fce6] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200805_173613 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200805_173601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_173620 - Docker push completed successfully.


20200805_173620 - All completed successfully
20200805_183601 - Starting Build.

Sending build context to Docker daemon  1.174MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_183601
20200805_183601 - Build completed successfully.


Already up to date.
[master 831afb2] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_183611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
20200805_183601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_183625 - Docker push completed successfully.


20200805_183625 - All completed successfully
20200805_193601 - Starting Build.

Sending build context to Docker daemon  1.188MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_193601
20200805_193602 - Build completed successfully.


Already up to date.
[master b7b6f4b] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200805_193611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200805_193601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_193620 - Docker push completed successfully.


20200805_193620 - All completed successfully
20200805_203601 - Starting Build.

Sending build context to Docker daemon  1.202MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_203601
20200805_203601 - Build completed successfully.


Already up to date.
[master 9e6bded] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_203611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200805_203601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_203621 - Docker push completed successfully.


20200805_203621 - All completed successfully
20200805_213602 - Starting Build.

Sending build context to Docker daemon  1.217MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_213601
20200805_213602 - Build completed successfully.


Already up to date.
[master 3451993] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_223601 - Starting Build.

Sending build context to Docker daemon  1.231MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_223601
20200805_223602 - Build completed successfully.


Already up to date.
[master c01efda] Automatic build $timestp
 1 file changed, 40 insertions(+)
20200805_223611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200805_223601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_223620 - Docker push completed successfully.


20200805_223620 - All completed successfully
20200805_233601 - Starting Build.

Sending build context to Docker daemon  1.246MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200805_233601
20200805_233601 - Build completed successfully.


Already up to date.
[master d87512a] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200805_233610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200805_233601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200805_233618 - Docker push completed successfully.


20200805_233618 - All completed successfully
20200806_003601 - Starting Build.

Sending build context to Docker daemon   1.26MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_003601
20200806_003601 - Build completed successfully.


Already up to date.
[master 05e86d4] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_003612 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200806_003601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_003619 - Docker push completed successfully.


20200806_003619 - All completed successfully
20200806_013601 - Starting Build.

Sending build context to Docker daemon  1.275MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_013601
20200806_013601 - Build completed successfully.


Already up to date.
[master 747195a] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_013610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200806_013601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_013633 - Docker push completed successfully.


20200806_013633 - All completed successfully
20200806_023601 - Starting Build.

Sending build context to Docker daemon  1.291MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_023601
20200806_023602 - Build completed successfully.


Already up to date.
[master f75f426] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_023610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200806_023601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_023617 - Docker push completed successfully.


20200806_023617 - All completed successfully
20200806_033601 - Starting Build.

Sending build context to Docker daemon  1.305MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_033601
20200806_033601 - Build completed successfully.


Already up to date.
[master ffa8f6c] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_033610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200806_033601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_033618 - Docker push completed successfully.


20200806_033618 - All completed successfully
20200806_043601 - Starting Build.

Sending build context to Docker daemon   1.32MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_043601
20200806_043601 - Build completed successfully.


Already up to date.
[master f37eb76] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200806_043611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200806_043601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_043620 - Docker push completed successfully.


20200806_043620 - All completed successfully
20200806_053601 - Starting Build.

Sending build context to Docker daemon  1.336MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_053601
20200806_053602 - Build completed successfully.


Already up to date.
[master 7d392d3] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_053610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200806_053601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_053618 - Docker push completed successfully.


20200806_053618 - All completed successfully
20200806_063601 - Starting Build.

Sending build context to Docker daemon  1.351MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_063601
20200806_063601 - Build completed successfully.


Already up to date.
[master 25d802c] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_063610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200806_063601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_063617 - Docker push completed successfully.


20200806_063617 - All completed successfully
20200806_073601 - Starting Build.

Sending build context to Docker daemon  1.367MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_073601
20200806_073601 - Build completed successfully.


Already up to date.
[master 804641d] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_073612 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200806_073601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_073621 - Docker push completed successfully.


20200806_073621 - All completed successfully
20200806_083601 - Starting Build.

Sending build context to Docker daemon  1.382MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_083601
20200806_083601 - Build completed successfully.


Already up to date.
[master b1cead8] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_083610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200806_083601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_083618 - Docker push completed successfully.


20200806_083618 - All completed successfully
20200806_093601 - Starting Build.

Sending build context to Docker daemon  1.396MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_093601
20200806_093601 - Build completed successfully.


Already up to date.
[master d8c307b] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200806_093609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200806_093601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_093616 - Docker push completed successfully.


20200806_093616 - All completed successfully
20200806_103601 - Starting Build.

Sending build context to Docker daemon  1.413MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_103601
20200806_103601 - Build completed successfully.


Already up to date.
[master 309fe64] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_103610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200806_103601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_103617 - Docker push completed successfully.


20200806_103617 - All completed successfully
20200806_113601 - Starting Build.

Sending build context to Docker daemon  1.428MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_113601
20200806_113601 - Build completed successfully.


Already up to date.
[master 718defe] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200806_113609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200806_113601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_113616 - Docker push completed successfully.


20200806_113616 - All completed successfully
20200806_123601 - Starting Build.

Sending build context to Docker daemon  1.444MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_123601
20200806_123601 - Build completed successfully.


Already up to date.
[master f340642] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200806_123610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200806_123601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_123618 - Docker push completed successfully.


20200806_123618 - All completed successfully
20200806_133601 - Starting Build.

Sending build context to Docker daemon  1.461MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_133601
20200806_133601 - Build completed successfully.


Already up to date.
[master a4adb4d] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_133610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200806_133601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_133618 - Docker push completed successfully.


20200806_133618 - All completed successfully
20200806_143601 - Starting Build.

Sending build context to Docker daemon  1.477MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_143601
20200806_143601 - Build completed successfully.


Already up to date.
[master d4ccf6c] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_143610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200806_143601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_143617 - Docker push completed successfully.


20200806_143617 - All completed successfully
20200806_153601 - Starting Build.

Sending build context to Docker daemon  1.492MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_153601
20200806_153602 - Build completed successfully.


Already up to date.
[master fe8d13d] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200806_153611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200806_153601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_153619 - Docker push completed successfully.


20200806_153619 - All completed successfully
20200806_163601 - Starting Build.

Sending build context to Docker daemon  1.508MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_163601
20200806_163601 - Build completed successfully.


Already up to date.
[master 2e55177] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_163610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200806_163601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_163617 - Docker push completed successfully.


20200806_163617 - All completed successfully
20200806_173601 - Starting Build.

Sending build context to Docker daemon  1.525MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_173601
20200806_173601 - Build completed successfully.


Already up to date.
[master 332cc1b] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200806_173611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200806_173601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_173618 - Docker push completed successfully.


20200806_173618 - All completed successfully
20200806_183601 - Starting Build.

Sending build context to Docker daemon  1.541MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_183601
20200806_183601 - Build completed successfully.


Already up to date.
[master a3661b8] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_183610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200806_183601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_183617 - Docker push completed successfully.


20200806_183617 - All completed successfully
20200806_193601 - Starting Build.

Sending build context to Docker daemon  1.558MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_193601
20200806_193601 - Build completed successfully.


Already up to date.
[master 1110e4c] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_193612 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200806_193601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_193620 - Docker push completed successfully.


20200806_193620 - All completed successfully
20200806_203601 - Starting Build.

Sending build context to Docker daemon  1.576MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_203601
20200806_203602 - Build completed successfully.


Already up to date.
[master e7ae21e] Automatic build $timestp
 1 file changed, 65 insertions(+)
20200806_203611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200806_203601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_203623 - Docker push completed successfully.


20200806_203623 - All completed successfully
20200806_213601 - Starting Build.

Sending build context to Docker daemon  1.591MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_213601
20200806_213601 - Build completed successfully.


Already up to date.
[master c9497e9] Automatic build $timestp
 1 file changed, 66 insertions(+)
20200806_213613 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200806_213601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_213623 - Docker push completed successfully.


20200806_213623 - All completed successfully
20200806_223001 - Starting Build.

Sending build context to Docker daemon  1.608MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_223001
20200806_223001 - Build completed successfully.


Already up to date.
[master f1c8bc0] Automatic build 20200806_223001
 2 files changed, 67 insertions(+), 1 deletion(-)
20200806_223012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200806_223001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_223020 - Docker push completed successfully.


20200806_223020 - All completed successfully
20200806_233001 - Starting Build.

Sending build context to Docker daemon  1.627MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200806_233001
20200806_233001 - Build completed successfully.


Already up to date.
[master 8fa5b9d] Automatic build 20200806_233001
 1 file changed, 66 insertions(+)
20200806_233012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200806_233001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200806_233019 - Docker push completed successfully.


20200806_233019 - All completed successfully
20200807_003001 - Starting Build.

Sending build context to Docker daemon  1.644MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_003001
20200807_003002 - Build completed successfully.


Already up to date.
[master 3508639] Automatic build 20200807_003001
 1 file changed, 66 insertions(+)
20200807_003012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200807_003001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_003020 - Docker push completed successfully.


20200807_003020 - All completed successfully
20200807_013001 - Starting Build.

Sending build context to Docker daemon   1.66MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_013001
20200807_013001 - Build completed successfully.


Already up to date.
[master 6bbe320] Automatic build 20200807_013001
 1 file changed, 66 insertions(+)
20200807_013013 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200807_013001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_013020 - Docker push completed successfully.


20200807_013020 - All completed successfully
20200807_023001 - Starting Build.

Sending build context to Docker daemon  1.678MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_023001
20200807_023001 - Build completed successfully.


Already up to date.
[master aa53dab] Automatic build 20200807_023001
 1 file changed, 66 insertions(+)
20200807_023013 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200807_023001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_023022 - Docker push completed successfully.


20200807_023022 - All completed successfully
20200807_033001 - Starting Build.

Sending build context to Docker daemon  1.695MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_033001
20200807_033002 - Build completed successfully.


Already up to date.
[master 79a5fd2] Automatic build 20200807_033001
 1 file changed, 66 insertions(+)
20200807_033012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
20200807_033001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_033021 - Docker push completed successfully.


20200807_033021 - All completed successfully
20200807_043001 - Starting Build.

Sending build context to Docker daemon  1.712MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_043001
20200807_043001 - Build completed successfully.


Already up to date.
[master bfc2b6b] Automatic build 20200807_043001
 1 file changed, 66 insertions(+)
20200807_043011 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200807_043001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_043019 - Docker push completed successfully.


20200807_043019 - All completed successfully
20200807_053001 - Starting Build.

Sending build context to Docker daemon   1.73MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_053001
20200807_053001 - Build completed successfully.


Already up to date.
[master e59eb0b] Automatic build 20200807_053001
 1 file changed, 66 insertions(+)
20200807_053013 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200807_053001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_053021 - Docker push completed successfully.


20200807_053021 - All completed successfully
20200807_063001 - Starting Build.

Sending build context to Docker daemon  1.747MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_063001
20200807_063001 - Build completed successfully.


Already up to date.
[master cd0fe4d] Automatic build 20200807_063001
 1 file changed, 66 insertions(+)
20200807_063013 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200807_063001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_063020 - Docker push completed successfully.


20200807_063020 - All completed successfully
20200807_073001 - Starting Build.

Sending build context to Docker daemon  1.765MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_073001
20200807_073001 - Build completed successfully.


Already up to date.
[master ae9f6d9] Automatic build 20200807_073001
 1 file changed, 66 insertions(+)
20200807_073012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200807_073001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_073020 - Docker push completed successfully.


20200807_073020 - All completed successfully
20200807_083001 - Starting Build.

Sending build context to Docker daemon  1.784MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_083001
20200807_083001 - Build completed successfully.


Already up to date.
[master 1963f43] Automatic build 20200807_083001
 1 file changed, 66 insertions(+)
20200807_083012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200807_083001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_083019 - Docker push completed successfully.


20200807_083019 - All completed successfully
20200807_093001 - Starting Build.

Sending build context to Docker daemon  1.801MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_093001
20200807_093001 - Build completed successfully.


Already up to date.
[master 8b7f556] Automatic build 20200807_093001
 1 file changed, 66 insertions(+)
20200807_093012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200807_093001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_093019 - Docker push completed successfully.


20200807_093019 - All completed successfully
20200807_103001 - Starting Build.

Sending build context to Docker daemon   1.82MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_103001
20200807_103001 - Build completed successfully.


Already up to date.
[master 060a72a] Automatic build 20200807_103001
 1 file changed, 65 insertions(+)
20200807_103012 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200807_103001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_103020 - Docker push completed successfully.


20200807_103020 - All completed successfully
20200807_113001 - Starting Build.

Sending build context to Docker daemon  1.858MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_113001
20200807_113001 - Build completed successfully.


Already up to date.
[master 675035b] Automatic build 20200807_113001
 1 file changed, 38 insertions(+)
20200807_113014 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0171a6524714: Waiting
fd0e7f89fb75: Waiting
a122d8ec09be: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Waiting
a6efc444afea: Waiting
b343ddcee16c: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200807_113001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_113132 - Docker push completed successfully.


20200807_113132 - All completed successfully
20200807_123001 - Starting Build.

Sending build context to Docker daemon  1.893MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_123001
20200807_123001 - Build completed successfully.


Already up to date.
[master 420dbac] Automatic build 20200807_123001
 1 file changed, 69 insertions(+)
20200807_123011 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200807_123001: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_123019 - Docker push completed successfully.


20200807_123019 - All completed successfully
20200807_132601 - Starting Build.

Sending build context to Docker daemon  1.911MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_132601
20200807_132602 - Build completed successfully.


Already up to date.
[master e72fd9a] Automatic build 20200807_132601
 1 file changed, 66 insertions(+)
20200807_132609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200807_132601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_132616 - Docker push completed successfully.


20200807_132616 - All completed successfully
20200807_142601 - Starting Build.

Sending build context to Docker daemon   1.93MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_142601
20200807_142602 - Build completed successfully.


Already up to date.
[master c3a8b58] Automatic build 20200807_142601
 1 file changed, 66 insertions(+)
20200807_142610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200807_142601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_142618 - Docker push completed successfully.


20200807_142618 - All completed successfully
20200807_152601 - Starting Build.

Sending build context to Docker daemon  1.949MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_152601
20200807_152602 - Build completed successfully.


Already up to date.
[master bd97fff] Automatic build 20200807_152601
 1 file changed, 66 insertions(+)
20200807_152610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200807_152601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_152618 - Docker push completed successfully.


20200807_152618 - All completed successfully
20200807_155418 - Starting Build.

Sending build context to Docker daemon  1.984MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_155418
20200807_155418 - Build completed successfully.


Already up to date.
[master a2f0447] Automatic build 20200807_155418
 1 file changed, 38 insertions(+)
20200807_155427 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200807_155418: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_155434 - Docker push completed successfully.


20200807_155434 - All completed successfully
20200807_162601 - Starting Build.

Sending build context to Docker daemon  2.004MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_162601
20200807_162601 - Build completed successfully.


Already up to date.
[master b37f4c2] Automatic build 20200807_162601
 1 file changed, 66 insertions(+)
20200807_162609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200807_162601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_162617 - Docker push completed successfully.


20200807_162617 - All completed successfully
20200807_172601 - Starting Build.

Sending build context to Docker daemon  2.024MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_172601
20200807_172602 - Build completed successfully.


Already up to date.
[master 7d6ed89] Automatic build 20200807_172601
 1 file changed, 65 insertions(+)
20200807_172612 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200807_172601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_172620 - Docker push completed successfully.


20200807_172620 - All completed successfully
20200807_182601 - Starting Build.

Sending build context to Docker daemon  2.042MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_182601
20200807_182601 - Build completed successfully.


Already up to date.
[master 6699178] Automatic build 20200807_182601
 1 file changed, 66 insertions(+)
20200807_182610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200807_182601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_182618 - Docker push completed successfully.


20200807_182618 - All completed successfully
20200807_192601 - Starting Build.

Sending build context to Docker daemon  2.062MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_192601
20200807_192601 - Build completed successfully.


Already up to date.
[master 219df82] Automatic build 20200807_192601
 1 file changed, 66 insertions(+)
20200807_192610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200807_192601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_192617 - Docker push completed successfully.


20200807_192617 - All completed successfully
20200807_202601 - Starting Build.

Sending build context to Docker daemon  2.081MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_202601
20200807_202601 - Build completed successfully.


Already up to date.
[master 5e0c59a] Automatic build 20200807_202601
 1 file changed, 66 insertions(+)
20200807_202611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200807_202601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_202620 - Docker push completed successfully.


20200807_202620 - All completed successfully
20200807_212601 - Starting Build.

Sending build context to Docker daemon  2.101MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_212601
20200807_212601 - Build completed successfully.


Already up to date.
[master f75a9e7] Automatic build 20200807_212601
 1 file changed, 66 insertions(+)
20200807_212611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200807_212601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_212622 - Docker push completed successfully.


20200807_212622 - All completed successfully
20200807_222601 - Starting Build.

Sending build context to Docker daemon  2.121MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_222601
20200807_222602 - Build completed successfully.


Already up to date.
[master dbf84a7] Automatic build 20200807_222601
 1 file changed, 66 insertions(+)
20200807_222611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200807_222601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_222620 - Docker push completed successfully.


20200807_222620 - All completed successfully
20200807_232602 - Starting Build.

Sending build context to Docker daemon   2.14MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200807_232602
20200807_232602 - Build completed successfully.


Already up to date.
[master 357db4c] Automatic build 20200807_232602
 1 file changed, 64 insertions(+)
20200807_232611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200807_232602: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200807_232618 - Docker push completed successfully.


20200807_232618 - All completed successfully
20200808_002601 - Starting Build.

Sending build context to Docker daemon  2.159MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_002601
20200808_002601 - Build completed successfully.


Already up to date.
[master 5ce87c7] Automatic build 20200808_002601
 1 file changed, 66 insertions(+)
20200808_002610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200808_002601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_002617 - Docker push completed successfully.


20200808_002617 - All completed successfully
20200808_012601 - Starting Build.

Sending build context to Docker daemon  2.179MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_012601
20200808_012601 - Build completed successfully.


Already up to date.
[master bc378f3] Automatic build 20200808_012601
 1 file changed, 66 insertions(+)
20200808_012610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200808_012601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_012617 - Docker push completed successfully.


20200808_012617 - All completed successfully
20200808_022601 - Starting Build.

Sending build context to Docker daemon    2.2MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_022601
20200808_022601 - Build completed successfully.


Already up to date.
[master 46ca741] Automatic build 20200808_022601
 1 file changed, 66 insertions(+)
20200808_022610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200808_022601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_022618 - Docker push completed successfully.


20200808_022618 - All completed successfully
20200808_032601 - Starting Build.

Sending build context to Docker daemon  2.219MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_032601
20200808_032601 - Build completed successfully.


Already up to date.
[master 865c49b] Automatic build 20200808_032601
 1 file changed, 66 insertions(+)
20200808_032609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200808_032601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_032616 - Docker push completed successfully.


20200808_032616 - All completed successfully
20200808_042601 - Starting Build.

Sending build context to Docker daemon   2.24MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_042601
20200808_042601 - Build completed successfully.


Already up to date.
[master 1bfda88] Automatic build 20200808_042601
 1 file changed, 66 insertions(+)
20200808_042610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200808_042601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_042617 - Docker push completed successfully.


20200808_042617 - All completed successfully
20200808_052601 - Starting Build.

Sending build context to Docker daemon   2.26MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_052601
20200808_052601 - Build completed successfully.


Already up to date.
[master 130b804] Automatic build 20200808_052601
 1 file changed, 65 insertions(+)
20200808_052609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200808_052601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_052617 - Docker push completed successfully.


20200808_052617 - All completed successfully
20200808_062601 - Starting Build.

Sending build context to Docker daemon   2.28MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_062601
20200808_062602 - Build completed successfully.


Already up to date.
[master 10681c9] Automatic build 20200808_062601
 1 file changed, 65 insertions(+)
20200808_062610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200808_062601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_062618 - Docker push completed successfully.


20200808_062618 - All completed successfully
20200808_072601 - Starting Build.

Sending build context to Docker daemon  2.301MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_072601
20200808_072601 - Build completed successfully.


Already up to date.
[master 684ffb9] Automatic build 20200808_072601
 1 file changed, 66 insertions(+)
20200808_072610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200808_072601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_072617 - Docker push completed successfully.


20200808_072617 - All completed successfully
20200808_082601 - Starting Build.

Sending build context to Docker daemon  2.323MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_082601
20200808_082601 - Build completed successfully.


Already up to date.
[master 5832215] Automatic build 20200808_082601
 1 file changed, 66 insertions(+)
20200808_082610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200808_082601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_082619 - Docker push completed successfully.


20200808_082619 - All completed successfully
20200808_092601 - Starting Build.

Sending build context to Docker daemon  2.344MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_092601
20200808_092601 - Build completed successfully.


Already up to date.
[master 5b79f00] Automatic build 20200808_092601
 1 file changed, 66 insertions(+)
20200808_092611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200808_092601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_092621 - Docker push completed successfully.


20200808_092621 - All completed successfully
20200808_102601 - Starting Build.

Sending build context to Docker daemon  2.365MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_102601
20200808_102601 - Build completed successfully.


Already up to date.
[master f26b1e3] Automatic build 20200808_102601
 1 file changed, 66 insertions(+)
20200808_102610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200808_102601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_102618 - Docker push completed successfully.


20200808_102618 - All completed successfully
20200808_112601 - Starting Build.

Sending build context to Docker daemon  2.388MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_112601
20200808_112602 - Build completed successfully.


Already up to date.
[master 47bc0ea] Automatic build 20200808_112601
 1 file changed, 66 insertions(+)
20200808_112613 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200808_112601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_112623 - Docker push completed successfully.


20200808_112623 - All completed successfully
20200808_122601 - Starting Build.

Sending build context to Docker daemon  2.409MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_122601
20200808_122602 - Build completed successfully.


Already up to date.
[master 65ea59f] Automatic build 20200808_122601
 1 file changed, 66 insertions(+)
20200808_122611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200808_122601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_122620 - Docker push completed successfully.


20200808_122620 - All completed successfully
20200808_132601 - Starting Build.

Sending build context to Docker daemon   2.43MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_132601
20200808_132601 - Build completed successfully.


Already up to date.
[master 1b0d0d6] Automatic build 20200808_132601
 1 file changed, 66 insertions(+)
20200808_132613 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200808_132601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_132623 - Docker push completed successfully.


20200808_132623 - All completed successfully
20200808_142601 - Starting Build.

Sending build context to Docker daemon  2.453MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_142601
20200808_142601 - Build completed successfully.


Already up to date.
[master 70fbe53] Automatic build 20200808_142601
 1 file changed, 66 insertions(+)
20200808_142610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200808_142601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_142617 - Docker push completed successfully.


20200808_142617 - All completed successfully
20200808_152601 - Starting Build.

Sending build context to Docker daemon  2.475MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_152601
20200808_152601 - Build completed successfully.


Already up to date.
[master bced1e0] Automatic build 20200808_152601
 1 file changed, 66 insertions(+)
20200808_152609 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200808_152601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_152617 - Docker push completed successfully.


20200808_152617 - All completed successfully
20200808_162601 - Starting Build.

Sending build context to Docker daemon  2.497MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_162601
20200808_162601 - Build completed successfully.


Already up to date.
[master ad4bc67] Automatic build 20200808_162601
 1 file changed, 66 insertions(+)
20200808_162610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200808_162601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_162618 - Docker push completed successfully.


20200808_162618 - All completed successfully
20200808_172601 - Starting Build.

Sending build context to Docker daemon   2.52MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_172601
20200808_172601 - Build completed successfully.


Already up to date.
[master 9f5f63d] Automatic build 20200808_172601
 1 file changed, 66 insertions(+)
20200808_172611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200808_172601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_172619 - Docker push completed successfully.


20200808_172619 - All completed successfully
20200808_182601 - Starting Build.

Sending build context to Docker daemon  2.543MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_182601
20200808_182601 - Build completed successfully.


Already up to date.
[master d40a01f] Automatic build 20200808_182601
 1 file changed, 66 insertions(+)
20200808_182610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200808_182601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_182618 - Docker push completed successfully.


20200808_182618 - All completed successfully
20200808_192601 - Starting Build.

Sending build context to Docker daemon  2.564MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_192601
20200808_192601 - Build completed successfully.


Already up to date.
[master 75514eb] Automatic build 20200808_192601
 1 file changed, 65 insertions(+)
20200808_192610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200808_192601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_192618 - Docker push completed successfully.


20200808_192618 - All completed successfully
20200808_202601 - Starting Build.

Sending build context to Docker daemon  2.587MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_202601
20200808_202602 - Build completed successfully.


Already up to date.
[master 04d7d87] Automatic build 20200808_202601
 1 file changed, 66 insertions(+)
20200808_202611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200808_202601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_202618 - Docker push completed successfully.


20200808_202618 - All completed successfully
20200808_212601 - Starting Build.

Sending build context to Docker daemon  2.609MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_212601
20200808_212602 - Build completed successfully.


Already up to date.
[master ae4477e] Automatic build 20200808_212601
 1 file changed, 66 insertions(+)
20200808_212610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200808_212601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_212618 - Docker push completed successfully.


20200808_212618 - All completed successfully
20200808_222601 - Starting Build.

Sending build context to Docker daemon  2.632MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_222601
20200808_222601 - Build completed successfully.


Already up to date.
[master de906f8] Automatic build 20200808_222601
 1 file changed, 66 insertions(+)
20200808_222610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200808_222601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_222618 - Docker push completed successfully.


20200808_222618 - All completed successfully
20200808_232601 - Starting Build.

Sending build context to Docker daemon  2.655MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200808_232601
20200808_232602 - Build completed successfully.


Already up to date.
[master ad3d2e3] Automatic build 20200808_232601
 1 file changed, 66 insertions(+)
20200808_232613 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200808_232601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200808_232622 - Docker push completed successfully.


20200808_232622 - All completed successfully
20200803_182601 - Starting Build.

Sending build context to Docker daemon  2.678MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200803_182601
20200803_182607 - Build completed successfully.


20200803_182607 - git
[master 2672c42] Automatic build 20200803_182601
 1 file changed, 65 insertions(+)
20200803_182607 - git
20200803_182607 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200803_182607 - Docker push FAILED!!


20200809_182601 - Starting Build.

Sending build context to Docker daemon  2.699MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200809_182601
20200809_182602 - Build completed successfully.


Already up to date.
[master cab8c74] Automatic build 20200809_182601
 1 file changed, 46 insertions(+)
20200809_182610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200809_182601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200809_182618 - Docker push completed successfully.


20200809_182618 - All completed successfully
20200809_192601 - Starting Build.

Sending build context to Docker daemon  2.722MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200809_192601
20200809_192602 - Build completed successfully.


Already up to date.
[master e165051] Automatic build 20200809_192601
 1 file changed, 66 insertions(+)
20200809_192611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200809_192601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200809_192621 - Docker push completed successfully.


20200809_192622 - All completed successfully
20200809_202601 - Starting Build.

Sending build context to Docker daemon  2.746MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200809_202601
20200809_202601 - Build completed successfully.


Already up to date.
[master ba72a79] Automatic build 20200809_202601
 1 file changed, 66 insertions(+)
20200809_202611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200809_202601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200809_202618 - Docker push completed successfully.


20200809_202618 - All completed successfully
20200809_212601 - Starting Build.

Sending build context to Docker daemon  2.769MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200809_212601
20200809_212601 - Build completed successfully.


Already up to date.
[master 48e3ec7] Automatic build 20200809_212601
 1 file changed, 66 insertions(+)
20200809_212611 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200809_212601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200809_212618 - Docker push completed successfully.


20200809_212618 - All completed successfully
20200809_222601 - Starting Build.

Sending build context to Docker daemon  2.793MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200809_222601
20200809_222601 - Build completed successfully.


Already up to date.
[master 43bb0e7] Automatic build 20200809_222601
 1 file changed, 66 insertions(+)
20200809_222610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200809_222601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200809_222618 - Docker push completed successfully.


20200809_222618 - All completed successfully
20200809_232601 - Starting Build.

Sending build context to Docker daemon  2.817MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200809_232601
20200809_232602 - Build completed successfully.


Already up to date.
[master 65e33d6] Automatic build 20200809_232601
 1 file changed, 66 insertions(+)
20200809_232610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
b343ddcee16c: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200809_232601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200809_232618 - Docker push completed successfully.


20200809_232618 - All completed successfully
20200810_002601 - Starting Build.

Sending build context to Docker daemon  2.841MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_002601
20200810_002602 - Build completed successfully.


Already up to date.
[master 003865e] Automatic build 20200810_002601
 1 file changed, 66 insertions(+)
20200810_002610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200810_002601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_002617 - Docker push completed successfully.


20200810_002617 - All completed successfully
20200810_012601 - Starting Build.

Sending build context to Docker daemon  2.865MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_012601
20200810_012601 - Build completed successfully.


Already up to date.
[master 9361f5f] Automatic build 20200810_012601
 1 file changed, 64 insertions(+)
20200810_012610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200810_012601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_012618 - Docker push completed successfully.


20200810_012618 - All completed successfully
20200810_022601 - Starting Build.

Sending build context to Docker daemon  2.889MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_022601
20200810_022601 - Build completed successfully.


Already up to date.
[master cf885e7] Automatic build 20200810_022601
 1 file changed, 66 insertions(+)
20200810_022610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200810_022601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_022617 - Docker push completed successfully.


20200810_022617 - All completed successfully
20200810_032601 - Starting Build.

Sending build context to Docker daemon  2.913MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_032601
20200810_032601 - Build completed successfully.


Already up to date.
[master 4c39ed8] Automatic build 20200810_032601
 1 file changed, 66 insertions(+)
20200810_032610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200810_032601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_032617 - Docker push completed successfully.


20200810_032617 - All completed successfully
20200810_042601 - Starting Build.

Sending build context to Docker daemon  2.938MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_042601
20200810_042601 - Build completed successfully.


Already up to date.
[master e971957] Automatic build 20200810_042601
 1 file changed, 66 insertions(+)
20200810_042610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200810_042601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_042618 - Docker push completed successfully.


20200810_042618 - All completed successfully
20200810_052601 - Starting Build.

Sending build context to Docker daemon  2.961MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_052601
20200810_052601 - Build completed successfully.


Already up to date.
[master 6324687] Automatic build 20200810_052601
 1 file changed, 65 insertions(+)
20200810_052610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200810_052601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_052618 - Docker push completed successfully.


20200810_052618 - All completed successfully
20200810_062601 - Starting Build.

Sending build context to Docker daemon  2.986MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_062601
20200810_062601 - Build completed successfully.


Already up to date.
[master 2d13e69] Automatic build 20200810_062601
 1 file changed, 66 insertions(+)
20200810_062610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200810_062601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_062618 - Docker push completed successfully.


20200810_062618 - All completed successfully
20200810_072601 - Starting Build.

Sending build context to Docker daemon  3.011MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_072601
20200810_072602 - Build completed successfully.


Already up to date.
[master 435bb77] Automatic build 20200810_072601
 1 file changed, 66 insertions(+)
20200810_072610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200810_072601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_072618 - Docker push completed successfully.


20200810_072618 - All completed successfully
20200810_082601 - Starting Build.

Sending build context to Docker daemon  3.035MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_082601
20200810_082601 - Build completed successfully.


Already up to date.
[master c8f0313] Automatic build 20200810_082601
 1 file changed, 66 insertions(+)
20200810_082610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200810_082601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_082617 - Docker push completed successfully.


20200810_082617 - All completed successfully
20200810_092601 - Starting Build.

Sending build context to Docker daemon  3.059MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN alias python='python3'
 ---> Using cache
 ---> 39c427a5c5f4
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 5ca4e818bd39
Successfully built 5ca4e818bd39
Successfully tagged blairy/python_3.8.5:20200810_092601
20200810_092601 - Build completed successfully.


Already up to date.
[master e1b7411] Automatic build 20200810_092601
 1 file changed, 66 insertions(+)
20200810_092610 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200810_092601: digest: sha256:0a1a548769742cde38babd3fed49fc480d44e1f31f3ea059f6ef6d4bb5169454 size: 2009
20200810_092617 - Docker push completed successfully.


20200810_092617 - All completed successfully
20200810_095342 - Starting Build.

Sending build context to Docker daemon  3.085MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 8680f81e968a
[91m/bin/sh: pip: not found
[0m20200810_095343 - Build FAILED!! Aborting.


20200810_102601 - Starting Build.

Sending build context to Docker daemon  3.086MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 98b65ef4a475
[91m/bin/sh: pip: not found
[0m20200810_102602 - Build FAILED!! Aborting.


20200810_103331 - Starting Build.

Sending build context to Docker daemon  3.087MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 6c8fc3d6fe1f
[91m/bin/sh: pip: not found
[0m20200810_103332 - Build FAILED!! Aborting.


20200810_112201 - Starting Build.

Sending build context to Docker daemon  3.088MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in f055b63db820
[91m/bin/sh: pip: not found
[0m20200810_112202 - Build FAILED!! Aborting.


20200810_122201 - Starting Build.

Sending build context to Docker daemon   3.09MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 8eadbee1bf60
[91m/bin/sh: pip: not found
[0m20200810_122202 - Build FAILED!! Aborting.


20200810_132201 - Starting Build.

Sending build context to Docker daemon  3.091MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in c15993ddff58
[91m/bin/sh: pip: not found
[0m20200810_132202 - Build FAILED!! Aborting.


20200810_142201 - Starting Build.

Sending build context to Docker daemon  3.092MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in a7b28eddcd93
[91m/bin/sh: pip: not found
[0m20200810_142214 - Build FAILED!! Aborting.


20200810_152201 - Starting Build.

Sending build context to Docker daemon  3.094MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 9ea5bc01933c
[91m/bin/sh: pip: not found
[0m20200810_152203 - Build FAILED!! Aborting.


20200810_162201 - Starting Build.

Sending build context to Docker daemon  3.095MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 7ecd32f6bd60
[91m/bin/sh: pip: not found
[0m20200810_162202 - Build FAILED!! Aborting.


20200810_172201 - Starting Build.

Sending build context to Docker daemon  3.096MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 05002138686e
[91m/bin/sh: pip: not found
[0m20200810_172202 - Build FAILED!! Aborting.


20200810_182201 - Starting Build.

Sending build context to Docker daemon  3.097MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in c71230ddc6f2
[91m/bin/sh: pip: not found
[0m20200810_182202 - Build FAILED!! Aborting.


20200810_192201 - Starting Build.

Sending build context to Docker daemon  3.098MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in f226b0e0ea7a
[91m/bin/sh: pip: not found
[0m20200810_192202 - Build FAILED!! Aborting.


20200810_202201 - Starting Build.

Sending build context to Docker daemon    3.1MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 04b7fd2d1177
[91m/bin/sh: pip: not found
[0m20200810_202202 - Build FAILED!! Aborting.


20200810_212201 - Starting Build.

Sending build context to Docker daemon  3.101MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 8afc118f17fe
[91m/bin/sh: pip: not found
[0m20200810_212202 - Build FAILED!! Aborting.


20200810_222201 - Starting Build.

Sending build context to Docker daemon  3.102MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 3842aba479ed
[91m/bin/sh: pip: not found
[0m20200810_222202 - Build FAILED!! Aborting.


20200810_232201 - Starting Build.

Sending build context to Docker daemon  3.103MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 78b83a88114d
[91m/bin/sh: pip: not found
[0m20200810_232202 - Build FAILED!! Aborting.


20200811_002201 - Starting Build.

Sending build context to Docker daemon  3.104MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in bae309241cc6
[91m/bin/sh: pip: not found
[0m20200811_002203 - Build FAILED!! Aborting.


20200811_012201 - Starting Build.

Sending build context to Docker daemon  3.106MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 5bf089482f17
[91m/bin/sh: pip: not found
[0m20200811_012203 - Build FAILED!! Aborting.


20200811_022201 - Starting Build.

Sending build context to Docker daemon  3.107MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in ccea464e1647
[91m/bin/sh: pip: not found
[0m20200811_022202 - Build FAILED!! Aborting.


20200811_032201 - Starting Build.

Sending build context to Docker daemon  3.108MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in ffae44396ebb
[91m/bin/sh: pip: not found
[0m20200811_032202 - Build FAILED!! Aborting.


20200811_042201 - Starting Build.

Sending build context to Docker daemon  3.109MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 4afee8b29f6d
[91m/bin/sh: pip: not found
[0m20200811_042202 - Build FAILED!! Aborting.


20200811_052201 - Starting Build.

Sending build context to Docker daemon   3.11MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in e447c4583c5a
[91m/bin/sh: pip: not found
[0m20200811_052202 - Build FAILED!! Aborting.


20200811_062201 - Starting Build.

Sending build context to Docker daemon  3.112MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 888d9df53bd9
[91m/bin/sh: pip: not found
[0m20200811_062201 - Build FAILED!! Aborting.


20200811_072201 - Starting Build.

Sending build context to Docker daemon  3.113MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in ba35e4b8f61a
[91m/bin/sh: pip: not found
[0m20200811_072202 - Build FAILED!! Aborting.


20200811_082201 - Starting Build.

Sending build context to Docker daemon  3.114MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 6a3a61935167
[91m/bin/sh: pip: not found
[0m20200811_082202 - Build FAILED!! Aborting.


20200811_092201 - Starting Build.

Sending build context to Docker daemon  3.116MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in c8cc3a653550
[91m/bin/sh: pip: not found
[0m20200811_092202 - Build FAILED!! Aborting.


20200811_102201 - Starting Build.

Sending build context to Docker daemon  3.117MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 9269e8a96011
[91m/bin/sh: pip: not found
[0m20200811_102202 - Build FAILED!! Aborting.


20200811_112201 - Starting Build.

Sending build context to Docker daemon  3.118MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in cecae932b835
[91m/bin/sh: pip: not found
[0m20200811_112202 - Build FAILED!! Aborting.


20200811_115638 - Starting Build.

Sending build context to Docker daemon  3.119MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Running in 879047451f73
[91m/bin/sh: pip: not found
[0m20200811_115639 - Build FAILED!! Aborting.


20200811_122201 - Starting Build.

Sending build context to Docker daemon  3.121MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     py3-pip make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 229f99a54ed7
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> dced08def2a3
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 128d08a3e5a2
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> c619eb6db3a4
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 08ec4c0263b3
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> fab99404e700
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Using cache
 ---> 558436124bf0
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1b7665e1124f
Successfully built 1b7665e1124f
Successfully tagged blairy/python_3.8.5:20200811_122201
20200811_122201 - Build completed successfully.


Already up to date.
[master 43af75c] Automatic build 20200811_122201
 2 files changed, 996 insertions(+), 2 deletions(-)
20200811_122209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
3bd22ab591cc: Preparing
f3deec4dbfeb: Preparing
747675a095cc: Preparing
f4b2de7c9a20: Preparing
c1b185a9f284: Preparing
97dd86e3ca0c: Preparing
c4dd0bbcd71f: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
97dd86e3ca0c: Waiting
c4dd0bbcd71f: Waiting
b343ddcee16c: Waiting
f4b2de7c9a20: Pushed
3bd22ab591cc: Pushed
20200811_122843 - Starting Build.

Sending build context to Docker daemon  3.147MB
Step 1/10 : FROM alpine:latest
 ---> a24bb4013296
Step 2/10 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/10 : RUN apk add --no-cache     py3-pip make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 229f99a54ed7
Step 4/10 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> dced08def2a3
Step 5/10 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 128d08a3e5a2
Step 6/10 : RUN cd /python && ./configure
 ---> Using cache
 ---> c619eb6db3a4
Step 7/10 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 08ec4c0263b3
Step 8/10 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> fab99404e700
Step 9/10 : RUN pip install bs4 && pip install requests
 ---> Using cache
 ---> 558436124bf0
Step 10/10 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1b7665e1124f
Successfully built 1b7665e1124f
Successfully tagged blairy/python_3.8.5:20200811_122843
20200811_122843 - Build completed successfully.


Already up to date.
[master 0557266] Automatic build 20200811_122843
 1 file changed, 56 insertions(+)
20200811_122853 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
3bd22ab591cc: Preparing
f3deec4dbfeb: Preparing
747675a095cc: Preparing
f4b2de7c9a20: Preparing
c1b185a9f284: Preparing
97dd86e3ca0c: Preparing
c4dd0bbcd71f: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
3bd22ab591cc: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
97dd86e3ca0c: 97dd86e3ca0c: Pushed
Pushed
b343ddcee16c: b343ddcee16c: Layer already exists
Layer already exists
50644c29ef5a: 50644c29ef5a: Layer already exists
Layer already exists
3bd22ab591cc: Layer already exists
f4b2de7c9a20: Layer already exists
c1b185a9f284: c1b185a9f284: Pushed
Pushed
747675a095cc: 747675a095cc: Pushed
Pushed
f3deec4dbfeb: Pushed
f3deec4dbfeb: Pushed
20200811_130443 - Docker push FAILED!!


20200811_130443 - Docker push FAILED!!


20200811_130746 - Starting Build.

Sending build context to Docker daemon  3.173MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Running in 6f93368cbc1e
Removing intermediate container 6f93368cbc1e
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_130746
20200811_130746 - Build completed successfully.


Already up to date.
[master 28abe48] Automatic build 20200811_130746
 2 files changed, 73 insertions(+), 2 deletions(-)
20200811_130754 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200811_130746: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_130811 - Docker push completed successfully.


20200811_130811 - All completed successfully
20200811_132201 - Starting Build.

Sending build context to Docker daemon  3.201MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_132201
20200811_132201 - Build completed successfully.


Already up to date.
[master 677644d] Automatic build 20200811_132201
 1 file changed, 63 insertions(+)
20200811_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200811_132201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_132218 - Docker push completed successfully.


20200811_132218 - All completed successfully
20200811_142201 - Starting Build.

Sending build context to Docker daemon  3.229MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_142201
20200811_142201 - Build completed successfully.


Already up to date.
[master cec08fe] Automatic build 20200811_142201
 1 file changed, 63 insertions(+)
20200811_142210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200811_142201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_142217 - Docker push completed successfully.


20200811_142217 - All completed successfully
20200811_152201 - Starting Build.

Sending build context to Docker daemon  3.255MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_152201
20200811_152201 - Build completed successfully.


Already up to date.
[master 3f3daf8] Automatic build 20200811_152201
 1 file changed, 63 insertions(+)
20200811_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200811_152201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_152217 - Docker push completed successfully.


20200811_152217 - All completed successfully
20200811_162201 - Starting Build.

Sending build context to Docker daemon  3.283MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_162201
20200811_162201 - Build completed successfully.


Already up to date.
[master c96a38b] Automatic build 20200811_162201
 1 file changed, 63 insertions(+)
20200811_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
20200811_162201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_162217 - Docker push completed successfully.


20200811_162217 - All completed successfully
20200811_172201 - Starting Build.

Sending build context to Docker daemon  3.312MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_172201
20200811_172202 - Build completed successfully.


Already up to date.
[master 260b79d] Automatic build 20200811_172201
 1 file changed, 63 insertions(+)
20200811_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200811_172201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_172218 - Docker push completed successfully.


20200811_172218 - All completed successfully
20200811_182201 - Starting Build.

Sending build context to Docker daemon  3.339MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_182201
20200811_182201 - Build completed successfully.


Already up to date.
[master 093b995] Automatic build 20200811_182201
 1 file changed, 63 insertions(+)
20200811_182210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200811_182201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_182217 - Docker push completed successfully.


20200811_182217 - All completed successfully
20200811_192201 - Starting Build.

Sending build context to Docker daemon  3.367MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_192201
20200811_192201 - Build completed successfully.


Already up to date.
[master ef217fc] Automatic build 20200811_192201
 1 file changed, 63 insertions(+)
20200811_192211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200811_192201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_192218 - Docker push completed successfully.


20200811_192218 - All completed successfully
20200811_202201 - Starting Build.

Sending build context to Docker daemon  3.395MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_202201
20200811_202201 - Build completed successfully.


Already up to date.
[master d2ac773] Automatic build 20200811_202201
 1 file changed, 63 insertions(+)
20200811_202210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200811_202201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_202216 - Docker push completed successfully.


20200811_202216 - All completed successfully
20200811_212201 - Starting Build.

Sending build context to Docker daemon  3.423MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_212201
20200811_212201 - Build completed successfully.


Already up to date.
[master e1a1699] Automatic build 20200811_212201
 1 file changed, 63 insertions(+)
20200811_212210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200811_212201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_212218 - Docker push completed successfully.


20200811_212218 - All completed successfully
20200811_222201 - Starting Build.

Sending build context to Docker daemon  3.452MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_222201
20200811_222201 - Build completed successfully.


Already up to date.
[master e818a70] Automatic build 20200811_222201
 1 file changed, 63 insertions(+)
20200811_222209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200811_222201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_222216 - Docker push completed successfully.


20200811_222216 - All completed successfully
20200811_232201 - Starting Build.

Sending build context to Docker daemon   3.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200811_232201
20200811_232202 - Build completed successfully.


Already up to date.
[master adef2d1] Automatic build 20200811_232201
 1 file changed, 62 insertions(+)
20200811_232211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200811_232201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200811_232219 - Docker push completed successfully.


20200811_232219 - All completed successfully
20200812_002201 - Starting Build.

Sending build context to Docker daemon  3.508MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_002201
20200812_002201 - Build completed successfully.


Already up to date.
[master 3022bd8] Automatic build 20200812_002201
 1 file changed, 62 insertions(+)
20200812_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200812_002201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_002219 - Docker push completed successfully.


20200812_002219 - All completed successfully
20200812_012201 - Starting Build.

Sending build context to Docker daemon  3.536MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_012201
20200812_012202 - Build completed successfully.


Already up to date.
[master 7a57fca] Automatic build 20200812_012201
 1 file changed, 62 insertions(+)
20200812_012211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
988875d15cd7: Waiting
b343ddcee16c: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200812_012201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_012218 - Docker push completed successfully.


20200812_012218 - All completed successfully
20200812_022202 - Starting Build.

Sending build context to Docker daemon  3.565MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_022202
20200812_022202 - Build completed successfully.


Already up to date.
[master 1df18c3] Automatic build 20200812_022202
 1 file changed, 63 insertions(+)
20200812_022211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_022202: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_022219 - Docker push completed successfully.


20200812_022219 - All completed successfully
20200812_032201 - Starting Build.

Sending build context to Docker daemon  3.593MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_032201
20200812_032201 - Build completed successfully.


Already up to date.
[master f7c991e] Automatic build 20200812_032201
 1 file changed, 63 insertions(+)
20200812_032210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200812_032201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_032218 - Docker push completed successfully.


20200812_032218 - All completed successfully
20200812_042201 - Starting Build.

Sending build context to Docker daemon  3.623MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_042201
20200812_042201 - Build completed successfully.


Already up to date.
[master 5023ade] Automatic build 20200812_042201
 1 file changed, 63 insertions(+)
20200812_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200812_042201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_042217 - Docker push completed successfully.


20200812_042217 - All completed successfully
20200812_052201 - Starting Build.

Sending build context to Docker daemon  3.652MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_052201
20200812_052201 - Build completed successfully.


Already up to date.
[master 855ba7e] Automatic build 20200812_052201
 1 file changed, 63 insertions(+)
20200812_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200812_052201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_052218 - Docker push completed successfully.


20200812_052218 - All completed successfully
20200812_062201 - Starting Build.

Sending build context to Docker daemon   3.68MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_062201
20200812_062201 - Build completed successfully.


Already up to date.
[master 31968ee] Automatic build 20200812_062201
 1 file changed, 63 insertions(+)
20200812_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200812_062201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_062218 - Docker push completed successfully.


20200812_062218 - All completed successfully
20200812_072201 - Starting Build.

Sending build context to Docker daemon  3.711MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_072201
20200812_072201 - Build completed successfully.


Already up to date.
[master a3de771] Automatic build 20200812_072201
 1 file changed, 63 insertions(+)
20200812_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200812_072201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_072218 - Docker push completed successfully.


20200812_072218 - All completed successfully
20200812_082201 - Starting Build.

Sending build context to Docker daemon   3.74MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_082201
20200812_082201 - Build completed successfully.


Already up to date.
[master 58b6b33] Automatic build 20200812_082201
 1 file changed, 61 insertions(+)
20200812_082211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_082201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_082219 - Docker push completed successfully.


20200812_082219 - All completed successfully
20200812_092201 - Starting Build.

Sending build context to Docker daemon  3.769MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_092201
20200812_092201 - Build completed successfully.


Already up to date.
[master c48acb1] Automatic build 20200812_092201
 1 file changed, 63 insertions(+)
20200812_092210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200812_092201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_092217 - Docker push completed successfully.


20200812_092217 - All completed successfully
20200812_102201 - Starting Build.

Sending build context to Docker daemon  3.798MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_102201
20200812_102201 - Build completed successfully.


Already up to date.
[master 8c8aecd] Automatic build 20200812_102201
 1 file changed, 63 insertions(+)
20200812_102210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200812_102201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_102218 - Docker push completed successfully.


20200812_102218 - All completed successfully
20200812_112201 - Starting Build.

Sending build context to Docker daemon  3.828MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_112201
20200812_112201 - Build completed successfully.


Already up to date.
[master 4101287] Automatic build 20200812_112201
 1 file changed, 63 insertions(+)
20200812_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200812_112201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_112217 - Docker push completed successfully.


20200812_112217 - All completed successfully
20200812_122201 - Starting Build.

Sending build context to Docker daemon  3.857MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_122201
20200812_122201 - Build completed successfully.


Already up to date.
[master f778e38] Automatic build 20200812_122201
 1 file changed, 63 insertions(+)
20200812_122210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_122201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_122217 - Docker push completed successfully.


20200812_122217 - All completed successfully
20200812_132201 - Starting Build.

Sending build context to Docker daemon  3.888MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_132201
20200812_132201 - Build completed successfully.


Already up to date.
[master 1a48aae] Automatic build 20200812_132201
 1 file changed, 63 insertions(+)
20200812_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_132201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_132218 - Docker push completed successfully.


20200812_132218 - All completed successfully
20200812_142201 - Starting Build.

Sending build context to Docker daemon  3.918MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_142201
20200812_142201 - Build completed successfully.


Already up to date.
[master 9c9f529] Automatic build 20200812_142201
 1 file changed, 63 insertions(+)
20200812_142211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200812_142201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_142218 - Docker push completed successfully.


20200812_142218 - All completed successfully
20200812_152201 - Starting Build.

Sending build context to Docker daemon  3.948MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_152201
20200812_152201 - Build completed successfully.


Already up to date.
[master f8927c1] Automatic build 20200812_152201
 1 file changed, 63 insertions(+)
20200812_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
20200812_152201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_152217 - Docker push completed successfully.


20200812_152217 - All completed successfully
20200812_162201 - Starting Build.

Sending build context to Docker daemon  3.978MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_162201
20200812_162201 - Build completed successfully.


Already up to date.
[master ea79553] Automatic build 20200812_162201
 1 file changed, 63 insertions(+)
20200812_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_162201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_162218 - Docker push completed successfully.


20200812_162218 - All completed successfully
20200812_172201 - Starting Build.

Sending build context to Docker daemon  4.009MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_172201
20200812_172201 - Build completed successfully.


Already up to date.
[master 482599d] Automatic build 20200812_172201
 1 file changed, 63 insertions(+)
20200812_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_172201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_172218 - Docker push completed successfully.


20200812_172218 - All completed successfully
20200812_182201 - Starting Build.

Sending build context to Docker daemon  4.039MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_182201
20200812_182201 - Build completed successfully.


Already up to date.
[master 11f8fae] Automatic build 20200812_182201
 1 file changed, 63 insertions(+)
20200812_182212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200812_182201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_182221 - Docker push completed successfully.


20200812_182221 - All completed successfully
20200812_192201 - Starting Build.

Sending build context to Docker daemon  4.069MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_192201
20200812_192202 - Build completed successfully.


Already up to date.
[master 956dcf8] Automatic build 20200812_192201
 1 file changed, 63 insertions(+)
20200812_192211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200812_192201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_192222 - Docker push completed successfully.


20200812_192222 - All completed successfully
20200812_202201 - Starting Build.

Sending build context to Docker daemon    4.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_202201
20200812_202202 - Build completed successfully.


Already up to date.
[master 7b8e3f0] Automatic build 20200812_202201
 1 file changed, 63 insertions(+)
20200812_202211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_202201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_202219 - Docker push completed successfully.


20200812_202219 - All completed successfully
20200812_212201 - Starting Build.

Sending build context to Docker daemon   4.13MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_212201
20200812_212202 - Build completed successfully.


Already up to date.
[master 5bb7bb7] Automatic build 20200812_212201
 1 file changed, 63 insertions(+)
20200812_212213 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200812_212201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_212224 - Docker push completed successfully.


20200812_212224 - All completed successfully
20200812_222201 - Starting Build.

Sending build context to Docker daemon  4.162MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_222201
20200812_222202 - Build completed successfully.


Already up to date.
[master af8ed81] Automatic build 20200812_222201
 1 file changed, 63 insertions(+)
20200812_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200812_222201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_222218 - Docker push completed successfully.


20200812_222218 - All completed successfully
20200812_232201 - Starting Build.

Sending build context to Docker daemon  4.193MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200812_232201
20200812_232201 - Build completed successfully.


Already up to date.
[master 3374df3] Automatic build 20200812_232201
 1 file changed, 63 insertions(+)
20200812_232211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200812_232201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200812_232218 - Docker push completed successfully.


20200812_232218 - All completed successfully
20200813_002201 - Starting Build.

Sending build context to Docker daemon  4.223MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_002201
20200813_002201 - Build completed successfully.


Already up to date.
[master 32fc441] Automatic build 20200813_002201
 1 file changed, 62 insertions(+)
20200813_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
0171a6524714: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200813_002201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_002218 - Docker push completed successfully.


20200813_002218 - All completed successfully
20200813_012201 - Starting Build.

Sending build context to Docker daemon  4.254MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_012201
20200813_012201 - Build completed successfully.


Already up to date.
[master a6edd5d] Automatic build 20200813_012201
 1 file changed, 63 insertions(+)
20200813_012210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
988875d15cd7: Waiting
50644c29ef5a: Waiting
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
057a0a11b1cd: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_012201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_012217 - Docker push completed successfully.


20200813_012217 - All completed successfully
20200813_022201 - Starting Build.

Sending build context to Docker daemon  4.285MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_022201
20200813_022201 - Build completed successfully.


Already up to date.
[master add05c8] Automatic build 20200813_022201
 1 file changed, 63 insertions(+)
20200813_022210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200813_022201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_022218 - Docker push completed successfully.


20200813_022218 - All completed successfully
20200813_032201 - Starting Build.

Sending build context to Docker daemon  4.317MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_032201
20200813_032201 - Build completed successfully.


Already up to date.
[master 1395232] Automatic build 20200813_032201
 1 file changed, 63 insertions(+)
20200813_032209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200813_032201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_032217 - Docker push completed successfully.


20200813_032217 - All completed successfully
20200813_042201 - Starting Build.

Sending build context to Docker daemon  4.348MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_042201
20200813_042201 - Build completed successfully.


Already up to date.
[master f75d07c] Automatic build 20200813_042201
 1 file changed, 63 insertions(+)
20200813_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
a6efc444afea: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200813_042201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_042218 - Docker push completed successfully.


20200813_042218 - All completed successfully
20200813_052201 - Starting Build.

Sending build context to Docker daemon   4.38MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_052201
20200813_052201 - Build completed successfully.


Already up to date.
[master 30453b3] Automatic build 20200813_052201
 1 file changed, 62 insertions(+)
20200813_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_052201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_052218 - Docker push completed successfully.


20200813_052218 - All completed successfully
20200813_062201 - Starting Build.

Sending build context to Docker daemon  4.411MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_062201
20200813_062201 - Build completed successfully.


Already up to date.
[master cf0a743] Automatic build 20200813_062201
 1 file changed, 63 insertions(+)
20200813_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
057a0a11b1cd: Layer already exists
50644c29ef5a: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
20200813_062201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_062217 - Docker push completed successfully.


20200813_062217 - All completed successfully
20200813_072201 - Starting Build.

Sending build context to Docker daemon  4.443MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_072201
20200813_072201 - Build completed successfully.


Already up to date.
[master ffce9fd] Automatic build 20200813_072201
 1 file changed, 63 insertions(+)
20200813_072209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
988875d15cd7: Waiting
50644c29ef5a: Waiting
a6efc444afea: Layer already exists
a122d8ec09be: Layer already exists
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
fd0e7f89fb75: Layer already exists
b343ddcee16c: Layer already exists
988875d15cd7: Layer already exists
50644c29ef5a: Layer already exists
20200813_072201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_072218 - Docker push completed successfully.


20200813_072218 - All completed successfully
20200813_082201 - Starting Build.

Sending build context to Docker daemon  4.475MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_082201
20200813_082201 - Build completed successfully.


Already up to date.
[master 28b7ffa] Automatic build 20200813_082201
 1 file changed, 62 insertions(+)
20200813_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
0171a6524714: Layer already exists
057a0a11b1cd: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_082201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_082217 - Docker push completed successfully.


20200813_082217 - All completed successfully
20200813_092201 - Starting Build.

Sending build context to Docker daemon  4.507MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_092201
20200813_092201 - Build completed successfully.


Already up to date.
[master d6722a9] Automatic build 20200813_092201
 1 file changed, 63 insertions(+)
20200813_092209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a122d8ec09be: Layer already exists
fd0e7f89fb75: Layer already exists
a6efc444afea: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_092201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_092217 - Docker push completed successfully.


20200813_092217 - All completed successfully
20200813_102201 - Starting Build.

Sending build context to Docker daemon  4.538MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev     llvm readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 40e142d9168a
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> c5e78eb2d286
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> aa76f9971551
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> e1d2a38b5b9e
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 4afdb78bb91b
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> 0a8961677bdc
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 2620745d570c
Successfully built 2620745d570c
Successfully tagged blairy/python_3.8.5:20200813_102201
20200813_102201 - Build completed successfully.


Already up to date.
[master e7fa1ba] Automatic build 20200813_102201
 1 file changed, 63 insertions(+)
20200813_102209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
fd0e7f89fb75: Preparing
0171a6524714: Preparing
a122d8ec09be: Preparing
057a0a11b1cd: Preparing
a6efc444afea: Preparing
988875d15cd7: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
988875d15cd7: Waiting
057a0a11b1cd: Layer already exists
0171a6524714: Layer already exists
a6efc444afea: Layer already exists
fd0e7f89fb75: Layer already exists
a122d8ec09be: Layer already exists
988875d15cd7: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_102201: digest: sha256:551e4f847e1f10eba96bb65f144c8e8be96103b62de0b24eb0fe8c79bf294a36 size: 2009
20200813_102218 - Docker push completed successfully.


20200813_102218 - All completed successfully
20200813_104056 - Starting Build.

Sending build context to Docker daemon   4.57MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Running in ca7492c066fe
fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz
(1/92) Installing libgcc (9.3.0-r2)
(2/92) Installing libstdc++ (9.3.0-r2)
(3/92) Installing binutils (2.34-r1)
(4/92) Installing gmp (6.2.0-r0)
(5/92) Installing isl (0.18-r0)
(6/92) Installing libgomp (9.3.0-r2)
(7/92) Installing libatomic (9.3.0-r2)
(8/92) Installing libgphobos (9.3.0-r2)
(9/92) Installing mpfr4 (4.0.2-r4)
(10/92) Installing mpc1 (1.1.0-r1)
(11/92) Installing gcc (9.3.0-r2)
(12/92) Installing gdbm (1.13-r1)
(13/92) Installing gdbm-dev (1.13-r1)
(14/92) Installing ca-certificates (20191127-r4)
(15/92) Installing nghttp2-libs (1.41.0-r0)
(16/92) Installing libcurl (7.69.1-r0)
(17/92) Installing expat (2.2.9-r1)
(18/92) Installing pcre2 (10.35-r0)
(19/92) Installing git (2.26.2-r0)
(20/92) Installing libbz2 (1.0.8-r1)
(21/92) Installing musl-dev (1.1.24-r9)
(22/92) Installing libc-dev (0.7.2-r3)
(23/92) Installing libffi (3.3-r2)
(24/92) Installing libffi-dbg (3.3-r2)
(25/92) Installing linux-headers (5.4.5-r1)
(26/92) Installing pkgconf (1.7.2-r0)
(27/92) Installing libffi-dev (3.3-r2)
(28/92) Installing libuuid (2.35.2-r0)
(29/92) Installing xz-libs (5.2.5-r0)
(30/92) Installing libxml2 (2.9.10-r4)
(31/92) Installing llvm10-libs (10.0.0-r2)
(32/92) Installing llvm10 (10.0.0-r2)
(33/92) Installing make (4.3-r0)
(34/92) Installing ncurses-terminfo-base (6.2_p20200523-r0)
(35/92) Installing ncurses5-libs (5.9-r1)
(36/92) Installing ncurses5-widec-libs (5.9-r1)
(37/92) Installing openssl-dev (1.1.1g-r0)
(38/92) Installing libhistory (8.0.4-r0)
(39/92) Installing ncurses-libs (6.2_p20200523-r0)
(40/92) Installing ncurses-dev (6.2_p20200523-r0)
(41/92) Installing readline (8.0.4-r0)
(42/92) Installing readline-dev (8.0.4-r0)
(43/92) Installing sqlite (3.32.1-r0)
(44/92) Installing sqlite-libs (3.32.1-r0)
(45/92) Installing sqlite-dev (3.32.1-r0)
(46/92) Installing tcl (8.6.10-r0)
(47/92) Installing zlib-dev (1.2.11-r3)
(48/92) Installing tcl-dev (8.6.10-r0)
(49/92) Installing libxau (1.0.9-r0)
(50/92) Installing libbsd (0.10.0-r0)
(51/92) Installing libxdmcp (1.1.3-r0)
(52/92) Installing libxcb (1.14-r1)
(53/92) Installing libx11 (1.6.11-r0)
(54/92) Installing libxrender (0.9.10-r3)
(55/92) Installing brotli-libs (1.0.7-r5)
(56/92) Installing libpng (1.6.37-r1)
(57/92) Installing freetype (2.10.2-r0)
(58/92) Installing fontconfig (2.13.1-r2)
(59/92) Installing libxft (2.3.3-r0)
(60/92) Installing tk (8.6.10-r1)
(61/92) Installing xorgproto (2020.1-r0)
(62/92) Installing libxau-dev (1.0.9-r0)
(63/92) Installing xcb-proto (1.14-r0)
(64/92) Installing libxdmcp-dev (1.1.3-r0)
(65/92) Installing libxcb-dev (1.14-r1)
(66/92) Installing xtrans (1.4.0-r1)
(67/92) Installing libx11-dev (1.6.11-r0)
(68/92) Installing expat-dev (2.2.9-r1)
(69/92) Installing brotli-dev (1.0.7-r5)
(70/92) Installing libpng-dev (1.6.37-r1)
(71/92) Installing freetype-dev (2.10.2-r0)
(72/92) Installing libblkid (2.35.2-r0)
(73/92) Installing blkid (2.35.2-r0)
(74/92) Installing libcap-ng (0.7.10-r0)
(75/92) Installing setpriv (2.35.2-r0)
(76/92) Installing libmount (2.35.2-r0)
(77/92) Installing libsmartcols (2.35.2-r0)
(78/92) Installing findmnt (2.35.2-r0)
(79/92) Installing mcookie (2.35.2-r0)
(80/92) Installing hexdump (2.35.2-r0)
(81/92) Installing lsblk (2.35.2-r0)
(82/92) Installing libfdisk (2.35.2-r0)
(83/92) Installing sfdisk (2.35.2-r0)
(84/92) Installing cfdisk (2.35.2-r0)
(85/92) Installing util-linux (2.35.2-r0)
(86/92) Installing util-linux-dev (2.35.2-r0)
(87/92) Installing fontconfig-dev (2.13.1-r2)
(88/92) Installing libxrender-dev (0.9.10-r3)
(89/92) Installing libxft-dev (2.3.3-r0)
(90/92) Installing tk-dev (8.6.10-r1)
(91/92) Installing xz (5.2.5-r0)
(92/92) Installing xz-dev (5.2.5-r0)
Executing busybox-1.31.1-r19.trigger
Executing ca-certificates-20191127-r4.trigger
OK: 277 MiB in 106 packages
Removing intermediate container ca7492c066fe
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Running in 4601cf2d3a2d
[91mConnecting to www.python.org (151.101.28.223:443)
[0m[91msaving to 'Python-3.8.5.tar.xz'
[0m[91mPython-3.8.5.tar.xz    5% |*                               |  893k  0:00:18 ETA
[0m[91mPython-3.8.5.tar.xz   10% |***                             | 1869k  0:00:16 ETA
[0m[91mPython-3.8.5.tar.xz   17% |*****                           | 3053k  0:00:14 ETA
[0m[91mPython-3.8.5.tar.xz   23% |*******                         | 4061k  0:00:13 ETA
[0m[91mPython-3.8.5.tar.xz   29% |*********                       | 5181k  0:00:11 ETA
[0m[91mPython-3.8.5.tar.xz   30% |*********                       | 5373k  0:00:13 ETA
[0m[91mPython-3.8.5.tar.xz   34% |***********                     | 6093k  0:00:13 ETA
[0m[91mPython-3.8.5.tar.xz   40% |*************                   | 7165k  0:00:11 ETA
[0m[91mPython-3.8.5.tar.xz   46% |***************                 | 8253k  0:00:10 ETA
[0m[91mPython-3.8.5.tar.xz   53% |*****************               | 9357k  0:00:08 ETA
[0m[91mPython-3.8.5.tar.xz   57% |******************              |  9.9M  0:00:07 ETA
[0m[91mPython-3.8.5.tar.xz   63% |********************            | 10.9M  0:00:06 ETA
[0m[91mPython-3.8.5.tar.xz   70% |**********************          | 12.0M  0:00:05 ETA
[0m[91mPython-3.8.5.tar.xz   76% |************************        | 13.1M  0:00:04 ETA
[0m[91mPython-3.8.5.tar.xz   83% |**************************      | 14.2M  0:00:03 ETA
[0m[91mPython-3.8.5.tar.xz   89% |****************************    | 15.4M  0:00:01 ETA
[0m[91mPython-3.8.5.tar.xz   96% |******************************  | 16.5M  0:00:00 ETA
[0m[91mPython-3.8.5.tar.xz  100% |********************************| 17.1M  0:00:00 ETA
'Python-3.8.5.tar.xz' saved
[0mRemoving intermediate container 4601cf2d3a2d
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Running in c7dfbeff3be0
Python-3.8.5/
Python-3.8.5/CODE_OF_CONDUCT.md
Python-3.8.5/README.rst
Python-3.8.5/Doc/
Python-3.8.5/Doc/howto/
Python-3.8.5/Doc/howto/pyporting.rst
Python-3.8.5/Doc/howto/logging-cookbook.rst
Python-3.8.5/Doc/howto/logging_flow.png
Python-3.8.5/Doc/howto/sorting.rst
Python-3.8.5/Doc/howto/functional.rst
Python-3.8.5/Doc/howto/regex.rst
Python-3.8.5/Doc/howto/ipaddress.rst
Python-3.8.5/Doc/howto/argparse.rst
Python-3.8.5/Doc/howto/urllib2.rst
Python-3.8.5/Doc/howto/unicode.rst
Python-3.8.5/Doc/howto/index.rst
Python-3.8.5/Doc/howto/logging.rst
Python-3.8.5/Doc/howto/curses.rst
Python-3.8.5/Doc/howto/descriptor.rst
Python-3.8.5/Doc/howto/sockets.rst
Python-3.8.5/Doc/howto/instrumentation.rst
Python-3.8.5/Doc/howto/cporting.rst
Python-3.8.5/Doc/howto/clinic.rst
Python-3.8.5/Doc/README.rst
Python-3.8.5/Doc/install/
Python-3.8.5/Doc/install/index.rst
Python-3.8.5/Doc/whatsnew/
Python-3.8.5/Doc/whatsnew/3.6.rst
Python-3.8.5/Doc/whatsnew/2.2.rst
Python-3.8.5/Doc/whatsnew/3.8.rst
Python-3.8.5/Doc/whatsnew/changelog.rst
Python-3.8.5/Doc/whatsnew/3.2.rst
Python-3.8.5/Doc/whatsnew/3.5.rst
Python-3.8.5/Doc/whatsnew/2.6.rst
Python-3.8.5/Doc/whatsnew/3.0.rst
Python-3.8.5/Doc/whatsnew/2.7.rst
Python-3.8.5/Doc/whatsnew/3.3.rst
Python-3.8.5/Doc/whatsnew/index.rst
Python-3.8.5/Doc/whatsnew/2.0.rst
Python-3.8.5/Doc/whatsnew/2.4.rst
Python-3.8.5/Doc/whatsnew/2.1.rst
Python-3.8.5/Doc/whatsnew/2.5.rst
Python-3.8.5/Doc/whatsnew/2.3.rst
Python-3.8.5/Doc/whatsnew/3.7.rst
Python-3.8.5/Doc/whatsnew/3.1.rst
Python-3.8.5/Doc/whatsnew/3.4.rst
Python-3.8.5/Doc/license.rst
Python-3.8.5/Doc/tutorial/
Python-3.8.5/Doc/tutorial/controlflow.rst
Python-3.8.5/Doc/tutorial/interactive.rst
Python-3.8.5/Doc/tutorial/whatnow.rst
Python-3.8.5/Doc/tutorial/appetite.rst
Python-3.8.5/Doc/tutorial/interpreter.rst
Python-3.8.5/Doc/tutorial/errors.rst
Python-3.8.5/Doc/tutorial/inputoutput.rst
Python-3.8.5/Doc/tutorial/datastructures.rst
Python-3.8.5/Doc/tutorial/stdlib2.rst
Python-3.8.5/Doc/tutorial/floatingpoint.rst
Python-3.8.5/Doc/tutorial/appendix.rst
Python-3.8.5/Doc/tutorial/stdlib.rst
Python-3.8.5/Doc/tutorial/venv.rst
Python-3.8.5/Doc/tutorial/index.rst
Python-3.8.5/Doc/tutorial/introduction.rst
Python-3.8.5/Doc/tutorial/classes.rst
Python-3.8.5/Doc/tutorial/modules.rst
Python-3.8.5/Doc/tools/
Python-3.8.5/Doc/tools/static/
Python-3.8.5/Doc/tools/static/changelog_search.js
Python-3.8.5/Doc/tools/static/switchers.js
Python-3.8.5/Doc/tools/susp-ignored.csv
Python-3.8.5/Doc/tools/templates/
Python-3.8.5/Doc/tools/templates/indexsidebar.html
Python-3.8.5/Doc/tools/templates/indexcontent.html
Python-3.8.5/Doc/tools/templates/layout.html
Python-3.8.5/Doc/tools/templates/customsourcelink.html
Python-3.8.5/Doc/tools/templates/opensearch.xml
Python-3.8.5/Doc/tools/templates/download.html
Python-3.8.5/Doc/tools/templates/dummy.html
Python-3.8.5/Doc/tools/extensions/
Python-3.8.5/Doc/tools/extensions/suspicious.py
Python-3.8.5/Doc/tools/extensions/patchlevel.py
Python-3.8.5/Doc/tools/extensions/pyspecific.py
Python-3.8.5/Doc/tools/extensions/escape4chm.py
Python-3.8.5/Doc/tools/extensions/c_annotations.py
Python-3.8.5/Doc/tools/rstlint.py
Python-3.8.5/Doc/Makefile
Python-3.8.5/Doc/reference/
Python-3.8.5/Doc/reference/simple_stmts.rst
Python-3.8.5/Doc/reference/toplevel_components.rst
Python-3.8.5/Doc/reference/grammar.rst
Python-3.8.5/Doc/reference/compound_stmts.rst
Python-3.8.5/Doc/reference/expressions.rst
Python-3.8.5/Doc/reference/index.rst
Python-3.8.5/Doc/reference/import.rst
Python-3.8.5/Doc/reference/executionmodel.rst
Python-3.8.5/Doc/reference/datamodel.rst
Python-3.8.5/Doc/reference/introduction.rst
Python-3.8.5/Doc/reference/lexical_analysis.rst
Python-3.8.5/Doc/conf.py
Python-3.8.5/Doc/bugs.rst
Python-3.8.5/Doc/contents.rst
Python-3.8.5/Doc/includes/
Python-3.8.5/Doc/includes/dbpickle.py
Python-3.8.5/Doc/includes/minidom-example.py
Python-3.8.5/Doc/includes/email-alternative.py
Python-3.8.5/Doc/includes/custom2.c
Python-3.8.5/Doc/includes/run-func.c
Python-3.8.5/Doc/includes/custom3.c
Python-3.8.5/Doc/includes/email-unpack.py
Python-3.8.5/Doc/includes/mp_newtype.py
Python-3.8.5/Doc/includes/mp_pool.py
Python-3.8.5/Doc/includes/sublist.c
Python-3.8.5/Doc/includes/test.py
Python-3.8.5/Doc/includes/tzinfo_examples.py
Python-3.8.5/Doc/includes/custom.c
Python-3.8.5/Doc/includes/mp_workers.py
Python-3.8.5/Doc/includes/email-read-alternative.py
Python-3.8.5/Doc/includes/custom4.c
Python-3.8.5/Doc/includes/sqlite3/
Python-3.8.5/Doc/includes/sqlite3/parse_colnames.py
Python-3.8.5/Doc/includes/sqlite3/mysumaggr.py
Python-3.8.5/Doc/includes/sqlite3/row_factory.py
Python-3.8.5/Doc/includes/sqlite3/shortcut_methods.py
Python-3.8.5/Doc/includes/sqlite3/adapter_point_1.py
Python-3.8.5/Doc/includes/sqlite3/executemany_2.py
Python-3.8.5/Doc/includes/sqlite3/converter_point.py
Python-3.8.5/Doc/includes/sqlite3/countcursors.py
Python-3.8.5/Doc/includes/sqlite3/adapter_datetime.py
Python-3.8.5/Doc/includes/sqlite3/text_factory.py
Python-3.8.5/Doc/includes/sqlite3/execsql_printall_1.py
Python-3.8.5/Doc/includes/sqlite3/ctx_manager.py
Python-3.8.5/Doc/includes/sqlite3/adapter_point_2.py
Python-3.8.5/Doc/includes/sqlite3/execsql_fetchonerow.py
Python-3.8.5/Doc/includes/sqlite3/pysqlite_datetime.py
Python-3.8.5/Doc/includes/sqlite3/createdb.py
Python-3.8.5/Doc/includes/sqlite3/execute_1.py
Python-3.8.5/Doc/includes/sqlite3/rowclass.py
Python-3.8.5/Doc/includes/sqlite3/insert_more_people.py
Python-3.8.5/Doc/includes/sqlite3/load_extension.py
Python-3.8.5/Doc/includes/sqlite3/executemany_1.py
Python-3.8.5/Doc/includes/sqlite3/shared_cache.py
Python-3.8.5/Doc/includes/sqlite3/executescript.py
Python-3.8.5/Doc/includes/sqlite3/complete_statement.py
Python-3.8.5/Doc/includes/sqlite3/simple_tableprinter.py
Python-3.8.5/Doc/includes/sqlite3/collation_reverse.py
Python-3.8.5/Doc/includes/sqlite3/md5func.py
Python-3.8.5/Doc/includes/typestruct.h
Python-3.8.5/Doc/includes/email-simple.py
Python-3.8.5/Doc/includes/email-mime.py
Python-3.8.5/Doc/includes/email-dir.py
Python-3.8.5/Doc/includes/setup.py
Python-3.8.5/Doc/includes/email-headers.py
Python-3.8.5/Doc/includes/turtle-star.py
Python-3.8.5/Doc/make.bat
Python-3.8.5/Doc/extending/
Python-3.8.5/Doc/extending/building.rst
Python-3.8.5/Doc/extending/newtypes_tutorial.rst
Python-3.8.5/Doc/extending/newtypes.rst
Python-3.8.5/Doc/extending/windows.rst
Python-3.8.5/Doc/extending/index.rst
Python-3.8.5/Doc/extending/extending.rst
Python-3.8.5/Doc/extending/embedding.rst
Python-3.8.5/Doc/distributing/
Python-3.8.5/Doc/distributing/index.rst
Python-3.8.5/Doc/c-api/
Python-3.8.5/Doc/c-api/capsule.rst
Python-3.8.5/Doc/c-api/slice.rst
Python-3.8.5/Doc/c-api/set.rst
Python-3.8.5/Doc/c-api/method.rst
Python-3.8.5/Doc/c-api/contextvars.rst
Python-3.8.5/Doc/c-api/refcounting.rst
Python-3.8.5/Doc/c-api/concrete.rst
Python-3.8.5/Doc/c-api/mapping.rst
Python-3.8.5/Doc/c-api/objimpl.rst
Python-3.8.5/Doc/c-api/sys.rst
Python-3.8.5/Doc/c-api/list.rst
Python-3.8.5/Doc/c-api/complex.rst
Python-3.8.5/Doc/c-api/dict.rst
Python-3.8.5/Doc/c-api/none.rst
Python-3.8.5/Doc/c-api/utilities.rst
Python-3.8.5/Doc/c-api/datetime.rst
Python-3.8.5/Doc/c-api/objbuffer.rst
Python-3.8.5/Doc/c-api/init_config.rst
Python-3.8.5/Doc/c-api/gcsupport.rst
Python-3.8.5/Doc/c-api/veryhigh.rst
Python-3.8.5/Doc/c-api/type.rst
Python-3.8.5/Doc/c-api/float.rst
Python-3.8.5/Doc/c-api/bytes.rst
Python-3.8.5/Doc/c-api/code.rst
Python-3.8.5/Doc/c-api/bytearray.rst
Python-3.8.5/Doc/c-api/marshal.rst
Python-3.8.5/Doc/c-api/unicode.rst
Python-3.8.5/Doc/c-api/module.rst
Python-3.8.5/Doc/c-api/reflection.rst
Python-3.8.5/Doc/c-api/bool.rst
Python-3.8.5/Doc/c-api/index.rst
Python-3.8.5/Doc/c-api/allocation.rst
Python-3.8.5/Doc/c-api/tuple.rst
Python-3.8.5/Doc/c-api/coro.rst
Python-3.8.5/Doc/c-api/import.rst
Python-3.8.5/Doc/c-api/gen.rst
Python-3.8.5/Doc/c-api/sequence.rst
Python-3.8.5/Doc/c-api/function.rst
Python-3.8.5/Doc/c-api/stable.rst
Python-3.8.5/Doc/c-api/init.rst
Python-3.8.5/Doc/c-api/number.rst
Python-3.8.5/Doc/c-api/memoryview.rst
Python-3.8.5/Doc/c-api/descriptor.rst
Python-3.8.5/Doc/c-api/iter.rst
Python-3.8.5/Doc/c-api/typeobj.rst
Python-3.8.5/Doc/c-api/arg.rst
Python-3.8.5/Doc/c-api/intro.rst
Python-3.8.5/Doc/c-api/long.rst
Python-3.8.5/Doc/c-api/weakref.rst
Python-3.8.5/Doc/c-api/exceptions.rst
Python-3.8.5/Doc/c-api/conversion.rst
Python-3.8.5/Doc/c-api/abstract.rst
Python-3.8.5/Doc/c-api/buffer.rst
Python-3.8.5/Doc/c-api/codec.rst
Python-3.8.5/Doc/c-api/memory.rst
Python-3.8.5/Doc/c-api/apiabiversion.rst
Python-3.8.5/Doc/c-api/cell.rst
Python-3.8.5/Doc/c-api/structures.rst
Python-3.8.5/Doc/c-api/file.rst
Python-3.8.5/Doc/c-api/object.rst
Python-3.8.5/Doc/c-api/iterator.rst
Python-3.8.5/Doc/data/
Python-3.8.5/Doc/data/refcounts.dat
Python-3.8.5/Doc/distutils/
Python-3.8.5/Doc/distutils/uploading.rst
Python-3.8.5/Doc/distutils/builtdist.rst
Python-3.8.5/Doc/distutils/setupscript.rst
Python-3.8.5/Doc/distutils/sourcedist.rst
Python-3.8.5/Doc/distutils/apiref.rst
Python-3.8.5/Doc/distutils/configfile.rst
Python-3.8.5/Doc/distutils/index.rst
Python-3.8.5/Doc/distutils/_setuptools_disclaimer.rst
Python-3.8.5/Doc/distutils/introduction.rst
Python-3.8.5/Doc/distutils/extending.rst
Python-3.8.5/Doc/distutils/packageindex.rst
Python-3.8.5/Doc/distutils/commandref.rst
Python-3.8.5/Doc/distutils/examples.rst
Python-3.8.5/Doc/glossary.rst
Python-3.8.5/Doc/about.rst
Python-3.8.5/Doc/installing/
Python-3.8.5/Doc/installing/index.rst
Python-3.8.5/Doc/copyright.rst
Python-3.8.5/Doc/library/
Python-3.8.5/Doc/library/difflib.rst
Python-3.8.5/Doc/library/tty.rst
Python-3.8.5/Doc/library/codeop.rst
Python-3.8.5/Doc/library/asyncio.rst
Python-3.8.5/Doc/library/__future__.rst
Python-3.8.5/Doc/library/tk.rst
Python-3.8.5/Doc/library/syslog.rst
Python-3.8.5/Doc/library/posix.rst
Python-3.8.5/Doc/library/warnings.rst
Python-3.8.5/Doc/library/pyexpat.rst
Python-3.8.5/Doc/library/xml.etree.elementtree.rst
Python-3.8.5/Doc/library/pyclbr.rst
Python-3.8.5/Doc/library/allos.rst
Python-3.8.5/Doc/library/logging.config.rst
Python-3.8.5/Doc/library/sysconfig.rst
Python-3.8.5/Doc/library/urllib.error.rst
Python-3.8.5/Doc/library/collections.rst
Python-3.8.5/Doc/library/email.contentmanager.rst
Python-3.8.5/Doc/library/poplib.rst
Python-3.8.5/Doc/library/traceback.rst
Python-3.8.5/Doc/library/email.headerregistry.rst
Python-3.8.5/Doc/library/othergui.rst
Python-3.8.5/Doc/library/textwrap.rst
Python-3.8.5/Doc/library/sndhdr.rst
Python-3.8.5/Doc/library/msilib.rst
Python-3.8.5/Doc/library/importlib.rst
Python-3.8.5/Doc/library/tabnanny.rst
Python-3.8.5/Doc/library/email.mime.rst
Python-3.8.5/Doc/library/contextvars.rst
Python-3.8.5/Doc/library/profile.rst
Python-3.8.5/Doc/library/multiprocessing.shared_memory.rst
Python-3.8.5/Doc/library/fcntl.rst
Python-3.8.5/Doc/library/spwd.rst
Python-3.8.5/Doc/library/http.rst
Python-3.8.5/Doc/library/statistics.rst
Python-3.8.5/Doc/library/ctypes.rst
Python-3.8.5/Doc/library/distribution.rst
Python-3.8.5/Doc/library/pdb.rst
Python-3.8.5/Doc/library/dbm.rst
Python-3.8.5/Doc/library/configparser.rst
Python-3.8.5/Doc/library/email.errors.rst
Python-3.8.5/Doc/library/undoc.rst
Python-3.8.5/Doc/library/glob.rst
Python-3.8.5/Doc/library/imaplib.rst
Python-3.8.5/Doc/library/ossaudiodev.rst
Python-3.8.5/Doc/library/email.utils.rst
Python-3.8.5/Doc/library/urllib.robotparser.rst
Python-3.8.5/Doc/library/asyncore.rst
Python-3.8.5/Doc/library/hashlib-blake2-tree.png
Python-3.8.5/Doc/library/audioop.rst
Python-3.8.5/Doc/library/aifc.rst
Python-3.8.5/Doc/library/json.rst
Python-3.8.5/Doc/library/threading.rst
Python-3.8.5/Doc/library/itertools.rst
Python-3.8.5/Doc/library/smtplib.rst
Python-3.8.5/Doc/library/enum.rst
Python-3.8.5/Doc/library/filecmp.rst
Python-3.8.5/Doc/library/internet.rst
Python-3.8.5/Doc/library/development.rst
Python-3.8.5/Doc/library/curses.panel.rst
Python-3.8.5/Doc/library/formatter.rst
Python-3.8.5/Doc/library/http.cookiejar.rst
Python-3.8.5/Doc/library/curses.ascii.rst
Python-3.8.5/Doc/library/numbers.rst
Python-3.8.5/Doc/library/sys.rst
Python-3.8.5/Doc/library/zipimport.rst
Python-3.8.5/Doc/library/cmd.rst
Python-3.8.5/Doc/library/tkinter.scrolledtext.rst
Python-3.8.5/Doc/library/functional.rst
Python-3.8.5/Doc/library/asyncio-queue.rst
Python-3.8.5/Doc/library/asyncio-eventloop.rst
Python-3.8.5/Doc/library/2to3.rst
Python-3.8.5/Doc/library/ssl.rst
Python-3.8.5/Doc/library/gzip.rst
Python-3.8.5/Doc/library/ensurepip.rst
Python-3.8.5/Doc/library/fileformats.rst
Python-3.8.5/Doc/library/tarfile.rst
Python-3.8.5/Doc/library/pickle.rst
Python-3.8.5/Doc/library/subprocess.rst
Python-3.8.5/Doc/library/asyncio-future.rst
Python-3.8.5/Doc/library/email.charset.rst
Python-3.8.5/Doc/library/tkinter.tix.rst
Python-3.8.5/Doc/library/ast.rst
Python-3.8.5/Doc/library/io.rst
Python-3.8.5/Doc/library/concurrency.rst
Python-3.8.5/Doc/library/token-list.inc
Python-3.8.5/Doc/library/secrets.rst
Python-3.8.5/Doc/library/bdb.rst
Python-3.8.5/Doc/library/timeit.rst
Python-3.8.5/Doc/library/cmath.rst
Python-3.8.5/Doc/library/random.rst
Python-3.8.5/Doc/library/doctest.rst
Python-3.8.5/Doc/library/audit_events.rst
Python-3.8.5/Doc/library/tkinter.rst
Python-3.8.5/Doc/library/turtle-star.png
Python-3.8.5/Doc/library/quopri.rst
Python-3.8.5/Doc/library/pathlib-inheritance.svg
Python-3.8.5/Doc/library/math.rst
Python-3.8.5/Doc/library/filesys.rst
Python-3.8.5/Doc/library/decimal.rst
Python-3.8.5/Doc/library/getpass.rst
Python-3.8.5/Doc/library/email.compat32-message.rst
Python-3.8.5/Doc/library/errno.rst
Python-3.8.5/Doc/library/dummy_threading.rst
Python-3.8.5/Doc/library/zipapp.rst
Python-3.8.5/Doc/library/datetime.rst
Python-3.8.5/Doc/library/test.rst
Python-3.8.5/Doc/library/netdata.rst
Python-3.8.5/Doc/library/ipc.rst
Python-3.8.5/Doc/library/zlib.rst
Python-3.8.5/Doc/library/termios.rst
Python-3.8.5/Doc/library/zipfile.rst
Python-3.8.5/Doc/library/asyncio-api-index.rst
Python-3.8.5/Doc/library/socketserver.rst
Python-3.8.5/Doc/library/mm.rst
Python-3.8.5/Doc/library/select.rst
Python-3.8.5/Doc/library/smtpd.rst
Python-3.8.5/Doc/library/types.rst
Python-3.8.5/Doc/library/frameworks.rst
Python-3.8.5/Doc/library/wave.rst
Python-3.8.5/Doc/library/html.rst
Python-3.8.5/Doc/library/xmlrpc.rst
Python-3.8.5/Doc/library/pydoc.rst
Python-3.8.5/Doc/library/binary.rst
Python-3.8.5/Doc/library/symbol.rst
Python-3.8.5/Doc/library/tokenize.rst
Python-3.8.5/Doc/library/pathlib-inheritance.png
Python-3.8.5/Doc/library/asyncio-subprocess.rst
Python-3.8.5/Doc/library/misc.rst
Python-3.8.5/Doc/library/xml.sax.utils.rst
Python-3.8.5/Doc/library/concurrent.rst
Python-3.8.5/Doc/library/ipaddress.rst
Python-3.8.5/Doc/library/email.rst
Python-3.8.5/Doc/library/persistence.rst
Python-3.8.5/Doc/library/logging.handlers.rst
Python-3.8.5/Doc/library/unittest.mock.rst
Python-3.8.5/Doc/library/asyncio-policy.rst
Python-3.8.5/Doc/library/http.server.rst
Python-3.8.5/Doc/library/unicodedata.rst
Python-3.8.5/Doc/library/mimetypes.rst
Python-3.8.5/Doc/library/dis.rst
Python-3.8.5/Doc/library/email.encoders.rst
Python-3.8.5/Doc/library/token.rst
Python-3.8.5/Doc/library/http.client.rst
Python-3.8.5/Doc/library/pprint.rst
Python-3.8.5/Doc/library/importlib.metadata.rst
Python-3.8.5/Doc/library/abc.rst
Python-3.8.5/Doc/library/readline.rst
Python-3.8.5/Doc/library/lzma.rst
Python-3.8.5/Doc/library/code.rst
Python-3.8.5/Doc/library/xml.sax.rst
Python-3.8.5/Doc/library/turtle-star.pdf
Python-3.8.5/Doc/library/locale.rst
Python-3.8.5/Doc/library/bisect.rst
Python-3.8.5/Doc/library/atexit.rst
Python-3.8.5/Doc/library/sunau.rst
Python-3.8.5/Doc/library/venv.rst
Python-3.8.5/Doc/library/pipes.rst
Python-3.8.5/Doc/library/msvcrt.rst
Python-3.8.5/Doc/library/constants.rst
Python-3.8.5/Doc/library/text.rst
Python-3.8.5/Doc/library/xmlrpc.server.rst
Python-3.8.5/Doc/library/urllib.rst
Python-3.8.5/Doc/library/argparse.rst
Python-3.8.5/Doc/library/codecs.rst
Python-3.8.5/Doc/library/getopt.rst
Python-3.8.5/Doc/library/email.examples.rst
Python-3.8.5/Doc/library/email.iterators.rst
Python-3.8.5/Doc/library/i18n.rst
Python-3.8.5/Doc/library/marshal.rst
Python-3.8.5/Doc/library/shlex.rst
Python-3.8.5/Doc/library/telnetlib.rst
Python-3.8.5/Doc/library/tkinter.ttk.rst
Python-3.8.5/Doc/library/nntplib.rst
Python-3.8.5/Doc/library/xml.rst
Python-3.8.5/Doc/library/socket.rst
Python-3.8.5/Doc/library/urllib.request.rst
Python-3.8.5/Doc/library/builtins.rst
Python-3.8.5/Doc/library/unittest.mock-examples.rst
Python-3.8.5/Doc/library/csv.rst
Python-3.8.5/Doc/library/tulip_coro.dia
Python-3.8.5/Doc/library/collections.abc.rst
Python-3.8.5/Doc/library/xmlrpc.client.rst
Python-3.8.5/Doc/library/reprlib.rst
Python-3.8.5/Doc/library/python.rst
Python-3.8.5/Doc/library/site.rst
Python-3.8.5/Doc/library/windows.rst
Python-3.8.5/Doc/library/fnmatch.rst
Python-3.8.5/Doc/library/markup.rst
Python-3.8.5/Doc/library/binascii.rst
Python-3.8.5/Doc/library/stat.rst
Python-3.8.5/Doc/library/cgitb.rst
Python-3.8.5/Doc/library/shelve.rst
Python-3.8.5/Doc/library/http.cookies.rst
Python-3.8.5/Doc/library/idle.rst
Python-3.8.5/Doc/library/compileall.rst
Python-3.8.5/Doc/library/tempfile.rst
Python-3.8.5/Doc/library/copyreg.rst
Python-3.8.5/Doc/library/ftplib.rst
Python-3.8.5/Doc/library/py_compile.rst
Python-3.8.5/Doc/library/pickletools.rst
Python-3.8.5/Doc/library/index.rst
Python-3.8.5/Doc/library/xml.sax.handler.rst
Python-3.8.5/Doc/library/distutils.rst
Python-3.8.5/Doc/library/time.rst
Python-3.8.5/Doc/library/bz2.rst
Python-3.8.5/Doc/library/nis.rst
Python-3.8.5/Doc/library/runpy.rst
Python-3.8.5/Doc/library/uuid.rst
Python-3.8.5/Doc/library/functions.rst
Python-3.8.5/Doc/library/crypto.rst
Python-3.8.5/Doc/library/symtable.rst
Python-3.8.5/Doc/library/stringprep.rst
Python-3.8.5/Doc/library/email.generator.rst
Python-3.8.5/Doc/library/asyncio-llapi-index.rst
Python-3.8.5/Doc/library/tulip_coro.png
Python-3.8.5/Doc/library/trace.rst
Python-3.8.5/Doc/library/fractions.rst
Python-3.8.5/Doc/library/asyncio-exceptions.rst
Python-3.8.5/Doc/library/asynchat.rst
Python-3.8.5/Doc/library/logging.rst
Python-3.8.5/Doc/library/html.parser.rst
Python-3.8.5/Doc/library/curses.rst
Python-3.8.5/Doc/library/platform.rst
Python-3.8.5/Doc/library/dataclasses.rst
Python-3.8.5/Doc/library/__main__.rst
Python-3.8.5/Doc/library/faulthandler.rst
Python-3.8.5/Doc/library/debug.rst
Python-3.8.5/Doc/library/chunk.rst
Python-3.8.5/Doc/library/operator.rst
Python-3.8.5/Doc/library/functools.rst
Python-3.8.5/Doc/library/asyncio-dev.rst
Python-3.8.5/Doc/library/turtle.rst
Python-3.8.5/Doc/library/turtle-star.ps
Python-3.8.5/Doc/library/crypt.rst
Python-3.8.5/Doc/library/calendar.rst
Python-3.8.5/Doc/library/asyncio-sync.rst
Python-3.8.5/Doc/library/shutil.rst
Python-3.8.5/Doc/library/netrc.rst
Python-3.8.5/Doc/library/wsgiref.rst
Python-3.8.5/Doc/library/colorsys.rst
Python-3.8.5/Doc/library/queue.rst
Python-3.8.5/Doc/library/_dummy_thread.rst
Python-3.8.5/Doc/library/hmac.rst
Python-3.8.5/Doc/library/pty.rst
Python-3.8.5/Doc/library/_thread.rst
Python-3.8.5/Doc/library/concurrent.futures.rst
Python-3.8.5/Doc/library/array.rst
Python-3.8.5/Doc/library/language.rst
Python-3.8.5/Doc/library/gc.rst
Python-3.8.5/Doc/library/winreg.rst
Python-3.8.5/Doc/library/xml.dom.minidom.rst
Python-3.8.5/Doc/library/asyncio-protocol.rst
Python-3.8.5/Doc/library/linecache.rst
Python-3.8.5/Doc/library/mmap.rst
Python-3.8.5/Doc/library/parser.rst
Python-3.8.5/Doc/library/imp.rst
Python-3.8.5/Doc/library/binhex.rst
Python-3.8.5/Doc/library/tracemalloc.rst
Python-3.8.5/Doc/library/pkgutil.rst
Python-3.8.5/Doc/library/sched.rst
Python-3.8.5/Doc/library/intro.rst
Python-3.8.5/Doc/library/re.rst
Python-3.8.5/Doc/library/string.rst
Python-3.8.5/Doc/library/base64.rst
Python-3.8.5/Doc/library/hashlib.rst
Python-3.8.5/Doc/library/superseded.rst
Python-3.8.5/Doc/library/weakref.rst
Python-3.8.5/Doc/library/cgi.rst
Python-3.8.5/Doc/library/exceptions.rst
Python-3.8.5/Doc/library/numeric.rst
Python-3.8.5/Doc/library/fileinput.rst
Python-3.8.5/Doc/library/imghdr.rst
Python-3.8.5/Doc/library/signal.rst
Python-3.8.5/Doc/library/asyncio-platforms.rst
Python-3.8.5/Doc/library/pathlib.rst
Python-3.8.5/Doc/library/copy.rst
Python-3.8.5/Doc/library/struct.rst
Python-3.8.5/Doc/library/custominterp.rst
Python-3.8.5/Doc/library/urllib.parse.rst
Python-3.8.5/Doc/library/asyncio-stream.rst
Python-3.8.5/Doc/library/typing.rst
Python-3.8.5/Doc/library/modulefinder.rst
Python-3.8.5/Doc/library/asyncio-task.rst
Python-3.8.5/Doc/library/webbrowser.rst
Python-3.8.5/Doc/library/mailcap.rst
Python-3.8.5/Doc/library/uu.rst
Python-3.8.5/Doc/library/email.parser.rst
Python-3.8.5/Doc/library/inspect.rst
Python-3.8.5/Doc/library/modules.rst
Python-3.8.5/Doc/library/xml.dom.rst
Python-3.8.5/Doc/library/xml.sax.reader.rst
Python-3.8.5/Doc/library/unix.rst
Python-3.8.5/Doc/library/heapq.rst
Python-3.8.5/Doc/library/gettext.rst
Python-3.8.5/Doc/library/stdtypes.rst
Python-3.8.5/Doc/library/optparse.rst
Python-3.8.5/Doc/library/selectors.rst
Python-3.8.5/Doc/library/plistlib.rst
Python-3.8.5/Doc/library/html.entities.rst
Python-3.8.5/Doc/library/email.message.rst
Python-3.8.5/Doc/library/unittest.rst
Python-3.8.5/Doc/library/xdrlib.rst
Python-3.8.5/Doc/library/keyword.rst
Python-3.8.5/Doc/library/resource.rst
Python-3.8.5/Doc/library/mailbox.rst
Python-3.8.5/Doc/library/winsound.rst
Python-3.8.5/Doc/library/contextlib.rst
Python-3.8.5/Doc/library/archiving.rst
Python-3.8.5/Doc/library/email.policy.rst
Python-3.8.5/Doc/library/grp.rst
Python-3.8.5/Doc/library/xml.dom.pulldom.rst
Python-3.8.5/Doc/library/rlcompleter.rst
Python-3.8.5/Doc/library/datatypes.rst
Python-3.8.5/Doc/library/os.rst
Python-3.8.5/Doc/library/email.header.rst
Python-3.8.5/Doc/library/multiprocessing.rst
Python-3.8.5/Doc/library/sqlite3.rst
Python-3.8.5/Doc/library/pwd.rst
Python-3.8.5/Doc/library/os.path.rst
Python-3.8.5/Doc/using/
Python-3.8.5/Doc/using/venv-create.inc
Python-3.8.5/Doc/using/cmdline.rst
Python-3.8.5/Doc/using/mac.rst
Python-3.8.5/Doc/using/editors.rst
Python-3.8.5/Doc/using/windows.rst
Python-3.8.5/Doc/using/index.rst
Python-3.8.5/Doc/using/win_installer.png
Python-3.8.5/Doc/using/unix.rst
Python-3.8.5/Doc/faq/
Python-3.8.5/Doc/faq/gui.rst
Python-3.8.5/Doc/faq/python-video-icon.png
Python-3.8.5/Doc/faq/library.rst
Python-3.8.5/Doc/faq/programming.rst
Python-3.8.5/Doc/faq/general.rst
Python-3.8.5/Doc/faq/windows.rst
Python-3.8.5/Doc/faq/index.rst
Python-3.8.5/Doc/faq/design.rst
Python-3.8.5/Doc/faq/installed.rst
Python-3.8.5/Doc/faq/extending.rst
Python-3.8.5/Modules/
Python-3.8.5/Modules/_testmultiphase.c
Python-3.8.5/Modules/README
Python-3.8.5/Modules/grpmodule.c
Python-3.8.5/Modules/Setup
Python-3.8.5/Modules/_heapqmodule.c
Python-3.8.5/Modules/selectmodule.c
Python-3.8.5/Modules/_datetimemodule.c
Python-3.8.5/Modules/unicodename_db.h
Python-3.8.5/Modules/makexp_aix
Python-3.8.5/Modules/_blake2/
Python-3.8.5/Modules/_blake2/blake2b_impl.c
Python-3.8.5/Modules/_blake2/impl/
Python-3.8.5/Modules/_blake2/impl/blake2sp.c
Python-3.8.5/Modules/_blake2/impl/blake2-dispatch.c
Python-3.8.5/Modules/_blake2/impl/blake2b-round.h
Python-3.8.5/Modules/_blake2/impl/blake2s-load-sse41.h
Python-3.8.5/Modules/_blake2/impl/blake2b-load-sse41.h
Python-3.8.5/Modules/_blake2/impl/blake2b-ref.c
Python-3.8.5/Modules/_blake2/impl/blake2s-load-sse2.h
Python-3.8.5/Modules/_blake2/impl/blake2sp-test.c
Python-3.8.5/Modules/_blake2/impl/blake2-kat.h
Python-3.8.5/Modules/_blake2/impl/blake2bp-test.c
Python-3.8.5/Modules/_blake2/impl/blake2s-load-xop.h
Python-3.8.5/Modules/_blake2/impl/blake2s-round.h
Python-3.8.5/Modules/_blake2/impl/blake2s-test.c
Python-3.8.5/Modules/_blake2/impl/blake2bp.c
Python-3.8.5/Modules/_blake2/impl/blake2s.c
Python-3.8.5/Modules/_blake2/impl/blake2.h
Python-3.8.5/Modules/_blake2/impl/blake2s-ref.c
Python-3.8.5/Modules/_blake2/impl/blake2-config.h
Python-3.8.5/Modules/_blake2/impl/blake2b-test.c
Python-3.8.5/Modules/_blake2/impl/blake2-impl.h
Python-3.8.5/Modules/_blake2/impl/blake2b.c
Python-3.8.5/Modules/_blake2/impl/blake2b-load-sse2.h
Python-3.8.5/Modules/_blake2/blake2b2s.py
Python-3.8.5/Modules/_blake2/blake2ns.h
Python-3.8.5/Modules/_blake2/blake2s_impl.c
Python-3.8.5/Modules/_blake2/clinic/
Python-3.8.5/Modules/_blake2/clinic/blake2b_impl.c.h
Python-3.8.5/Modules/_blake2/clinic/blake2s_impl.c.h
Python-3.8.5/Modules/_blake2/blake2module.c
Python-3.8.5/Modules/xxsubtype.c
Python-3.8.5/Modules/_elementtree.c
Python-3.8.5/Modules/_sre.c
Python-3.8.5/Modules/spwdmodule.c
Python-3.8.5/Modules/_math.h
Python-3.8.5/Modules/_operator.c
Python-3.8.5/Modules/_collectionsmodule.c
Python-3.8.5/Modules/hashtable.c
Python-3.8.5/Modules/_statisticsmodule.c
Python-3.8.5/Modules/pyexpat.c
Python-3.8.5/Modules/expat/
Python-3.8.5/Modules/expat/xmltok.c
Python-3.8.5/Modules/expat/xmltok_impl.c
Python-3.8.5/Modules/expat/COPYING
Python-3.8.5/Modules/expat/iasciitab.h
Python-3.8.5/Modules/expat/xmlparse.c
Python-3.8.5/Modules/expat/expat_external.h
Python-3.8.5/Modules/expat/ascii.h
Python-3.8.5/Modules/expat/winconfig.h
Python-3.8.5/Modules/expat/xmltok.h
Python-3.8.5/Modules/expat/latin1tab.h
Python-3.8.5/Modules/expat/expat.h
Python-3.8.5/Modules/expat/nametab.h
Python-3.8.5/Modules/expat/pyexpatns.h
Python-3.8.5/Modules/expat/xmlrole.h
Python-3.8.5/Modules/expat/expat_config.h
Python-3.8.5/Modules/expat/xmltok_impl.h
Python-3.8.5/Modules/expat/xmltok_ns.c
Python-3.8.5/Modules/expat/xmlrole.c
Python-3.8.5/Modules/expat/siphash.h
Python-3.8.5/Modules/expat/internal.h
Python-3.8.5/Modules/expat/utf8tab.h
Python-3.8.5/Modules/expat/asciitab.h
Python-3.8.5/Modules/_asynciomodule.c
Python-3.8.5/Modules/_codecsmodule.c
Python-3.8.5/Modules/_posixsubprocess.c
Python-3.8.5/Modules/sha512module.c
Python-3.8.5/Modules/_contextvarsmodule.c
Python-3.8.5/Modules/_bisectmodule.c
Python-3.8.5/Modules/_gdbmmodule.c
Python-3.8.5/Modules/posixmodule.c
Python-3.8.5/Modules/gc_weakref.txt
Python-3.8.5/Modules/cjkcodecs/
Python-3.8.5/Modules/cjkcodecs/multibytecodec.h
Python-3.8.5/Modules/cjkcodecs/README
Python-3.8.5/Modules/cjkcodecs/mappings_jisx0213_pair.h
Python-3.8.5/Modules/cjkcodecs/mappings_cn.h
Python-3.8.5/Modules/cjkcodecs/_codecs_hk.c
Python-3.8.5/Modules/cjkcodecs/mappings_kr.h
Python-3.8.5/Modules/cjkcodecs/mappings_tw.h
Python-3.8.5/Modules/cjkcodecs/_codecs_jp.c
Python-3.8.5/Modules/cjkcodecs/cjkcodecs.h
Python-3.8.5/Modules/cjkcodecs/clinic/
Python-3.8.5/Modules/cjkcodecs/clinic/multibytecodec.c.h
Python-3.8.5/Modules/cjkcodecs/_codecs_iso2022.c
Python-3.8.5/Modules/cjkcodecs/mappings_hk.h
Python-3.8.5/Modules/cjkcodecs/_codecs_kr.c
Python-3.8.5/Modules/cjkcodecs/multibytecodec.c
Python-3.8.5/Modules/cjkcodecs/alg_jisx0201.h
Python-3.8.5/Modules/cjkcodecs/_codecs_tw.c
Python-3.8.5/Modules/cjkcodecs/_codecs_cn.c
Python-3.8.5/Modules/cjkcodecs/mappings_jp.h
Python-3.8.5/Modules/cjkcodecs/emu_jisx0213_2000.h
Python-3.8.5/Modules/_cryptmodule.c
Python-3.8.5/Modules/itertoolsmodule.c
Python-3.8.5/Modules/zlibmodule.c
Python-3.8.5/Modules/binascii.c
Python-3.8.5/Modules/posixmodule.h
Python-3.8.5/Modules/socketmodule.c
Python-3.8.5/Modules/tkappinit.c
Python-3.8.5/Modules/_testinternalcapi.c
Python-3.8.5/Modules/xxlimited.c
Python-3.8.5/Modules/_xxsubinterpretersmodule.c
Python-3.8.5/Modules/rotatingtree.h
Python-3.8.5/Modules/sha1module.c
Python-3.8.5/Modules/unicodedata_db.h
Python-3.8.5/Modules/_sha3/
Python-3.8.5/Modules/_sha3/README.txt
Python-3.8.5/Modules/_sha3/kcp/
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-unrolling.macros
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-opt64-config.h
Python-3.8.5/Modules/_sha3/kcp/KeccakSponge.inc
Python-3.8.5/Modules/_sha3/kcp/PlSnP-Fallback.inc
Python-3.8.5/Modules/_sha3/kcp/KeccakSponge.c
Python-3.8.5/Modules/_sha3/kcp/KeccakHash.h
Python-3.8.5/Modules/_sha3/kcp/KeccakHash.c
Python-3.8.5/Modules/_sha3/kcp/SnP-Relaned.h
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-64.macros
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-SnP-opt64.h
Python-3.8.5/Modules/_sha3/kcp/align.h
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-inplace32BI.c
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-SnP.h
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-opt64.c
Python-3.8.5/Modules/_sha3/kcp/KeccakP-1600-SnP-opt32.h
Python-3.8.5/Modules/_sha3/kcp/KeccakSponge.h
Python-3.8.5/Modules/_sha3/clinic/
Python-3.8.5/Modules/_sha3/clinic/sha3module.c.h
Python-3.8.5/Modules/_sha3/sha3module.c
Python-3.8.5/Modules/_sha3/cleanup.py
Python-3.8.5/Modules/errnomodule.c
Python-3.8.5/Modules/_threadmodule.c
Python-3.8.5/Modules/addrinfo.h
Python-3.8.5/Modules/_ssl/
Python-3.8.5/Modules/_ssl/debughelpers.c
Python-3.8.5/Modules/timemodule.c
Python-3.8.5/Modules/mmapmodule.c
Python-3.8.5/Modules/audioop.c
Python-3.8.5/Modules/arraymodule.c
Python-3.8.5/Modules/_lsprof.c
Python-3.8.5/Modules/_abc.c
Python-3.8.5/Modules/getnameinfo.c
Python-3.8.5/Modules/_json.c
Python-3.8.5/Modules/symtablemodule.c
Python-3.8.5/Modules/ossaudiodev.c
Python-3.8.5/Modules/_decimal/
Python-3.8.5/Modules/_decimal/docstrings.h
Python-3.8.5/Modules/_decimal/tests/
Python-3.8.5/Modules/_decimal/tests/runall-memorydebugger.sh
Python-3.8.5/Modules/_decimal/tests/randdec.py
Python-3.8.5/Modules/_decimal/tests/runall.bat
Python-3.8.5/Modules/_decimal/tests/bignum.py
Python-3.8.5/Modules/_decimal/tests/bench.py
Python-3.8.5/Modules/_decimal/tests/README.txt
Python-3.8.5/Modules/_decimal/tests/deccheck.py
Python-3.8.5/Modules/_decimal/tests/randfloat.py
Python-3.8.5/Modules/_decimal/tests/formathelper.py
Python-3.8.5/Modules/_decimal/_decimal.c
Python-3.8.5/Modules/_decimal/README.txt
Python-3.8.5/Modules/_decimal/libmpdec/
Python-3.8.5/Modules/_decimal/libmpdec/vcdiv64.asm
Python-3.8.5/Modules/_decimal/libmpdec/crt.c
Python-3.8.5/Modules/_decimal/libmpdec/numbertheory.h
Python-3.8.5/Modules/_decimal/libmpdec/transpose.h
Python-3.8.5/Modules/_decimal/libmpdec/fnt.h
Python-3.8.5/Modules/_decimal/libmpdec/fnt.c
Python-3.8.5/Modules/_decimal/libmpdec/context.c
Python-3.8.5/Modules/_decimal/libmpdec/convolute.h
Python-3.8.5/Modules/_decimal/libmpdec/vcstdint.h
Python-3.8.5/Modules/_decimal/libmpdec/literature/
Python-3.8.5/Modules/_decimal/libmpdec/literature/fnt.py
Python-3.8.5/Modules/_decimal/libmpdec/literature/matrix-transform.txt
Python-3.8.5/Modules/_decimal/libmpdec/literature/umodarith.lisp
Python-3.8.5/Modules/_decimal/libmpdec/literature/mulmod-64.txt
Python-3.8.5/Modules/_decimal/libmpdec/literature/six-step.txt
Python-3.8.5/Modules/_decimal/libmpdec/literature/REFERENCES.txt
Python-3.8.5/Modules/_decimal/libmpdec/literature/bignum.txt
Python-3.8.5/Modules/_decimal/libmpdec/literature/mulmod-ppro.txt
Python-3.8.5/Modules/_decimal/libmpdec/difradix2.h
Python-3.8.5/Modules/_decimal/libmpdec/fourstep.h
Python-3.8.5/Modules/_decimal/libmpdec/fourstep.c
Python-3.8.5/Modules/_decimal/libmpdec/io.h
Python-3.8.5/Modules/_decimal/libmpdec/vccompat.h
Python-3.8.5/Modules/_decimal/libmpdec/README.txt
Python-3.8.5/Modules/_decimal/libmpdec/basearith.c
Python-3.8.5/Modules/_decimal/libmpdec/io.c
Python-3.8.5/Modules/_decimal/libmpdec/mpalloc.h
Python-3.8.5/Modules/_decimal/libmpdec/umodarith.h
Python-3.8.5/Modules/_decimal/libmpdec/constants.h
Python-3.8.5/Modules/_decimal/libmpdec/numbertheory.c
Python-3.8.5/Modules/_decimal/libmpdec/bits.h
Python-3.8.5/Modules/_decimal/libmpdec/constants.c
Python-3.8.5/Modules/_decimal/libmpdec/sixstep.h
Python-3.8.5/Modules/_decimal/libmpdec/sixstep.c
Python-3.8.5/Modules/_decimal/libmpdec/mpdecimal.h
Python-3.8.5/Modules/_decimal/libmpdec/difradix2.c
Python-3.8.5/Modules/_decimal/libmpdec/typearith.h
Python-3.8.5/Modules/_decimal/libmpdec/crt.h
Python-3.8.5/Modules/_decimal/libmpdec/convolute.c
Python-3.8.5/Modules/_decimal/libmpdec/mpdecimal.c
Python-3.8.5/Modules/_decimal/libmpdec/basearith.h
Python-3.8.5/Modules/_decimal/libmpdec/transpose.c
Python-3.8.5/Modules/_decimal/libmpdec/memory.c
Python-3.8.5/Modules/getpath.c
Python-3.8.5/Modules/sha256module.c
Python-3.8.5/Modules/_multiprocessing/
Python-3.8.5/Modules/_multiprocessing/multiprocessing.c
Python-3.8.5/Modules/_multiprocessing/semaphore.c
Python-3.8.5/Modules/_multiprocessing/clinic/
Python-3.8.5/Modules/_multiprocessing/clinic/posixshmem.c.h
Python-3.8.5/Modules/_multiprocessing/multiprocessing.h
Python-3.8.5/Modules/_multiprocessing/posixshmem.c
Python-3.8.5/Modules/atexitmodule.c
Python-3.8.5/Modules/_ssl.c
Python-3.8.5/Modules/testcapi_long.h
Python-3.8.5/Modules/parsermodule.c
Python-3.8.5/Modules/_curses_panel.c
Python-3.8.5/Modules/clinic/
Python-3.8.5/Modules/clinic/mathmodule.c.h
Python-3.8.5/Modules/clinic/_operator.c.h
Python-3.8.5/Modules/clinic/_sre.c.h
Python-3.8.5/Modules/clinic/_curses_panel.c.h
Python-3.8.5/Modules/clinic/_pickle.c.h
Python-3.8.5/Modules/clinic/selectmodule.c.h
Python-3.8.5/Modules/clinic/_tkinter.c.h
Python-3.8.5/Modules/clinic/_lzmamodule.c.h
Python-3.8.5/Modules/clinic/pyexpat.c.h
Python-3.8.5/Modules/clinic/sha1module.c.h
Python-3.8.5/Modules/clinic/_datetimemodule.c.h
Python-3.8.5/Modules/clinic/_randommodule.c.h
Python-3.8.5/Modules/clinic/_bz2module.c.h
Python-3.8.5/Modules/clinic/_gdbmmodule.c.h
Python-3.8.5/Modules/clinic/itertoolsmodule.c.h
Python-3.8.5/Modules/clinic/_opcode.c.h
Python-3.8.5/Modules/clinic/_contextvarsmodule.c.h
Python-3.8.5/Modules/clinic/grpmodule.c.h
Python-3.8.5/Modules/clinic/sha512module.c.h
Python-3.8.5/Modules/clinic/zlibmodule.c.h
Python-3.8.5/Modules/clinic/_asynciomodule.c.h
Python-3.8.5/Modules/clinic/md5module.c.h
Python-3.8.5/Modules/clinic/arraymodule.c.h
Python-3.8.5/Modules/clinic/_tracemalloc.c.h
Python-3.8.5/Modules/clinic/cmathmodule.c.h
Python-3.8.5/Modules/clinic/_cryptmodule.c.h
Python-3.8.5/Modules/clinic/_ssl.c.h
Python-3.8.5/Modules/clinic/unicodedata.c.h
Python-3.8.5/Modules/clinic/audioop.c.h
Python-3.8.5/Modules/clinic/pwdmodule.c.h
Python-3.8.5/Modules/clinic/_collectionsmodule.c.h
Python-3.8.5/Modules/clinic/_weakref.c.h
Python-3.8.5/Modules/clinic/symtablemodule.c.h
Python-3.8.5/Modules/clinic/_elementtree.c.h
Python-3.8.5/Modules/clinic/_struct.c.h
Python-3.8.5/Modules/clinic/_abc.c.h
Python-3.8.5/Modules/clinic/resource.c.h
Python-3.8.5/Modules/clinic/gcmodule.c.h
Python-3.8.5/Modules/clinic/_queuemodule.c.h
Python-3.8.5/Modules/clinic/_dbmmodule.c.h
Python-3.8.5/Modules/clinic/_codecsmodule.c.h
Python-3.8.5/Modules/clinic/fcntlmodule.c.h
Python-3.8.5/Modules/clinic/_winapi.c.h
Python-3.8.5/Modules/clinic/signalmodule.c.h
Python-3.8.5/Modules/clinic/_statisticsmodule.c.h
Python-3.8.5/Modules/clinic/_heapqmodule.c.h
Python-3.8.5/Modules/clinic/posixmodule.c.h
Python-3.8.5/Modules/clinic/_cursesmodule.c.h
Python-3.8.5/Modules/clinic/spwdmodule.c.h
Python-3.8.5/Modules/clinic/binascii.c.h
Python-3.8.5/Modules/clinic/_hashopenssl.c.h
Python-3.8.5/Modules/clinic/sha256module.c.h
Python-3.8.5/Modules/socketmodule.h
Python-3.8.5/Modules/sre.h
Python-3.8.5/Modules/hashtable.h
Python-3.8.5/Modules/unicodedata.c
Python-3.8.5/Modules/getaddrinfo.c
Python-3.8.5/Modules/ld_so_aix.in
Python-3.8.5/Modules/tkinter.h
Python-3.8.5/Modules/_xxtestfuzz/
Python-3.8.5/Modules/_xxtestfuzz/README.rst
Python-3.8.5/Modules/_xxtestfuzz/fuzz_json_loads_corpus/
Python-3.8.5/Modules/_xxtestfuzz/fuzz_json_loads_corpus/pass2.json
Python-3.8.5/Modules/_xxtestfuzz/fuzz_json_loads_corpus/pass3.json
Python-3.8.5/Modules/_xxtestfuzz/fuzz_json_loads_corpus/empty_object.json
Python-3.8.5/Modules/_xxtestfuzz/fuzz_json_loads_corpus/empty_array.json
Python-3.8.5/Modules/_xxtestfuzz/fuzz_json_loads_corpus/pass1.json
Python-3.8.5/Modules/_xxtestfuzz/fuzz_json_loads_corpus/simple_array.json
Python-3.8.5/Modules/_xxtestfuzz/fuzz_tests.txt
Python-3.8.5/Modules/_xxtestfuzz/_xxtestfuzz.c
Python-3.8.5/Modules/_xxtestfuzz/fuzzer.c
Python-3.8.5/Modules/_xxtestfuzz/fuzz_csv_reader_corpus/
Python-3.8.5/Modules/_xxtestfuzz/fuzz_csv_reader_corpus/test.csv
Python-3.8.5/Modules/_xxtestfuzz/dictionaries/
Python-3.8.5/Modules/_xxtestfuzz/dictionaries/fuzz_sre_compile.dict
Python-3.8.5/Modules/_xxtestfuzz/dictionaries/fuzz_json_loads.dict
Python-3.8.5/Modules/_xxtestfuzz/fuzz_sre_compile_corpus/
Python-3.8.5/Modules/_xxtestfuzz/fuzz_sre_compile_corpus/characters
Python-3.8.5/Modules/_xxtestfuzz/fuzz_sre_compile_corpus/phone_number
Python-3.8.5/Modules/_xxtestfuzz/fuzz_sre_compile_corpus/isbn
Python-3.8.5/Modules/_xxtestfuzz/fuzz_sre_compile_corpus/anchor_links
Python-3.8.5/Modules/_scproxy.c
Python-3.8.5/Modules/gcmodule.c
Python-3.8.5/Modules/xxmodule.c
Python-3.8.5/Modules/_winapi.c
Python-3.8.5/Modules/_localemodule.c
Python-3.8.5/Modules/_tracemalloc.c
Python-3.8.5/Modules/winreparse.h
Python-3.8.5/Modules/_testimportmultiple.c
Python-3.8.5/Modules/_pickle.c
Python-3.8.5/Modules/getbuildinfo.c
Python-3.8.5/Modules/rotatingtree.c
Python-3.8.5/Modules/sre_constants.h
Python-3.8.5/Modules/config.c.in
Python-3.8.5/Modules/_uuidmodule.c
Python-3.8.5/Modules/_hashopenssl.c
Python-3.8.5/Modules/_lzmamodule.c
Python-3.8.5/Modules/_queuemodule.c
Python-3.8.5/Modules/_ssl_data.h
Python-3.8.5/Modules/sre_lib.h
Python-3.8.5/Modules/_ctypes/
Python-3.8.5/Modules/_ctypes/stgdict.c
Python-3.8.5/Modules/_ctypes/ctypes.h
Python-3.8.5/Modules/_ctypes/_ctypes_test.c
Python-3.8.5/Modules/_ctypes/ctypes_dlfcn.h
Python-3.8.5/Modules/_ctypes/libffi_osx/
Python-3.8.5/Modules/_ctypes/libffi_osx/README.pyobjc
Python-3.8.5/Modules/_ctypes/libffi_osx/README
Python-3.8.5/Modules/_ctypes/libffi_osx/ffi.c
Python-3.8.5/Modules/_ctypes/libffi_osx/include/
Python-3.8.5/Modules/_ctypes/libffi_osx/include/ffi.h
Python-3.8.5/Modules/_ctypes/libffi_osx/include/ppc-ffitarget.h
Python-3.8.5/Modules/_ctypes/libffi_osx/include/x86-ffitarget.h
Python-3.8.5/Modules/_ctypes/libffi_osx/include/ffitarget.h
Python-3.8.5/Modules/_ctypes/libffi_osx/include/fficonfig.h
Python-3.8.5/Modules/_ctypes/libffi_osx/include/ffi_common.h
Python-3.8.5/Modules/_ctypes/libffi_osx/x86/
Python-3.8.5/Modules/_ctypes/libffi_osx/x86/x86-ffi64.c
Python-3.8.5/Modules/_ctypes/libffi_osx/x86/x86-ffi_darwin.c
Python-3.8.5/Modules/_ctypes/libffi_osx/x86/x86-darwin.S
Python-3.8.5/Modules/_ctypes/libffi_osx/x86/darwin64.S
Python-3.8.5/Modules/_ctypes/libffi_osx/LICENSE
Python-3.8.5/Modules/_ctypes/libffi_osx/powerpc/
Python-3.8.5/Modules/_ctypes/libffi_osx/powerpc/ppc-darwin.h
Python-3.8.5/Modules/_ctypes/libffi_osx/powerpc/ppc64-darwin_closure.S
Python-3.8.5/Modules/_ctypes/libffi_osx/powerpc/ppc-darwin.S
Python-3.8.5/Modules/_ctypes/libffi_osx/powerpc/ppc-ffi_darwin.c
Python-3.8.5/Modules/_ctypes/libffi_osx/powerpc/ppc-darwin_closure.S
Python-3.8.5/Modules/_ctypes/libffi_osx/types.c
Python-3.8.5/Modules/_ctypes/malloc_closure.c
Python-3.8.5/Modules/_ctypes/cfield.c
Python-3.8.5/Modules/_ctypes/callproc.c
Python-3.8.5/Modules/_ctypes/callbacks.c
Python-3.8.5/Modules/_ctypes/darwin/
Python-3.8.5/Modules/_ctypes/darwin/README
Python-3.8.5/Modules/_ctypes/darwin/dlfcn_simple.c
Python-3.8.5/Modules/_ctypes/darwin/LICENSE
Python-3.8.5/Modules/_ctypes/darwin/dlfcn.h
Python-3.8.5/Modules/_ctypes/darwin/README.ctypes
Python-3.8.5/Modules/_ctypes/_ctypes.c
Python-3.8.5/Modules/_ctypes/_ctypes_test.h
Python-3.8.5/Modules/_io/
Python-3.8.5/Modules/_io/_iomodule.c
Python-3.8.5/Modules/_io/_iomodule.h
Python-3.8.5/Modules/_io/textio.c
Python-3.8.5/Modules/_io/fileio.c
Python-3.8.5/Modules/_io/iobase.c
Python-3.8.5/Modules/_io/clinic/
Python-3.8.5/Modules/_io/clinic/iobase.c.h
Python-3.8.5/Modules/_io/clinic/_iomodule.c.h
Python-3.8.5/Modules/_io/clinic/bytesio.c.h
Python-3.8.5/Modules/_io/clinic/bufferedio.c.h
Python-3.8.5/Modules/_io/clinic/winconsoleio.c.h
Python-3.8.5/Modules/_io/clinic/stringio.c.h
Python-3.8.5/Modules/_io/clinic/fileio.c.h
Python-3.8.5/Modules/_io/clinic/textio.c.h
Python-3.8.5/Modules/_io/stringio.c
Python-3.8.5/Modules/_io/bytesio.c
Python-3.8.5/Modules/_io/winconsoleio.c
Python-3.8.5/Modules/_io/bufferedio.c
Python-3.8.5/Modules/main.c
Python-3.8.5/Modules/_tkinter.c
Python-3.8.5/Modules/_bz2module.c
Python-3.8.5/Modules/_weakref.c
Python-3.8.5/Modules/mathmodule.c
Python-3.8.5/Modules/syslogmodule.c
Python-3.8.5/Modules/_randommodule.c
Python-3.8.5/Modules/termios.c
Python-3.8.5/Modules/md5module.c
Python-3.8.5/Modules/_csv.c
Python-3.8.5/Modules/pwdmodule.c
Python-3.8.5/Modules/nismodule.c
Python-3.8.5/Modules/signalmodule.c
Python-3.8.5/Modules/readline.c
Python-3.8.5/Modules/_testcapimodule.c
Python-3.8.5/Modules/_cursesmodule.c
Python-3.8.5/Modules/_dbmmodule.c
Python-3.8.5/Modules/_functoolsmodule.c
Python-3.8.5/Modules/resource.c
Python-3.8.5/Modules/makesetup
Python-3.8.5/Modules/hashlib.h
Python-3.8.5/Modules/faulthandler.c
Python-3.8.5/Modules/overlapped.c
Python-3.8.5/Modules/_struct.c
Python-3.8.5/Modules/cmathmodule.c
Python-3.8.5/Modules/fcntlmodule.c
Python-3.8.5/Modules/_sqlite/
Python-3.8.5/Modules/_sqlite/connection.h
Python-3.8.5/Modules/_sqlite/cursor.c
Python-3.8.5/Modules/_sqlite/cursor.h
Python-3.8.5/Modules/_sqlite/util.c
Python-3.8.5/Modules/_sqlite/statement.c
Python-3.8.5/Modules/_sqlite/module.c
Python-3.8.5/Modules/_sqlite/microprotocols.h
Python-3.8.5/Modules/_sqlite/prepare_protocol.c
Python-3.8.5/Modules/_sqlite/statement.h
Python-3.8.5/Modules/_sqlite/cache.c
Python-3.8.5/Modules/_sqlite/util.h
Python-3.8.5/Modules/_sqlite/row.c
Python-3.8.5/Modules/_sqlite/prepare_protocol.h
Python-3.8.5/Modules/_sqlite/module.h
Python-3.8.5/Modules/_sqlite/connection.c
Python-3.8.5/Modules/_sqlite/microprotocols.c
Python-3.8.5/Modules/_sqlite/row.h
Python-3.8.5/Modules/_sqlite/cache.h
Python-3.8.5/Modules/_opcode.c
Python-3.8.5/Modules/_stat.c
Python-3.8.5/Modules/_math.c
Python-3.8.5/Modules/_testbuffer.c
Python-3.8.5/PCbuild/
Python-3.8.5/PCbuild/_bz2.vcxproj.filters
Python-3.8.5/PCbuild/tcl.vcxproj
Python-3.8.5/PCbuild/select.vcxproj.filters
Python-3.8.5/PCbuild/_msi.vcxproj.filters
Python-3.8.5/PCbuild/unicodedata.vcxproj.filters
Python-3.8.5/PCbuild/_testimportmultiple.vcxproj
Python-3.8.5/PCbuild/tcltk.props
Python-3.8.5/PCbuild/_ssl.vcxproj.filters
Python-3.8.5/PCbuild/sqlite3.vcxproj
Python-3.8.5/PCbuild/fix_encoding.py
Python-3.8.5/PCbuild/pythonw.vcxproj.filters
Python-3.8.5/PCbuild/pyexpat.vcxproj.filters
Python-3.8.5/PCbuild/python.props
Python-3.8.5/PCbuild/_ctypes.vcxproj
Python-3.8.5/PCbuild/_testcapi.vcxproj.filters
Python-3.8.5/PCbuild/_queue.vcxproj
Python-3.8.5/PCbuild/winsound.vcxproj.filters
Python-3.8.5/PCbuild/field3.py
Python-3.8.5/PCbuild/openssl.props
Python-3.8.5/PCbuild/rt.bat
Python-3.8.5/PCbuild/rmpyc.py
Python-3.8.5/PCbuild/_testbuffer.vcxproj.filters
Python-3.8.5/PCbuild/_testbuffer.vcxproj
Python-3.8.5/PCbuild/_ctypes_test.vcxproj.filters
Python-3.8.5/PCbuild/pythoncore.vcxproj
Python-3.8.5/PCbuild/unicodedata.vcxproj
Python-3.8.5/PCbuild/lib.pyproj
Python-3.8.5/PCbuild/python.vcxproj
Python-3.8.5/PCbuild/_testembed.vcxproj
Python-3.8.5/PCbuild/pcbuild.sln
Python-3.8.5/PCbuild/build.bat
Python-3.8.5/PCbuild/_overlapped.vcxproj.filters
Python-3.8.5/PCbuild/_ssl.vcxproj
Python-3.8.5/PCbuild/_testcapi.vcxproj
Python-3.8.5/PCbuild/venvwlauncher.vcxproj
Python-3.8.5/PCbuild/readme.txt
Python-3.8.5/PCbuild/_socket.vcxproj
Python-3.8.5/PCbuild/_multiprocessing.vcxproj
Python-3.8.5/PCbuild/_decimal.vcxproj.filters
Python-3.8.5/PCbuild/_multiprocessing.vcxproj.filters
Python-3.8.5/PCbuild/pyshellext.vcxproj.filters
Python-3.8.5/PCbuild/pyexpat.vcxproj
Python-3.8.5/PCbuild/prepare_libffi.bat
Python-3.8.5/PCbuild/_ctypes_test.vcxproj
Python-3.8.5/PCbuild/_msi.vcxproj
Python-3.8.5/PCbuild/pywlauncher.vcxproj.filters
Python-3.8.5/PCbuild/_freeze_importlib.vcxproj.filters
Python-3.8.5/PCbuild/clean.bat
Python-3.8.5/PCbuild/pyproject.props
Python-3.8.5/PCbuild/sqlite3.vcxproj.filters
Python-3.8.5/PCbuild/xxlimited.vcxproj
Python-3.8.5/PCbuild/find_msbuild.bat
Python-3.8.5/PCbuild/_testconsole.vcxproj.filters
Python-3.8.5/PCbuild/_bz2.vcxproj
Python-3.8.5/PCbuild/openssl.vcxproj
Python-3.8.5/PCbuild/urlretrieve.py
Python-3.8.5/PCbuild/get_externals.bat
Python-3.8.5/PCbuild/tk.vcxproj
Python-3.8.5/PCbuild/_testconsole.vcxproj
Python-3.8.5/PCbuild/_freeze_importlib.vcxproj
Python-3.8.5/PCbuild/select.vcxproj
Python-3.8.5/PCbuild/pythonw_uwp.vcxproj
Python-3.8.5/PCbuild/_sqlite3.vcxproj
Python-3.8.5/PCbuild/pcbuild.proj
Python-3.8.5/PCbuild/_socket.vcxproj.filters
Python-3.8.5/PCbuild/prepare_tcltk.bat
Python-3.8.5/PCbuild/xxlimited.vcxproj.filters
Python-3.8.5/PCbuild/get_external.py
Python-3.8.5/PCbuild/pylauncher.vcxproj.filters
Python-3.8.5/PCbuild/pywlauncher.vcxproj
Python-3.8.5/PCbuild/pythonw.vcxproj
Python-3.8.5/PCbuild/_elementtree.vcxproj
Python-3.8.5/PCbuild/_elementtree.vcxproj.filters
Python-3.8.5/PCbuild/_queue.vcxproj.filters
Python-3.8.5/PCbuild/_asyncio.vcxproj.filters
Python-3.8.5/PCbuild/pyshellext.vcxproj
Python-3.8.5/PCbuild/_sqlite3.vcxproj.filters
Python-3.8.5/PCbuild/_testimportmultiple.vcxproj.filters
Python-3.8.5/PCbuild/_testembed.vcxproj.filters
Python-3.8.5/PCbuild/python3dll.vcxproj
Python-3.8.5/PCbuild/liblzma.vcxproj
Python-3.8.5/PCbuild/pythoncore.vcxproj.filters
Python-3.8.5/PCbuild/venvlauncher.vcxproj
Python-3.8.5/PCbuild/_lzma.vcxproj
Python-3.8.5/PCbuild/_tkinter.vcxproj
Python-3.8.5/PCbuild/libffi.props
Python-3.8.5/PCbuild/_overlapped.vcxproj
Python-3.8.5/PCbuild/python.vcxproj.filters
Python-3.8.5/PCbuild/_testinternalcapi.vcxproj
Python-3.8.5/PCbuild/_ctypes.vcxproj.filters
Python-3.8.5/PCbuild/_testinternalcapi.vcxproj.filters
Python-3.8.5/PCbuild/prepare_ssl.bat
Python-3.8.5/PCbuild/_testmultiphase.vcxproj.filters
Python-3.8.5/PCbuild/_tkinter.vcxproj.filters
Python-3.8.5/PCbuild/python_uwp.vcxproj
Python-3.8.5/PCbuild/_hashlib.vcxproj.filters
Python-3.8.5/PCbuild/_asyncio.vcxproj
Python-3.8.5/PCbuild/tix.vcxproj
Python-3.8.5/PCbuild/_decimal.vcxproj
Python-3.8.5/PCbuild/_lzma.vcxproj.filters
Python-3.8.5/PCbuild/winsound.vcxproj
Python-3.8.5/PCbuild/_testmultiphase.vcxproj
Python-3.8.5/PCbuild/idle.bat
Python-3.8.5/PCbuild/_hashlib.vcxproj
Python-3.8.5/PCbuild/find_python.bat
Python-3.8.5/PCbuild/prepare_ssl.py
Python-3.8.5/PCbuild/build_env.bat
Python-3.8.5/PCbuild/pylauncher.vcxproj
Python-3.8.5/PCbuild/python3dll.vcxproj.filters
Python-3.8.5/PCbuild/env.bat
Python-3.8.5/configure
Python-3.8.5/Include/
Python-3.8.5/Include/complexobject.h
Python-3.8.5/Include/pymacro.h
Python-3.8.5/Include/node.h
Python-3.8.5/Include/osmodule.h
Python-3.8.5/Include/odictobject.h
Python-3.8.5/Include/cpython/
Python-3.8.5/Include/cpython/interpreteridobject.h
Python-3.8.5/Include/cpython/pystate.h
Python-3.8.5/Include/cpython/objimpl.h
Python-3.8.5/Include/cpython/object.h
Python-3.8.5/Include/cpython/abstract.h
Python-3.8.5/Include/cpython/pylifecycle.h
Python-3.8.5/Include/cpython/traceback.h
Python-3.8.5/Include/cpython/sysmodule.h
Python-3.8.5/Include/cpython/fileobject.h
Python-3.8.5/Include/cpython/unicodeobject.h
Python-3.8.5/Include/cpython/initconfig.h
Python-3.8.5/Include/cpython/pyerrors.h
Python-3.8.5/Include/cpython/dictobject.h
Python-3.8.5/Include/cpython/tupleobject.h
Python-3.8.5/Include/cpython/pymem.h
Python-3.8.5/Include/asdl.h
Python-3.8.5/Include/structmember.h
Python-3.8.5/Include/datetime.h
Python-3.8.5/Include/pystrhex.h
Python-3.8.5/Include/dtoa.h
Python-3.8.5/Include/patchlevel.h
Python-3.8.5/Include/osdefs.h
Python-3.8.5/Include/intrcheck.h
Python-3.8.5/Include/pyfpe.h
Python-3.8.5/Include/pytime.h
Python-3.8.5/Include/boolobject.h
Python-3.8.5/Include/Python-ast.h
Python-3.8.5/Include/interpreteridobject.h
Python-3.8.5/Include/typeslots.h
Python-3.8.5/Include/eval.h
Python-3.8.5/Include/classobject.h
Python-3.8.5/Include/pyhash.h
Python-3.8.5/Include/longintrepr.h
Python-3.8.5/Include/pystate.h
Python-3.8.5/Include/pyport.h
Python-3.8.5/Include/marshal.h
Python-3.8.5/Include/objimpl.h
Python-3.8.5/Include/modsupport.h
Python-3.8.5/Include/object.h
Python-3.8.5/Include/abstract.h
Python-3.8.5/Include/codecs.h
Python-3.8.5/Include/pylifecycle.h
Python-3.8.5/Include/descrobject.h
Python-3.8.5/Include/pymacconfig.h
Python-3.8.5/Include/frameobject.h
Python-3.8.5/Include/methodobject.h
Python-3.8.5/Include/enumobject.h
Python-3.8.5/Include/ast.h
Python-3.8.5/Include/traceback.h
Python-3.8.5/Include/errcode.h
Python-3.8.5/Include/pyctype.h
Python-3.8.5/Include/sysmodule.h
Python-3.8.5/Include/fileobject.h
Python-3.8.5/Include/setobject.h
Python-3.8.5/Include/unicodeobject.h
Python-3.8.5/Include/bytesobject.h
Python-3.8.5/Include/bytes_methods.h
Python-3.8.5/Include/picklebufobject.h
Python-3.8.5/Include/pydtrace.h
Python-3.8.5/Include/funcobject.h
Python-3.8.5/Include/pydtrace.d
Python-3.8.5/Include/pymath.h
Python-3.8.5/Include/genobject.h
Python-3.8.5/Include/pythonrun.h
Python-3.8.5/Include/Python.h
Python-3.8.5/Include/cellobject.h
Python-3.8.5/Include/iterobject.h
Python-3.8.5/Include/dynamic_annotations.h
Python-3.8.5/Include/ucnhash.h
Python-3.8.5/Include/pydebug.h
Python-3.8.5/Include/bltinmodule.h
Python-3.8.5/Include/rangeobject.h
Python-3.8.5/Include/pyerrors.h
Python-3.8.5/Include/fileutils.h
Python-3.8.5/Include/compile.h
Python-3.8.5/Include/opcode.h
Python-3.8.5/Include/floatobject.h
Python-3.8.5/Include/namespaceobject.h
Python-3.8.5/Include/tracemalloc.h
Python-3.8.5/Include/structseq.h
Python-3.8.5/Include/bitset.h
Python-3.8.5/Include/pystrtod.h
Python-3.8.5/Include/context.h
Python-3.8.5/Include/longobject.h
Python-3.8.5/Include/dictobject.h
Python-3.8.5/Include/parsetok.h
Python-3.8.5/Include/token.h
Python-3.8.5/Include/pythread.h
Python-3.8.5/Include/memoryobject.h
Python-3.8.5/Include/pycapsule.h
Python-3.8.5/Include/pyexpat.h
Python-3.8.5/Include/bytearrayobject.h
Python-3.8.5/Include/internal/
Python-3.8.5/Include/internal/pycore_pylifecycle.h
Python-3.8.5/Include/internal/pycore_traceback.h
Python-3.8.5/Include/internal/pycore_object.h
Python-3.8.5/Include/internal/pycore_pymem.h
Python-3.8.5/Include/internal/pycore_pyhash.h
Python-3.8.5/Include/internal/pycore_hamt.h
Python-3.8.5/Include/internal/pycore_pathconfig.h
Python-3.8.5/Include/internal/pycore_gil.h
Python-3.8.5/Include/internal/pycore_ceval.h
Python-3.8.5/Include/internal/pycore_code.h
Python-3.8.5/Include/internal/pycore_accu.h
Python-3.8.5/Include/internal/pycore_atomic.h
Python-3.8.5/Include/internal/pycore_pystate.h
Python-3.8.5/Include/internal/pycore_warnings.h
Python-3.8.5/Include/internal/pycore_context.h
Python-3.8.5/Include/internal/pycore_pyerrors.h
Python-3.8.5/Include/internal/pycore_initconfig.h
Python-3.8.5/Include/internal/pycore_fileutils.h
Python-3.8.5/Include/internal/pycore_condvar.h
Python-3.8.5/Include/internal/pycore_getopt.h
Python-3.8.5/Include/internal/pycore_tupleobject.h
Python-3.8.5/Include/weakrefobject.h
Python-3.8.5/Include/tupleobject.h
Python-3.8.5/Include/moduleobject.h
Python-3.8.5/Include/warnings.h
Python-3.8.5/Include/py_curses.h
Python-3.8.5/Include/sliceobject.h
Python-3.8.5/Include/pyarena.h
Python-3.8.5/Include/pymem.h
Python-3.8.5/Include/import.h
Python-3.8.5/Include/grammar.h
Python-3.8.5/Include/symtable.h
Python-3.8.5/Include/ceval.h
Python-3.8.5/Include/code.h
Python-3.8.5/Include/graminit.h
Python-3.8.5/Include/pystrcmp.h
Python-3.8.5/Include/listobject.h
Python-3.8.5/Programs/
Python-3.8.5/Programs/README
Python-3.8.5/Programs/_testembed.c
Python-3.8.5/Programs/_freeze_importlib.c
Python-3.8.5/Programs/python.c
Python-3.8.5/LICENSE
Python-3.8.5/aclocal.m4
Python-3.8.5/Mac/
Python-3.8.5/Mac/PythonLauncher/
Python-3.8.5/Mac/PythonLauncher/Info.plist.in
Python-3.8.5/Mac/PythonLauncher/PreferencesWindowController.m
Python-3.8.5/Mac/PythonLauncher/doscript.m
Python-3.8.5/Mac/PythonLauncher/MyAppDelegate.h
Python-3.8.5/Mac/PythonLauncher/main.m
Python-3.8.5/Mac/PythonLauncher/English.lproj/
Python-3.8.5/Mac/PythonLauncher/English.lproj/PreferenceWindow.nib/
Python-3.8.5/Mac/PythonLauncher/English.lproj/PreferenceWindow.nib/classes.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/PreferenceWindow.nib/info.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/PreferenceWindow.nib/objects.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/MainMenu.nib/
Python-3.8.5/Mac/PythonLauncher/English.lproj/MainMenu.nib/classes.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/MainMenu.nib/info.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/MainMenu.nib/objects.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/Credits.rtf
Python-3.8.5/Mac/PythonLauncher/English.lproj/MyDocument.nib/
Python-3.8.5/Mac/PythonLauncher/English.lproj/MyDocument.nib/classes.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/MyDocument.nib/info.nib
Python-3.8.5/Mac/PythonLauncher/English.lproj/MyDocument.nib/objects.nib
Python-3.8.5/Mac/PythonLauncher/FileSettings.h
Python-3.8.5/Mac/PythonLauncher/MyAppDelegate.m
Python-3.8.5/Mac/PythonLauncher/PreferencesWindowController.h
Python-3.8.5/Mac/PythonLauncher/MyDocument.m
Python-3.8.5/Mac/PythonLauncher/Makefile.in
Python-3.8.5/Mac/PythonLauncher/factorySettings.plist
Python-3.8.5/Mac/PythonLauncher/MyDocument.h
Python-3.8.5/Mac/PythonLauncher/doscript.h
Python-3.8.5/Mac/PythonLauncher/FileSettings.m
Python-3.8.5/Mac/README.rst
Python-3.8.5/Mac/Resources/
Python-3.8.5/Mac/Resources/app/
Python-3.8.5/Mac/Resources/app/Info.plist.in
Python-3.8.5/Mac/Resources/app/Resources/
Python-3.8.5/Mac/Resources/app/Resources/PythonInterpreter.icns
Python-3.8.5/Mac/Resources/app/Resources/PythonApplet.icns
Python-3.8.5/Mac/Resources/app/PkgInfo
Python-3.8.5/Mac/Resources/iconsrc/
Python-3.8.5/Mac/Resources/iconsrc/PythonCompiled.psd
Python-3.8.5/Mac/Resources/iconsrc/PythonIcon.psd
Python-3.8.5/Mac/Resources/iconsrc/PythonSource.psd
Python-3.8.5/Mac/Resources/iconsrc/PythonWSource.psd
Python-3.8.5/Mac/Resources/iconsrc/PackageManager.psd
Python-3.8.5/Mac/Resources/iconsrc/PythonApplet.psd
Python-3.8.5/Mac/Resources/iconsrc/IDE.psd
Python-3.8.5/Mac/Resources/framework/
Python-3.8.5/Mac/Resources/framework/Info.plist.in
Python-3.8.5/Mac/Icons/
Python-3.8.5/Mac/Icons/PythonSource.icns
Python-3.8.5/Mac/Icons/PythonLauncher.icns
Python-3.8.5/Mac/Icons/IDLE.icns
Python-3.8.5/Mac/Icons/Python Folder.icns
Python-3.8.5/Mac/Icons/PythonCompiled.icns
Python-3.8.5/Mac/Icons/Disk Image.icns
Python-3.8.5/Mac/Icons/ReadMe.txt
Python-3.8.5/Mac/Extras.install.py
Python-3.8.5/Mac/BuildScript/
Python-3.8.5/Mac/BuildScript/README.rst
Python-3.8.5/Mac/BuildScript/seticon.m
Python-3.8.5/Mac/BuildScript/build-installer.py
Python-3.8.5/Mac/BuildScript/tk868_on_10_8_10_9.patch
Python-3.8.5/Mac/BuildScript/resources/
Python-3.8.5/Mac/BuildScript/resources/Conclusion.rtf
Python-3.8.5/Mac/BuildScript/resources/ReadMe.rtf
Python-3.8.5/Mac/BuildScript/resources/background.jpg
Python-3.8.5/Mac/BuildScript/resources/install_certificates.command
Python-3.8.5/Mac/BuildScript/resources/License.rtf
Python-3.8.5/Mac/BuildScript/resources/Welcome.rtf
Python-3.8.5/Mac/BuildScript/scripts/
Python-3.8.5/Mac/BuildScript/scripts/postflight.ensurepip
Python-3.8.5/Mac/BuildScript/scripts/postflight.documentation
Python-3.8.5/Mac/BuildScript/scripts/postflight.framework
Python-3.8.5/Mac/BuildScript/scripts/postflight.patch-profile
Python-3.8.5/Mac/Makefile.in
Python-3.8.5/Mac/IDLE/
Python-3.8.5/Mac/IDLE/IDLE.app/
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/Resources/
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/Resources/PythonSource.icns
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/Resources/idlemain.py
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/Resources/IDLE.icns
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/Resources/PythonCompiled.icns
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/MacOS/
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/MacOS/IDLE
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/PkgInfo
Python-3.8.5/Mac/IDLE/IDLE.app/Contents/Info.plist
Python-3.8.5/Mac/Tools/
Python-3.8.5/Mac/Tools/pythonw.c
Python-3.8.5/Mac/Tools/plistlib_generate_testdata.py
Python-3.8.5/config.guess
Python-3.8.5/Parser/
Python-3.8.5/Parser/node.c
Python-3.8.5/Parser/tokenizer.c
Python-3.8.5/Parser/parser.h
Python-3.8.5/Parser/acceler.c
Python-3.8.5/Parser/token.c
Python-3.8.5/Parser/asdl.py
Python-3.8.5/Parser/parser.c
Python-3.8.5/Parser/tokenizer.h
Python-3.8.5/Parser/grammar1.c
Python-3.8.5/Parser/listnode.c
Python-3.8.5/Parser/myreadline.c
Python-3.8.5/Parser/asdl_c.py
Python-3.8.5/Parser/parsetok.c
Python-3.8.5/Parser/Python.asdl
Python-3.8.5/Parser/pgen/
Python-3.8.5/Parser/pgen/keywordgen.py
Python-3.8.5/Parser/pgen/grammar.py
Python-3.8.5/Parser/pgen/__main__.py
Python-3.8.5/Parser/pgen/__init__.py
Python-3.8.5/Parser/pgen/token.py
Python-3.8.5/Parser/pgen/pgen.py
Python-3.8.5/pyconfig.h.in
Python-3.8.5/Tools/
Python-3.8.5/Tools/README
Python-3.8.5/Tools/unittestgui/
Python-3.8.5/Tools/unittestgui/README.txt
Python-3.8.5/Tools/unittestgui/unittestgui.py
Python-3.8.5/Tools/i18n/
Python-3.8.5/Tools/i18n/msgfmt.py
Python-3.8.5/Tools/i18n/makelocalealias.py
Python-3.8.5/Tools/i18n/pygettext.py
Python-3.8.5/Tools/demo/
Python-3.8.5/Tools/demo/README
Python-3.8.5/Tools/demo/rpythond.py
Python-3.8.5/Tools/demo/markov.py
Python-3.8.5/Tools/demo/eiffel.py
Python-3.8.5/Tools/demo/vector.py
Python-3.8.5/Tools/demo/sortvisu.py
Python-3.8.5/Tools/demo/mcast.py
Python-3.8.5/Tools/demo/queens.py
Python-3.8.5/Tools/demo/hanoi.py
Python-3.8.5/Tools/demo/life.py
Python-3.8.5/Tools/demo/redemo.py
Python-3.8.5/Tools/demo/rpython.py
Python-3.8.5/Tools/demo/ss1.py
Python-3.8.5/Tools/demo/beer.py
Python-3.8.5/Tools/c-globals/
Python-3.8.5/Tools/c-globals/README
Python-3.8.5/Tools/c-globals/check-c-globals.py
Python-3.8.5/Tools/c-globals/ignored-globals.txt
Python-3.8.5/Tools/parser/
Python-3.8.5/Tools/parser/unparse.py
Python-3.8.5/Tools/tz/
Python-3.8.5/Tools/tz/zdump.py
Python-3.8.5/Tools/unicode/
Python-3.8.5/Tools/unicode/python-mappings/
Python-3.8.5/Tools/unicode/python-mappings/TIS-620.TXT
Python-3.8.5/Tools/unicode/python-mappings/CP273.TXT
Python-3.8.5/Tools/unicode/python-mappings/KOI8-U.TXT
Python-3.8.5/Tools/unicode/python-mappings/CP1140.TXT
Python-3.8.5/Tools/unicode/comparecodecs.py
Python-3.8.5/Tools/unicode/gencjkcodecs.py
Python-3.8.5/Tools/unicode/genwincodecs.bat
Python-3.8.5/Tools/unicode/Makefile
Python-3.8.5/Tools/unicode/genwincodec.py
Python-3.8.5/Tools/unicode/mkstringprep.py
Python-3.8.5/Tools/unicode/gencodec.py
Python-3.8.5/Tools/unicode/listcodecs.py
Python-3.8.5/Tools/unicode/makeunicodedata.py
Python-3.8.5/Tools/test2to3/
Python-3.8.5/Tools/test2to3/README
Python-3.8.5/Tools/test2to3/test2to3/
Python-3.8.5/Tools/test2to3/test2to3/__init__.py
Python-3.8.5/Tools/test2to3/test2to3/hello.py
Python-3.8.5/Tools/test2to3/maintest.py
Python-3.8.5/Tools/test2to3/test/
Python-3.8.5/Tools/test2to3/test/runtests.py
Python-3.8.5/Tools/test2to3/test/test_foo.py
Python-3.8.5/Tools/test2to3/setup.py
Python-3.8.5/Tools/ssl/
Python-3.8.5/Tools/ssl/make_ssl_data.py
Python-3.8.5/Tools/ssl/multissltests.py
Python-3.8.5/Tools/ccbench/
Python-3.8.5/Tools/ccbench/ccbench.py
Python-3.8.5/Tools/freeze/
Python-3.8.5/Tools/freeze/README
Python-3.8.5/Tools/freeze/winmakemakefile.py
Python-3.8.5/Tools/freeze/makefreeze.py
Python-3.8.5/Tools/freeze/win32.html
Python-3.8.5/Tools/freeze/makeconfig.py
Python-3.8.5/Tools/freeze/makemakefile.py
Python-3.8.5/Tools/freeze/parsesetup.py
Python-3.8.5/Tools/freeze/checkextensions_win32.py
Python-3.8.5/Tools/freeze/extensions_win32.ini
Python-3.8.5/Tools/freeze/test/
Python-3.8.5/Tools/freeze/test/Makefile
Python-3.8.5/Tools/freeze/test/ok.py
Python-3.8.5/Tools/freeze/hello.py
Python-3.8.5/Tools/freeze/checkextensions.py
Python-3.8.5/Tools/freeze/flag.py
Python-3.8.5/Tools/freeze/bkfile.py
Python-3.8.5/Tools/freeze/freeze.py
Python-3.8.5/Tools/nuget/
Python-3.8.5/Tools/nuget/pythondaily.symbols.nuspec
Python-3.8.5/Tools/nuget/pythonx86.nuspec
Python-3.8.5/Tools/nuget/build.bat
Python-3.8.5/Tools/nuget/make_pkg.proj
Python-3.8.5/Tools/nuget/pythonarm32.nuspec
Python-3.8.5/Tools/nuget/pythondaily.nuspec
Python-3.8.5/Tools/nuget/python.nuspec
Python-3.8.5/Tools/pynche/
Python-3.8.5/Tools/pynche/README
Python-3.8.5/Tools/pynche/Main.py
Python-3.8.5/Tools/pynche/webcolors.txt
Python-3.8.5/Tools/pynche/Switchboard.py
Python-3.8.5/Tools/pynche/TypeinViewer.py
Python-3.8.5/Tools/pynche/TextViewer.py
Python-3.8.5/Tools/pynche/X/
Python-3.8.5/Tools/pynche/X/rgb.txt
Python-3.8.5/Tools/pynche/X/xlicense.txt
Python-3.8.5/Tools/pynche/pynche
Python-3.8.5/Tools/pynche/__init__.py
Python-3.8.5/Tools/pynche/pynche.pyw
Python-3.8.5/Tools/pynche/ListViewer.py
Python-3.8.5/Tools/pynche/ColorDB.py
Python-3.8.5/Tools/pynche/DetailsViewer.py
Python-3.8.5/Tools/pynche/namedcolors.txt
Python-3.8.5/Tools/pynche/websafe.txt
Python-3.8.5/Tools/pynche/StripViewer.py
Python-3.8.5/Tools/pynche/ChipViewer.py
Python-3.8.5/Tools/pynche/PyncheWidget.py
Python-3.8.5/Tools/pynche/html40colors.txt
Python-3.8.5/Tools/pynche/pyColorChooser.py
Python-3.8.5/Tools/iobench/
Python-3.8.5/Tools/iobench/iobench.py
Python-3.8.5/Tools/buildbot/
Python-3.8.5/Tools/buildbot/buildmsi.bat
Python-3.8.5/Tools/buildbot/remoteDeploy.bat
Python-3.8.5/Tools/buildbot/test.bat
Python-3.8.5/Tools/buildbot/build.bat
Python-3.8.5/Tools/buildbot/clean.bat
Python-3.8.5/Tools/buildbot/remotePythonInfo.bat
Python-3.8.5/Tools/stringbench/
Python-3.8.5/Tools/stringbench/README
Python-3.8.5/Tools/stringbench/stringbench.py
Python-3.8.5/Tools/clinic/
Python-3.8.5/Tools/clinic/clinic.py
Python-3.8.5/Tools/clinic/cpp.py
Python-3.8.5/Tools/importbench/
Python-3.8.5/Tools/importbench/README
Python-3.8.5/Tools/importbench/importbench.py
Python-3.8.5/Tools/msi/
Python-3.8.5/Tools/msi/path/
Python-3.8.5/Tools/msi/path/path.wxs
Python-3.8.5/Tools/msi/path/path.wixproj
Python-3.8.5/Tools/msi/path/path_en-US.wxl
Python-3.8.5/Tools/msi/csv_to_wxs.py
Python-3.8.5/Tools/msi/tcltk/
Python-3.8.5/Tools/msi/tcltk/tcltk.wxs
Python-3.8.5/Tools/msi/tcltk/tcltk_files.wxs
Python-3.8.5/Tools/msi/tcltk/tcltk_d.wixproj
Python-3.8.5/Tools/msi/tcltk/tcltk_en-US.wxl_template
Python-3.8.5/Tools/msi/tcltk/tcltk_reg.wxs
Python-3.8.5/Tools/msi/tcltk/tcltk_pdb.wxs
Python-3.8.5/Tools/msi/tcltk/tcltk.wixproj
Python-3.8.5/Tools/msi/tcltk/tcltk_d.wxs
Python-3.8.5/Tools/msi/tcltk/tcltk_pdb.wixproj
Python-3.8.5/Tools/msi/launcher/
Python-3.8.5/Tools/msi/launcher/launcher.wixproj
Python-3.8.5/Tools/msi/launcher/launcher.wxs
Python-3.8.5/Tools/msi/launcher/launcher_files.wxs
Python-3.8.5/Tools/msi/launcher/launcher_reg.wxs
Python-3.8.5/Tools/msi/launcher/launcher_en-US.wxl
Python-3.8.5/Tools/msi/make_zip.proj
Python-3.8.5/Tools/msi/tools/
Python-3.8.5/Tools/msi/tools/tools.wxs
Python-3.8.5/Tools/msi/tools/tools_en-US.wxl
Python-3.8.5/Tools/msi/tools/tools.wixproj
Python-3.8.5/Tools/msi/tools/tools_files.wxs
Python-3.8.5/Tools/msi/sdktools.psm1
Python-3.8.5/Tools/msi/core/
Python-3.8.5/Tools/msi/core/core_d.wxs
Python-3.8.5/Tools/msi/core/core_pdb.wixproj
Python-3.8.5/Tools/msi/core/core_files.wxs
Python-3.8.5/Tools/msi/core/core_en-US.wxl
Python-3.8.5/Tools/msi/core/core.wixproj
Python-3.8.5/Tools/msi/core/core_pdb.wxs
Python-3.8.5/Tools/msi/core/core.wxs
Python-3.8.5/Tools/msi/core/core_d.wixproj
Python-3.8.5/Tools/msi/build.bat
Python-3.8.5/Tools/msi/wix.props
Python-3.8.5/Tools/msi/generate_md5.py
Python-3.8.5/Tools/msi/exe/
Python-3.8.5/Tools/msi/exe/exe_pdb.wxs
Python-3.8.5/Tools/msi/exe/exe_d.wixproj
Python-3.8.5/Tools/msi/exe/exe_pdb.wixproj
Python-3.8.5/Tools/msi/exe/exe.wxs
Python-3.8.5/Tools/msi/exe/exe_en-US.wxl_template
Python-3.8.5/Tools/msi/exe/exe.wixproj
Python-3.8.5/Tools/msi/exe/exe_files.wxs
Python-3.8.5/Tools/msi/exe/exe_reg.wxs
Python-3.8.5/Tools/msi/exe/exe_d.wxs
Python-3.8.5/Tools/msi/sign_build.ps1
Python-3.8.5/Tools/msi/purge.py
Python-3.8.5/Tools/msi/common_en-US.wxl_template
Python-3.8.5/Tools/msi/msi.targets
Python-3.8.5/Tools/msi/README.txt
Python-3.8.5/Tools/msi/get_externals.bat
Python-3.8.5/Tools/msi/bundle/
Python-3.8.5/Tools/msi/bundle/bootstrap/
Python-3.8.5/Tools/msi/bundle/bootstrap/pythonba.def
Python-3.8.5/Tools/msi/bundle/bootstrap/LICENSE.txt
Python-3.8.5/Tools/msi/bundle/bootstrap/pch.h
Python-3.8.5/Tools/msi/bundle/bootstrap/pch.cpp
Python-3.8.5/Tools/msi/bundle/bootstrap/pythonba.cpp
Python-3.8.5/Tools/msi/bundle/bootstrap/resource.h
Python-3.8.5/Tools/msi/bundle/bootstrap/pythonba.vcxproj
Python-3.8.5/Tools/msi/bundle/bootstrap/pythonba.sln
Python-3.8.5/Tools/msi/bundle/bootstrap/PythonBootstrapperApplication.cpp
Python-3.8.5/Tools/msi/bundle/packagegroups/
Python-3.8.5/Tools/msi/bundle/packagegroups/tcltk.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/tools.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/test.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/lib.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/dev.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/launcher.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/doc.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/crt.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/exe.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/postinstall.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/core.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/pip.wxs
Python-3.8.5/Tools/msi/bundle/packagegroups/packageinstall.wxs
Python-3.8.5/Tools/msi/bundle/bundle.wxs
Python-3.8.5/Tools/msi/bundle/bundle.targets
Python-3.8.5/Tools/msi/bundle/Default.wxl
Python-3.8.5/Tools/msi/bundle/snapshot.wixproj
Python-3.8.5/Tools/msi/bundle/SideBar.png
Python-3.8.5/Tools/msi/bundle/releaselocal.wixproj
Python-3.8.5/Tools/msi/bundle/full.wixproj
Python-3.8.5/Tools/msi/bundle/bundle.wxl
Python-3.8.5/Tools/msi/bundle/Default.thm
Python-3.8.5/Tools/msi/bundle/releaseweb.wixproj
Python-3.8.5/Tools/msi/uploadrelease.ps1
Python-3.8.5/Tools/msi/lib/
Python-3.8.5/Tools/msi/lib/lib_pdb.wixproj
Python-3.8.5/Tools/msi/lib/lib.wxs
Python-3.8.5/Tools/msi/lib/lib.wixproj
Python-3.8.5/Tools/msi/lib/lib_d.wixproj
Python-3.8.5/Tools/msi/lib/lib_pdb.wxs
Python-3.8.5/Tools/msi/lib/lib_d.wxs
Python-3.8.5/Tools/msi/lib/lib_files.wxs
Python-3.8.5/Tools/msi/lib/lib_en-US.wxl
Python-3.8.5/Tools/msi/testrelease.bat
Python-3.8.5/Tools/msi/make_cat.ps1
Python-3.8.5/Tools/msi/ucrt/
Python-3.8.5/Tools/msi/ucrt/ucrt.wixproj
Python-3.8.5/Tools/msi/ucrt/ucrt.wxs
Python-3.8.5/Tools/msi/ucrt/ucrt_en-US.wxl
Python-3.8.5/Tools/msi/dev/
Python-3.8.5/Tools/msi/dev/dev_d.wxs
Python-3.8.5/Tools/msi/dev/dev_files.wxs
Python-3.8.5/Tools/msi/dev/dev.wxs
Python-3.8.5/Tools/msi/dev/dev.wixproj
Python-3.8.5/Tools/msi/dev/dev_en-US.wxl
Python-3.8.5/Tools/msi/dev/dev_d.wixproj
Python-3.8.5/Tools/msi/uploadrelease.proj
Python-3.8.5/Tools/msi/common.wxs
Python-3.8.5/Tools/msi/test/
Python-3.8.5/Tools/msi/test/test.wxs
Python-3.8.5/Tools/msi/test/test_d.wxs
Python-3.8.5/Tools/msi/test/test_en-US.wxl
Python-3.8.5/Tools/msi/test/test_d.wixproj
Python-3.8.5/Tools/msi/test/test_pdb.wxs
Python-3.8.5/Tools/msi/test/test_files.wxs
Python-3.8.5/Tools/msi/test/test.wixproj
Python-3.8.5/Tools/msi/test/test_pdb.wixproj
Python-3.8.5/Tools/msi/distutils.command.bdist_wininst.py
Python-3.8.5/Tools/msi/make_appx.ps1
Python-3.8.5/Tools/msi/buildrelease.bat
Python-3.8.5/Tools/msi/doc/
Python-3.8.5/Tools/msi/doc/doc.wxs
Python-3.8.5/Tools/msi/doc/doc.wixproj
Python-3.8.5/Tools/msi/doc/doc_no_files.wxs
Python-3.8.5/Tools/msi/doc/doc_en-US.wxl_template
Python-3.8.5/Tools/msi/doc/doc_files.wxs
Python-3.8.5/Tools/msi/pip/
Python-3.8.5/Tools/msi/pip/pip.wixproj
Python-3.8.5/Tools/msi/pip/pip_en-US.wxl
Python-3.8.5/Tools/msi/pip/pip.wxs
Python-3.8.5/Tools/msi/uploadrelease.bat
Python-3.8.5/Tools/msi/msi.props
Python-3.8.5/Tools/gdb/
Python-3.8.5/Tools/gdb/libpython.py
Python-3.8.5/Tools/scripts/
Python-3.8.5/Tools/scripts/find-uname.py
Python-3.8.5/Tools/scripts/analyze_dxp.py
Python-3.8.5/Tools/scripts/make_ctype.py
Python-3.8.5/Tools/scripts/README
Python-3.8.5/Tools/scripts/rgrep.py
Python-3.8.5/Tools/scripts/dutree.doc
Python-3.8.5/Tools/scripts/findnocoding.py
Python-3.8.5/Tools/scripts/parseentities.py
Python-3.8.5/Tools/scripts/cleanfuture.py
Python-3.8.5/Tools/scripts/combinerefs.py
Python-3.8.5/Tools/scripts/ifdef.py
Python-3.8.5/Tools/scripts/ptags.py
Python-3.8.5/Tools/scripts/ndiff.py
Python-3.8.5/Tools/scripts/highlight.py
Python-3.8.5/Tools/scripts/nm2def.py
Python-3.8.5/Tools/scripts/fixnotice.py
Python-3.8.5/Tools/scripts/checkpip.py
Python-3.8.5/Tools/scripts/texi2html.py
Python-3.8.5/Tools/scripts/generate_opcode_h.py
Python-3.8.5/Tools/scripts/byext.py
Python-3.8.5/Tools/scripts/var_access_benchmark.py
Python-3.8.5/Tools/scripts/pickle2db.py
Python-3.8.5/Tools/scripts/fixps.py
Python-3.8.5/Tools/scripts/pindent.py
Python-3.8.5/Tools/scripts/reindent.py
Python-3.8.5/Tools/scripts/update_file.py
Python-3.8.5/Tools/scripts/idle3
Python-3.8.5/Tools/scripts/parse_html5_entities.py
Python-3.8.5/Tools/scripts/md5sum.py
Python-3.8.5/Tools/scripts/run_tests.py
Python-3.8.5/Tools/scripts/db2pickle.py
Python-3.8.5/Tools/scripts/smelly.py
Python-3.8.5/Tools/scripts/findlinksto.py
Python-3.8.5/Tools/scripts/gprof2html.py
Python-3.8.5/Tools/scripts/suff.py
Python-3.8.5/Tools/scripts/abitype.py
Python-3.8.5/Tools/scripts/mkreal.py
Python-3.8.5/Tools/scripts/fixcid.py
Python-3.8.5/Tools/scripts/generate_symbol_py.py
Python-3.8.5/Tools/scripts/checkpyc.py
Python-3.8.5/Tools/scripts/eptags.py
Python-3.8.5/Tools/scripts/find_recursionlimit.py
Python-3.8.5/Tools/scripts/lfcr.py
Python-3.8.5/Tools/scripts/win_add2path.py
Python-3.8.5/Tools/scripts/import_diagnostics.py
Python-3.8.5/Tools/scripts/lll.py
Python-3.8.5/Tools/scripts/fixheader.py
Python-3.8.5/Tools/scripts/patchcheck.py
Python-3.8.5/Tools/scripts/mailerdaemon.py
Python-3.8.5/Tools/scripts/finddiv.py
Python-3.8.5/Tools/scripts/fixdiv.py
Python-3.8.5/Tools/scripts/linktree.py
Python-3.8.5/Tools/scripts/pydoc3
Python-3.8.5/Tools/scripts/google.py
Python-3.8.5/Tools/scripts/untabify.py
Python-3.8.5/Tools/scripts/crlf.py
Python-3.8.5/Tools/scripts/diff.py
Python-3.8.5/Tools/scripts/objgraph.py
Python-3.8.5/Tools/scripts/get-remote-certificate.py
Python-3.8.5/Tools/scripts/pathfix.py
Python-3.8.5/Tools/scripts/pysource.py
Python-3.8.5/Tools/scripts/2to3
Python-3.8.5/Tools/scripts/generate_token.py
Python-3.8.5/Tools/scripts/serve.py
Python-3.8.5/Tools/scripts/pdeps.py
Python-3.8.5/Tools/scripts/which.py
Python-3.8.5/Tools/scripts/copytime.py
Python-3.8.5/Tools/scripts/pep384_macrocheck.py
Python-3.8.5/Tools/scripts/h2py.py
Python-3.8.5/Tools/scripts/byteyears.py
Python-3.8.5/Tools/scripts/dutree.py
Python-3.8.5/Tools/scripts/reindent-rst.py
Python-3.8.5/configure.ac
Python-3.8.5/Grammar/
Python-3.8.5/Grammar/Tokens
Python-3.8.5/Grammar/Grammar
Python-3.8.5/Makefile.pre.in
Python-3.8.5/Misc/
Python-3.8.5/Misc/indent.pro
Python-3.8.5/Misc/SpecialBuilds.txt
Python-3.8.5/Misc/README
Python-3.8.5/Misc/python-wing3.wpr
Python-3.8.5/Misc/python-config.sh.in
Python-3.8.5/Misc/python.man
Python-3.8.5/Misc/ACKS
Python-3.8.5/Misc/README.valgrind
Python-3.8.5/Misc/python-embed.pc.in
Python-3.8.5/Misc/python.pc.in
Python-3.8.5/Misc/python-wing4.wpr
Python-3.8.5/Misc/coverity_model.c
Python-3.8.5/Misc/svnmap.txt
Python-3.8.5/Misc/HISTORY
Python-3.8.5/Misc/NEWS
Python-3.8.5/Misc/Porting
Python-3.8.5/Misc/vgrindefs
Python-3.8.5/Misc/README.AIX
Python-3.8.5/Misc/README.coverity
Python-3.8.5/Misc/valgrind-python.supp
Python-3.8.5/Misc/gdbinit
Python-3.8.5/Misc/python-wing5.wpr
Python-3.8.5/Misc/python-config.in
Python-3.8.5/config.sub
Python-3.8.5/Python/
Python-3.8.5/Python/dynload_hpux.c
Python-3.8.5/Python/README
Python-3.8.5/Python/bltinmodule.c
Python-3.8.5/Python/thread_nt.h
Python-3.8.5/Python/getcopyright.c
Python-3.8.5/Python/pystrcmp.c
Python-3.8.5/Python/codecs.c
Python-3.8.5/Python/mystrtoul.c
Python-3.8.5/Python/dtoa.c
Python-3.8.5/Python/dynamic_annotations.c
Python-3.8.5/Python/importdl.c
Python-3.8.5/Python/context.c
Python-3.8.5/Python/dynload_shlib.c
Python-3.8.5/Python/importlib.h
Python-3.8.5/Python/frozen.c
Python-3.8.5/Python/mysnprintf.c
Python-3.8.5/Python/pytime.c
Python-3.8.5/Python/thread.c
Python-3.8.5/Python/compile.c
Python-3.8.5/Python/thread_pthread.h
Python-3.8.5/Python/pyctype.c
Python-3.8.5/Python/dynload_stub.c
Python-3.8.5/Python/condvar.h
Python-3.8.5/Python/pylifecycle.c
Python-3.8.5/Python/pathconfig.c
Python-3.8.5/Python/importlib_external.h
Python-3.8.5/Python/fileutils.c
Python-3.8.5/Python/initconfig.c
Python-3.8.5/Python/getcompiler.c
Python-3.8.5/Python/sysmodule.c
Python-3.8.5/Python/pymath.c
Python-3.8.5/Python/ast.c
Python-3.8.5/Python/ceval_gil.h
Python-3.8.5/Python/pyarena.c
Python-3.8.5/Python/symtable.c
Python-3.8.5/Python/ast_opt.c
Python-3.8.5/Python/graminit.c
Python-3.8.5/Python/opcode_targets.h
Python-3.8.5/Python/_warnings.c
Python-3.8.5/Python/asdl.c
Python-3.8.5/Python/preconfig.c
Python-3.8.5/Python/dynload_win.c
Python-3.8.5/Python/formatter_unicode.c
Python-3.8.5/Python/clinic/
Python-3.8.5/Python/clinic/traceback.c.h
Python-3.8.5/Python/clinic/context.c.h
Python-3.8.5/Python/clinic/marshal.c.h
Python-3.8.5/Python/clinic/bltinmodule.c.h
Python-3.8.5/Python/clinic/import.c.h
Python-3.8.5/Python/clinic/sysmodule.c.h
Python-3.8.5/Python/clinic/_warnings.c.h
Python-3.8.5/Python/importlib_zipimport.h
Python-3.8.5/Python/bootstrap_hash.c
Python-3.8.5/Python/ceval.c
Python-3.8.5/Python/strdup.c
Python-3.8.5/Python/structmember.c
Python-3.8.5/Python/dynload_aix.c
Python-3.8.5/Python/dynload_dl.c
Python-3.8.5/Python/pystrhex.c
Python-3.8.5/Python/import.c
Python-3.8.5/Python/getargs.c
Python-3.8.5/Python/marshal.c
Python-3.8.5/Python/Python-ast.c
Python-3.8.5/Python/getplatform.c
Python-3.8.5/Python/errors.c
Python-3.8.5/Python/pythonrun.c
Python-3.8.5/Python/frozenmain.c
Python-3.8.5/Python/getopt.c
Python-3.8.5/Python/traceback.c
Python-3.8.5/Python/modsupport.c
Python-3.8.5/Python/hamt.c
Python-3.8.5/Python/wordcode_helpers.h
Python-3.8.5/Python/getversion.c
Python-3.8.5/Python/pyhash.c
Python-3.8.5/Python/dup2.c
Python-3.8.5/Python/pystrtod.c
Python-3.8.5/Python/pystate.c
Python-3.8.5/Python/importdl.h
Python-3.8.5/Python/peephole.c
Python-3.8.5/Python/makeopcodetargets.py
Python-3.8.5/Python/pyfpe.c
Python-3.8.5/Python/ast_unparse.c
Python-3.8.5/Python/future.c
Python-3.8.5/install-sh
Python-3.8.5/Lib/
Python-3.8.5/Lib/fnmatch.py
Python-3.8.5/Lib/_dummy_thread.py
Python-3.8.5/Lib/cgitb.py
Python-3.8.5/Lib/getopt.py
Python-3.8.5/Lib/quopri.py
Python-3.8.5/Lib/site-packages/
Python-3.8.5/Lib/site-packages/README.txt
Python-3.8.5/Lib/reprlib.py
Python-3.8.5/Lib/smtpd.py
Python-3.8.5/Lib/getpass.py
Python-3.8.5/Lib/antigravity.py
Python-3.8.5/Lib/functools.py
Python-3.8.5/Lib/pathlib.py
Python-3.8.5/Lib/csv.py
Python-3.8.5/Lib/trace.py
Python-3.8.5/Lib/tty.py
Python-3.8.5/Lib/re.py
Python-3.8.5/Lib/difflib.py
Python-3.8.5/Lib/glob.py
Python-3.8.5/Lib/copy.py
Python-3.8.5/Lib/unittest/
Python-3.8.5/Lib/unittest/signals.py
Python-3.8.5/Lib/unittest/main.py
Python-3.8.5/Lib/unittest/loader.py
Python-3.8.5/Lib/unittest/async_case.py
Python-3.8.5/Lib/unittest/__main__.py
Python-3.8.5/Lib/unittest/suite.py
Python-3.8.5/Lib/unittest/__init__.py
Python-3.8.5/Lib/unittest/test/
Python-3.8.5/Lib/unittest/test/test_runner.py
Python-3.8.5/Lib/unittest/test/support.py
Python-3.8.5/Lib/unittest/test/test_break.py
Python-3.8.5/Lib/unittest/test/test_setups.py
Python-3.8.5/Lib/unittest/test/test_loader.py
Python-3.8.5/Lib/unittest/test/test_case.py
Python-3.8.5/Lib/unittest/test/__main__.py
Python-3.8.5/Lib/unittest/test/test_result.py
Python-3.8.5/Lib/unittest/test/test_assertions.py
Python-3.8.5/Lib/unittest/test/_test_warnings.py
Python-3.8.5/Lib/unittest/test/__init__.py
Python-3.8.5/Lib/unittest/test/dummy.py
Python-3.8.5/Lib/unittest/test/testmock/
Python-3.8.5/Lib/unittest/test/testmock/testcallable.py
Python-3.8.5/Lib/unittest/test/testmock/support.py
Python-3.8.5/Lib/unittest/test/testmock/testasync.py
Python-3.8.5/Lib/unittest/test/testmock/testmagicmethods.py
Python-3.8.5/Lib/unittest/test/testmock/__main__.py
Python-3.8.5/Lib/unittest/test/testmock/testsealable.py
Python-3.8.5/Lib/unittest/test/testmock/testhelpers.py
Python-3.8.5/Lib/unittest/test/testmock/__init__.py
Python-3.8.5/Lib/unittest/test/testmock/testsentinel.py
Python-3.8.5/Lib/unittest/test/testmock/testpatch.py
Python-3.8.5/Lib/unittest/test/testmock/testwith.py
Python-3.8.5/Lib/unittest/test/testmock/testmock.py
Python-3.8.5/Lib/unittest/test/test_skipping.py
Python-3.8.5/Lib/unittest/test/test_program.py
Python-3.8.5/Lib/unittest/test/test_suite.py
Python-3.8.5/Lib/unittest/test/test_functiontestcase.py
Python-3.8.5/Lib/unittest/test/test_discovery.py
Python-3.8.5/Lib/unittest/test/test_async_case.py
Python-3.8.5/Lib/unittest/result.py
Python-3.8.5/Lib/unittest/runner.py
Python-3.8.5/Lib/unittest/util.py
Python-3.8.5/Lib/unittest/mock.py
Python-3.8.5/Lib/unittest/case.py
Python-3.8.5/Lib/curses/
Python-3.8.5/Lib/curses/has_key.py
Python-3.8.5/Lib/curses/textpad.py
Python-3.8.5/Lib/curses/ascii.py
Python-3.8.5/Lib/curses/__init__.py
Python-3.8.5/Lib/curses/panel.py
Python-3.8.5/Lib/bz2.py
Python-3.8.5/Lib/_weakrefset.py
Python-3.8.5/Lib/heapq.py
Python-3.8.5/Lib/sre_parse.py
Python-3.8.5/Lib/filecmp.py
Python-3.8.5/Lib/secrets.py
Python-3.8.5/Lib/selectors.py
Python-3.8.5/Lib/traceback.py
Python-3.8.5/Lib/bisect.py
Python-3.8.5/Lib/email/
Python-3.8.5/Lib/email/iterators.py
Python-3.8.5/Lib/email/policy.py
Python-3.8.5/Lib/email/contentmanager.py
Python-3.8.5/Lib/email/header.py
Python-3.8.5/Lib/email/message.py
Python-3.8.5/Lib/email/base64mime.py
Python-3.8.5/Lib/email/_parseaddr.py
Python-3.8.5/Lib/email/_encoded_words.py
Python-3.8.5/Lib/email/feedparser.py
Python-3.8.5/Lib/email/_policybase.py
Python-3.8.5/Lib/email/__init__.py
Python-3.8.5/Lib/email/errors.py
Python-3.8.5/Lib/email/parser.py
Python-3.8.5/Lib/email/charset.py
Python-3.8.5/Lib/email/quoprimime.py
Python-3.8.5/Lib/email/mime/
Python-3.8.5/Lib/email/mime/message.py
Python-3.8.5/Lib/email/mime/image.py
Python-3.8.5/Lib/email/mime/application.py
Python-3.8.5/Lib/email/mime/nonmultipart.py
Python-3.8.5/Lib/email/mime/__init__.py
Python-3.8.5/Lib/email/mime/multipart.py
Python-3.8.5/Lib/email/mime/audio.py
Python-3.8.5/Lib/email/mime/base.py
Python-3.8.5/Lib/email/mime/text.py
Python-3.8.5/Lib/email/utils.py
Python-3.8.5/Lib/email/_header_value_parser.py
Python-3.8.5/Lib/email/architecture.rst
Python-3.8.5/Lib/email/encoders.py
Python-3.8.5/Lib/email/generator.py
Python-3.8.5/Lib/email/headerregistry.py
Python-3.8.5/Lib/_strptime.py
Python-3.8.5/Lib/plistlib.py
Python-3.8.5/Lib/xmlrpc/
Python-3.8.5/Lib/xmlrpc/server.py
Python-3.8.5/Lib/xmlrpc/__init__.py
Python-3.8.5/Lib/xmlrpc/client.py
Python-3.8.5/Lib/locale.py
Python-3.8.5/Lib/tkinter/
Python-3.8.5/Lib/tkinter/constants.py
Python-3.8.5/Lib/tkinter/dialog.py
Python-3.8.5/Lib/tkinter/filedialog.py
Python-3.8.5/Lib/tkinter/dnd.py
Python-3.8.5/Lib/tkinter/commondialog.py
Python-3.8.5/Lib/tkinter/tix.py
Python-3.8.5/Lib/tkinter/__main__.py
Python-3.8.5/Lib/tkinter/__init__.py
Python-3.8.5/Lib/tkinter/simpledialog.py
Python-3.8.5/Lib/tkinter/scrolledtext.py
Python-3.8.5/Lib/tkinter/test/
Python-3.8.5/Lib/tkinter/test/README
Python-3.8.5/Lib/tkinter/test/test_ttk/
Python-3.8.5/Lib/tkinter/test/test_ttk/test_functions.py
Python-3.8.5/Lib/tkinter/test/test_ttk/test_style.py
Python-3.8.5/Lib/tkinter/test/test_ttk/__init__.py
Python-3.8.5/Lib/tkinter/test/test_ttk/test_widgets.py
Python-3.8.5/Lib/tkinter/test/test_ttk/test_extensions.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_loadtk.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/__init__.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_images.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_geometry_managers.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_text.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_widgets.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_misc.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_font.py
Python-3.8.5/Lib/tkinter/test/test_tkinter/test_variables.py
Python-3.8.5/Lib/tkinter/test/support.py
Python-3.8.5/Lib/tkinter/test/__init__.py
Python-3.8.5/Lib/tkinter/test/widget_tests.py
Python-3.8.5/Lib/tkinter/test/runtktests.py
Python-3.8.5/Lib/tkinter/font.py
Python-3.8.5/Lib/tkinter/colorchooser.py
Python-3.8.5/Lib/tkinter/ttk.py
Python-3.8.5/Lib/tkinter/messagebox.py
Python-3.8.5/Lib/uu.py
Python-3.8.5/Lib/pyclbr.py
Python-3.8.5/Lib/asyncio/
Python-3.8.5/Lib/asyncio/events.py
Python-3.8.5/Lib/asyncio/transports.py
Python-3.8.5/Lib/asyncio/constants.py
Python-3.8.5/Lib/asyncio/format_helpers.py
Python-3.8.5/Lib/asyncio/coroutines.py
Python-3.8.5/Lib/asyncio/base_tasks.py
Python-3.8.5/Lib/asyncio/sslproto.py
Python-3.8.5/Lib/asyncio/base_futures.py
Python-3.8.5/Lib/asyncio/staggered.py
Python-3.8.5/Lib/asyncio/trsock.py
Python-3.8.5/Lib/asyncio/futures.py
Python-3.8.5/Lib/asyncio/log.py
Python-3.8.5/Lib/asyncio/__main__.py
Python-3.8.5/Lib/asyncio/subprocess.py
Python-3.8.5/Lib/asyncio/__init__.py
Python-3.8.5/Lib/asyncio/base_subprocess.py
Python-3.8.5/Lib/asyncio/streams.py
Python-3.8.5/Lib/asyncio/locks.py
Python-3.8.5/Lib/asyncio/exceptions.py
Python-3.8.5/Lib/asyncio/proactor_events.py
Python-3.8.5/Lib/asyncio/tasks.py
Python-3.8.5/Lib/asyncio/selector_events.py
Python-3.8.5/Lib/asyncio/queues.py
Python-3.8.5/Lib/asyncio/unix_events.py
Python-3.8.5/Lib/asyncio/runners.py
Python-3.8.5/Lib/asyncio/protocols.py
Python-3.8.5/Lib/asyncio/base_events.py
Python-3.8.5/Lib/asyncio/windows_events.py
Python-3.8.5/Lib/asyncio/windows_utils.py
Python-3.8.5/Lib/abc.py
Python-3.8.5/Lib/_osx_support.py
Python-3.8.5/Lib/stringprep.py
Python-3.8.5/Lib/wave.py
Python-3.8.5/Lib/posixpath.py
Python-3.8.5/Lib/zipfile.py
Python-3.8.5/Lib/copyreg.py
Python-3.8.5/Lib/nturl2path.py
Python-3.8.5/Lib/venv/
Python-3.8.5/Lib/venv/__main__.py
Python-3.8.5/Lib/venv/__init__.py
Python-3.8.5/Lib/venv/scripts/
Python-3.8.5/Lib/venv/scripts/nt/
Python-3.8.5/Lib/venv/scripts/nt/deactivate.bat
Python-3.8.5/Lib/venv/scripts/nt/activate.bat
Python-3.8.5/Lib/venv/scripts/common/
Python-3.8.5/Lib/venv/scripts/common/Activate.ps1
Python-3.8.5/Lib/venv/scripts/common/activate
Python-3.8.5/Lib/venv/scripts/posix/
Python-3.8.5/Lib/venv/scripts/posix/activate.fish
Python-3.8.5/Lib/venv/scripts/posix/activate.csh
Python-3.8.5/Lib/xml/
Python-3.8.5/Lib/xml/parsers/
Python-3.8.5/Lib/xml/parsers/__init__.py
Python-3.8.5/Lib/xml/parsers/expat.py
Python-3.8.5/Lib/xml/etree/
Python-3.8.5/Lib/xml/etree/ElementPath.py
Python-3.8.5/Lib/xml/etree/ElementTree.py
Python-3.8.5/Lib/xml/etree/cElementTree.py
Python-3.8.5/Lib/xml/etree/__init__.py
Python-3.8.5/Lib/xml/etree/ElementInclude.py
Python-3.8.5/Lib/xml/__init__.py
Python-3.8.5/Lib/xml/sax/
Python-3.8.5/Lib/xml/sax/expatreader.py
Python-3.8.5/Lib/xml/sax/__init__.py
Python-3.8.5/Lib/xml/sax/saxutils.py
Python-3.8.5/Lib/xml/sax/xmlreader.py
Python-3.8.5/Lib/xml/sax/_exceptions.py
Python-3.8.5/Lib/xml/sax/handler.py
Python-3.8.5/Lib/xml/dom/
Python-3.8.5/Lib/xml/dom/minidom.py
Python-3.8.5/Lib/xml/dom/NodeFilter.py
Python-3.8.5/Lib/xml/dom/__init__.py
Python-3.8.5/Lib/xml/dom/xmlbuilder.py
Python-3.8.5/Lib/xml/dom/minicompat.py
Python-3.8.5/Lib/xml/dom/pulldom.py
Python-3.8.5/Lib/xml/dom/domreg.py
Python-3.8.5/Lib/xml/dom/expatbuilder.py
Python-3.8.5/Lib/py_compile.py
Python-3.8.5/Lib/nntplib.py
Python-3.8.5/Lib/imp.py
Python-3.8.5/Lib/pipes.py
Python-3.8.5/Lib/ftplib.py
Python-3.8.5/Lib/aifc.py
Python-3.8.5/Lib/sndhdr.py
Python-3.8.5/Lib/sysconfig.py
Python-3.8.5/Lib/platform.py
Python-3.8.5/Lib/typing.py
Python-3.8.5/Lib/sunau.py
Python-3.8.5/Lib/codeop.py
Python-3.8.5/Lib/fileinput.py
Python-3.8.5/Lib/cProfile.py
Python-3.8.5/Lib/numbers.py
Python-3.8.5/Lib/inspect.py
Python-3.8.5/Lib/sre_compile.py
Python-3.8.5/Lib/__phello__.foo.py
Python-3.8.5/Lib/dbm/
Python-3.8.5/Lib/dbm/gnu.py
Python-3.8.5/Lib/dbm/ndbm.py
Python-3.8.5/Lib/dbm/__init__.py
Python-3.8.5/Lib/dbm/dumb.py
Python-3.8.5/Lib/turtle.py
Python-3.8.5/Lib/webbrowser.py
Python-3.8.5/Lib/dummy_threading.py
Python-3.8.5/Lib/binhex.py
Python-3.8.5/Lib/configparser.py
Python-3.8.5/Lib/sched.py
Python-3.8.5/Lib/urllib/
Python-3.8.5/Lib/urllib/request.py
Python-3.8.5/Lib/urllib/parse.py
Python-3.8.5/Lib/urllib/__init__.py
Python-3.8.5/Lib/urllib/error.py
Python-3.8.5/Lib/urllib/robotparser.py
Python-3.8.5/Lib/urllib/response.py
Python-3.8.5/Lib/xdrlib.py
Python-3.8.5/Lib/html/
Python-3.8.5/Lib/html/__init__.py
Python-3.8.5/Lib/html/parser.py
Python-3.8.5/Lib/html/entities.py
Python-3.8.5/Lib/optparse.py
Python-3.8.5/Lib/netrc.py
Python-3.8.5/Lib/lib2to3/
Python-3.8.5/Lib/lib2to3/fixes/
Python-3.8.5/Lib/lib2to3/fixes/fix_print.py
Python-3.8.5/Lib/lib2to3/fixes/fix_next.py
Python-3.8.5/Lib/lib2to3/fixes/fix_future.py
Python-3.8.5/Lib/lib2to3/fixes/fix_except.py
Python-3.8.5/Lib/lib2to3/fixes/fix_getcwdu.py
Python-3.8.5/Lib/lib2to3/fixes/fix_basestring.py
Python-3.8.5/Lib/lib2to3/fixes/fix_numliterals.py
Python-3.8.5/Lib/lib2to3/fixes/fix_methodattrs.py
Python-3.8.5/Lib/lib2to3/fixes/fix_raw_input.py
Python-3.8.5/Lib/lib2to3/fixes/fix_urllib.py
Python-3.8.5/Lib/lib2to3/fixes/fix_itertools.py
Python-3.8.5/Lib/lib2to3/fixes/fix_throw.py
Python-3.8.5/Lib/lib2to3/fixes/fix_intern.py
Python-3.8.5/Lib/lib2to3/fixes/fix_metaclass.py
Python-3.8.5/Lib/lib2to3/fixes/fix_ne.py
Python-3.8.5/Lib/lib2to3/fixes/fix_asserts.py
Python-3.8.5/Lib/lib2to3/fixes/fix_funcattrs.py
Python-3.8.5/Lib/lib2to3/fixes/fix_nonzero.py
Python-3.8.5/Lib/lib2to3/fixes/fix_tuple_params.py
Python-3.8.5/Lib/lib2to3/fixes/fix_types.py
Python-3.8.5/Lib/lib2to3/fixes/fix_long.py
Python-3.8.5/Lib/lib2to3/fixes/fix_apply.py
Python-3.8.5/Lib/lib2to3/fixes/fix_imports.py
Python-3.8.5/Lib/lib2to3/fixes/fix_itertools_imports.py
Python-3.8.5/Lib/lib2to3/fixes/fix_paren.py
Python-3.8.5/Lib/lib2to3/fixes/fix_xreadlines.py
Python-3.8.5/Lib/lib2to3/fixes/fix_idioms.py
Python-3.8.5/Lib/lib2to3/fixes/fix_raise.py
Python-3.8.5/Lib/lib2to3/fixes/__init__.py
Python-3.8.5/Lib/lib2to3/fixes/fix_sys_exc.py
Python-3.8.5/Lib/lib2to3/fixes/fix_exec.py
Python-3.8.5/Lib/lib2to3/fixes/fix_unicode.py
Python-3.8.5/Lib/lib2to3/fixes/fix_ws_comma.py
Python-3.8.5/Lib/lib2to3/fixes/fix_operator.py
Python-3.8.5/Lib/lib2to3/fixes/fix_exitfunc.py
Python-3.8.5/Lib/lib2to3/fixes/fix_standarderror.py
Python-3.8.5/Lib/lib2to3/fixes/fix_repr.py
Python-3.8.5/Lib/lib2to3/fixes/fix_dict.py
Python-3.8.5/Lib/lib2to3/fixes/fix_zip.py
Python-3.8.5/Lib/lib2to3/fixes/fix_execfile.py
Python-3.8.5/Lib/lib2to3/fixes/fix_buffer.py
Python-3.8.5/Lib/lib2to3/fixes/fix_has_key.py
Python-3.8.5/Lib/lib2to3/fixes/fix_map.py
Python-3.8.5/Lib/lib2to3/fixes/fix_renames.py
Python-3.8.5/Lib/lib2to3/fixes/fix_xrange.py
Python-3.8.5/Lib/lib2to3/fixes/fix_import.py
Python-3.8.5/Lib/lib2to3/fixes/fix_input.py
Python-3.8.5/Lib/lib2to3/fixes/fix_isinstance.py
Python-3.8.5/Lib/lib2to3/fixes/fix_set_literal.py
Python-3.8.5/Lib/lib2to3/fixes/fix_reload.py
Python-3.8.5/Lib/lib2to3/fixes/fix_imports2.py
Python-3.8.5/Lib/lib2to3/fixes/fix_reduce.py
Python-3.8.5/Lib/lib2to3/fixes/fix_filter.py
Python-3.8.5/Lib/lib2to3/patcomp.py
Python-3.8.5/Lib/lib2to3/btm_utils.py
Python-3.8.5/Lib/lib2to3/Grammar.txt
Python-3.8.5/Lib/lib2to3/main.py
Python-3.8.5/Lib/lib2to3/tests/
Python-3.8.5/Lib/lib2to3/tests/test_parser.py
Python-3.8.5/Lib/lib2to3/tests/support.py
Python-3.8.5/Lib/lib2to3/tests/test_refactor.py
Python-3.8.5/Lib/lib2to3/tests/__main__.py
Python-3.8.5/Lib/lib2to3/tests/test_fixers.py
Python-3.8.5/Lib/lib2to3/tests/__init__.py
Python-3.8.5/Lib/lib2to3/tests/test_all_fixers.py
Python-3.8.5/Lib/lib2to3/tests/test_main.py
Python-3.8.5/Lib/lib2to3/tests/test_pytree.py
Python-3.8.5/Lib/lib2to3/tests/test_util.py
Python-3.8.5/Lib/lib2to3/tests/pytree_idempotency.py
Python-3.8.5/Lib/lib2to3/tests/data/
Python-3.8.5/Lib/lib2to3/tests/data/README
Python-3.8.5/Lib/lib2to3/tests/data/bom.py
Python-3.8.5/Lib/lib2to3/tests/data/py3_test_grammar.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/
Python-3.8.5/Lib/lib2to3/tests/data/fixers/parrot_example.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/no_fixer_cls.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/myfixes/
Python-3.8.5/Lib/lib2to3/tests/data/fixers/myfixes/fix_explicit.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/myfixes/fix_preorder.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/myfixes/__init__.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/myfixes/fix_first.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/myfixes/fix_parrot.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/myfixes/fix_last.py
Python-3.8.5/Lib/lib2to3/tests/data/fixers/bad_order.py
Python-3.8.5/Lib/lib2to3/tests/data/py2_test_grammar.py
Python-3.8.5/Lib/lib2to3/tests/data/false_encoding.py
Python-3.8.5/Lib/lib2to3/tests/data/different_encoding.py
Python-3.8.5/Lib/lib2to3/tests/data/infinite_recursion.py
Python-3.8.5/Lib/lib2to3/tests/data/crlf.py
Python-3.8.5/Lib/lib2to3/pytree.py
Python-3.8.5/Lib/lib2to3/__main__.py
Python-3.8.5/Lib/lib2to3/__init__.py
Python-3.8.5/Lib/lib2to3/refactor.py
Python-3.8.5/Lib/lib2to3/fixer_util.py
Python-3.8.5/Lib/lib2to3/pgen2/
Python-3.8.5/Lib/lib2to3/pgen2/literals.py
Python-3.8.5/Lib/lib2to3/pgen2/grammar.py
Python-3.8.5/Lib/lib2to3/pgen2/parse.py
Python-3.8.5/Lib/lib2to3/pgen2/__init__.py
Python-3.8.5/Lib/lib2to3/pgen2/conv.py
Python-3.8.5/Lib/lib2to3/pgen2/tokenize.py
Python-3.8.5/Lib/lib2to3/pgen2/driver.py
Python-3.8.5/Lib/lib2to3/pgen2/token.py
Python-3.8.5/Lib/lib2to3/pgen2/pgen.py
Python-3.8.5/Lib/lib2to3/fixer_base.py
Python-3.8.5/Lib/lib2to3/btm_matcher.py
Python-3.8.5/Lib/lib2to3/pygram.py
Python-3.8.5/Lib/lib2to3/PatternGrammar.txt
Python-3.8.5/Lib/queue.py
Python-3.8.5/Lib/contextlib.py
Python-3.8.5/Lib/logging/
Python-3.8.5/Lib/logging/config.py
Python-3.8.5/Lib/logging/__init__.py
Python-3.8.5/Lib/logging/handlers.py
Python-3.8.5/Lib/subprocess.py
Python-3.8.5/Lib/msilib/
Python-3.8.5/Lib/msilib/sequence.py
Python-3.8.5/Lib/msilib/__init__.py
Python-3.8.5/Lib/msilib/schema.py
Python-3.8.5/Lib/msilib/text.py
Python-3.8.5/Lib/warnings.py
Python-3.8.5/Lib/pickle.py
Python-3.8.5/Lib/http/
Python-3.8.5/Lib/http/server.py
Python-3.8.5/Lib/http/cookiejar.py
Python-3.8.5/Lib/http/__init__.py
Python-3.8.5/Lib/http/client.py
Python-3.8.5/Lib/http/cookies.py
Python-3.8.5/Lib/this.py
Python-3.8.5/Lib/datetime.py
Python-3.8.5/Lib/zipapp.py
Python-3.8.5/Lib/operator.py
Python-3.8.5/Lib/mailbox.py
Python-3.8.5/Lib/statistics.py
Python-3.8.5/Lib/doctest.py
Python-3.8.5/Lib/_compat_pickle.py
Python-3.8.5/Lib/shlex.py
Python-3.8.5/Lib/stat.py
Python-3.8.5/Lib/types.py
Python-3.8.5/Lib/string.py
Python-3.8.5/Lib/idlelib/
Python-3.8.5/Lib/idlelib/zzdummy.py
Python-3.8.5/Lib/idlelib/config.py
Python-3.8.5/Lib/idlelib/query.py
Python-3.8.5/Lib/idlelib/outwin.py
Python-3.8.5/Lib/idlelib/idle.pyw
Python-3.8.5/Lib/idlelib/filelist.py
Python-3.8.5/Lib/idlelib/NEWS.txt
Python-3.8.5/Lib/idlelib/mainmenu.py
Python-3.8.5/Lib/idlelib/pyparse.py
Python-3.8.5/Lib/idlelib/run.py
Python-3.8.5/Lib/idlelib/calltip_w.py
Python-3.8.5/Lib/idlelib/debugger.py
Python-3.8.5/Lib/idlelib/scrolledlist.py
Python-3.8.5/Lib/idlelib/CREDITS.txt
Python-3.8.5/Lib/idlelib/configdialog.py
Python-3.8.5/Lib/idlelib/Icons/
Python-3.8.5/Lib/idlelib/Icons/idle_48.png
Python-3.8.5/Lib/idlelib/Icons/idle_256.png
Python-3.8.5/Lib/idlelib/Icons/folder.gif
Python-3.8.5/Lib/idlelib/Icons/openfolder.gif
Python-3.8.5/Lib/idlelib/Icons/idle_32.png
Python-3.8.5/Lib/idlelib/Icons/idle_16.gif
Python-3.8.5/Lib/idlelib/Icons/python.gif
Python-3.8.5/Lib/idlelib/Icons/README.txt
Python-3.8.5/Lib/idlelib/Icons/idle_48.gif
Python-3.8.5/Lib/idlelib/Icons/idle_16.png
Python-3.8.5/Lib/idlelib/Icons/plusnode.gif
Python-3.8.5/Lib/idlelib/Icons/minusnode.gif
Python-3.8.5/Lib/idlelib/Icons/idle.ico
Python-3.8.5/Lib/idlelib/Icons/idle_32.gif
Python-3.8.5/Lib/idlelib/Icons/tk.gif
Python-3.8.5/Lib/idlelib/grep.py
Python-3.8.5/Lib/idlelib/tree.py
Python-3.8.5/Lib/idlelib/replace.py
Python-3.8.5/Lib/idlelib/format.py
Python-3.8.5/Lib/idlelib/debugobj.py
Python-3.8.5/Lib/idlelib/undo.py
Python-3.8.5/Lib/idlelib/window.py
Python-3.8.5/Lib/idlelib/NEWS2x.txt
Python-3.8.5/Lib/idlelib/HISTORY.txt
Python-3.8.5/Lib/idlelib/calltip.py
Python-3.8.5/Lib/idlelib/autocomplete.py
Python-3.8.5/Lib/idlelib/sidebar.py
Python-3.8.5/Lib/idlelib/dynoption.py
Python-3.8.5/Lib/idlelib/help.py
Python-3.8.5/Lib/idlelib/statusbar.py
Python-3.8.5/Lib/idlelib/search.py
Python-3.8.5/Lib/idlelib/delegator.py
Python-3.8.5/Lib/idlelib/stackviewer.py
Python-3.8.5/Lib/idlelib/browser.py
Python-3.8.5/Lib/idlelib/tooltip.py
Python-3.8.5/Lib/idlelib/config-keys.def
Python-3.8.5/Lib/idlelib/runscript.py
Python-3.8.5/Lib/idlelib/README.txt
Python-3.8.5/Lib/idlelib/__main__.py
Python-3.8.5/Lib/idlelib/config-main.def
Python-3.8.5/Lib/idlelib/macosx.py
Python-3.8.5/Lib/idlelib/textview.py
Python-3.8.5/Lib/idlelib/__init__.py
Python-3.8.5/Lib/idlelib/percolator.py
Python-3.8.5/Lib/idlelib/codecontext.py
Python-3.8.5/Lib/idlelib/extend.txt
Python-3.8.5/Lib/idlelib/idle_test/
Python-3.8.5/Lib/idlelib/idle_test/test_config_key.py
Python-3.8.5/Lib/idlelib/idle_test/test_percolator.py
Python-3.8.5/Lib/idlelib/idle_test/test_window.py
Python-3.8.5/Lib/idlelib/idle_test/htest.py
Python-3.8.5/Lib/idlelib/idle_test/test_macosx.py
Python-3.8.5/Lib/idlelib/idle_test/test_autoexpand.py
Python-3.8.5/Lib/idlelib/idle_test/test_textview.py
Python-3.8.5/Lib/idlelib/idle_test/test_replace.py
Python-3.8.5/Lib/idlelib/idle_test/test_pathbrowser.py
Python-3.8.5/Lib/idlelib/idle_test/test_query.py
Python-3.8.5/Lib/idlelib/idle_test/test_grep.py
Python-3.8.5/Lib/idlelib/idle_test/test_debugger.py
Python-3.8.5/Lib/idlelib/idle_test/test_squeezer.py
Python-3.8.5/Lib/idlelib/idle_test/test_debugger_r.py
Python-3.8.5/Lib/idlelib/idle_test/test_scrolledlist.py
Python-3.8.5/Lib/idlelib/idle_test/test_pyshell.py
Python-3.8.5/Lib/idlelib/idle_test/test_zoomheight.py
Python-3.8.5/Lib/idlelib/idle_test/test_editmenu.py
Python-3.8.5/Lib/idlelib/idle_test/test_run.py
Python-3.8.5/Lib/idlelib/idle_test/test_tooltip.py
Python-3.8.5/Lib/idlelib/idle_test/test_format.py
Python-3.8.5/Lib/idlelib/idle_test/test_multicall.py
Python-3.8.5/Lib/idlelib/idle_test/test_searchbase.py
Python-3.8.5/Lib/idlelib/idle_test/test_search.py
Python-3.8.5/Lib/idlelib/idle_test/test_help.py
Python-3.8.5/Lib/idlelib/idle_test/test_outwin.py
Python-3.8.5/Lib/idlelib/idle_test/test_parenmatch.py
Python-3.8.5/Lib/idlelib/idle_test/test_runscript.py
Python-3.8.5/Lib/idlelib/idle_test/test_calltip.py
Python-3.8.5/Lib/idlelib/idle_test/test_delegator.py
Python-3.8.5/Lib/idlelib/idle_test/README.txt
Python-3.8.5/Lib/idlelib/idle_test/__init__.py
Python-3.8.5/Lib/idlelib/idle_test/test_autocomplete_w.py
Python-3.8.5/Lib/idlelib/idle_test/test_statusbar.py
Python-3.8.5/Lib/idlelib/idle_test/test_hyperparser.py
Python-3.8.5/Lib/idlelib/idle_test/test_undo.py
Python-3.8.5/Lib/idlelib/idle_test/test_searchengine.py
Python-3.8.5/Lib/idlelib/idle_test/template.py
Python-3.8.5/Lib/idlelib/idle_test/test_config.py
Python-3.8.5/Lib/idlelib/idle_test/test_stackviewer.py
Python-3.8.5/Lib/idlelib/idle_test/test_help_about.py
Python-3.8.5/Lib/idlelib/idle_test/test_history.py
Python-3.8.5/Lib/idlelib/idle_test/test_pyparse.py
Python-3.8.5/Lib/idlelib/idle_test/test_text.py
Python-3.8.5/Lib/idlelib/idle_test/test_redirector.py
Python-3.8.5/Lib/idlelib/idle_test/test_browser.py
Python-3.8.5/Lib/idlelib/idle_test/test_sidebar.py
Python-3.8.5/Lib/idlelib/idle_test/test_debugobj.py
Python-3.8.5/Lib/idlelib/idle_test/test_configdialog.py
Python-3.8.5/Lib/idlelib/idle_test/test_codecontext.py
Python-3.8.5/Lib/idlelib/idle_test/test_filelist.py
Python-3.8.5/Lib/idlelib/idle_test/test_rpc.py
Python-3.8.5/Lib/idlelib/idle_test/mock_tk.py
Python-3.8.5/Lib/idlelib/idle_test/test_mainmenu.py
Python-3.8.5/Lib/idlelib/idle_test/test_warning.py
Python-3.8.5/Lib/idlelib/idle_test/test_editor.py
Python-3.8.5/Lib/idlelib/idle_test/test_autocomplete.py
Python-3.8.5/Lib/idlelib/idle_test/mock_idle.py
Python-3.8.5/Lib/idlelib/idle_test/test_tree.py
Python-3.8.5/Lib/idlelib/idle_test/test_calltip_w.py
Python-3.8.5/Lib/idlelib/idle_test/test_debugobj_r.py
Python-3.8.5/Lib/idlelib/idle_test/test_iomenu.py
Python-3.8.5/Lib/idlelib/idle_test/test_colorizer.py
Python-3.8.5/Lib/idlelib/parenmatch.py
Python-3.8.5/Lib/idlelib/autocomplete_w.py
Python-3.8.5/Lib/idlelib/multicall.py
Python-3.8.5/Lib/idlelib/pyshell.py
Python-3.8.5/Lib/idlelib/editor.py
Python-3.8.5/Lib/idlelib/searchbase.py
Python-3.8.5/Lib/idlelib/idle.py
Python-3.8.5/Lib/idlelib/squeezer.py
Python-3.8.5/Lib/idlelib/TODO.txt
Python-3.8.5/Lib/idlelib/hyperparser.py
Python-3.8.5/Lib/idlelib/history.py
Python-3.8.5/Lib/idlelib/autoexpand.py
Python-3.8.5/Lib/idlelib/help_about.py
Python-3.8.5/Lib/idlelib/config-highlight.def
Python-3.8.5/Lib/idlelib/searchengine.py
Python-3.8.5/Lib/idlelib/rpc.py
Python-3.8.5/Lib/idlelib/redirector.py
Python-3.8.5/Lib/idlelib/config-extensions.def
Python-3.8.5/Lib/idlelib/iomenu.py
Python-3.8.5/Lib/idlelib/pathbrowser.py
Python-3.8.5/Lib/idlelib/ChangeLog
Python-3.8.5/Lib/idlelib/colorizer.py
Python-3.8.5/Lib/idlelib/config_key.py
Python-3.8.5/Lib/idlelib/zoomheight.py
Python-3.8.5/Lib/idlelib/debugger_r.py
Python-3.8.5/Lib/idlelib/idle.bat
Python-3.8.5/Lib/idlelib/help.html
Python-3.8.5/Lib/idlelib/debugobj_r.py
Python-3.8.5/Lib/timeit.py
Python-3.8.5/Lib/socketserver.py
Python-3.8.5/Lib/base64.py
Python-3.8.5/Lib/weakref.py
Python-3.8.5/Lib/hashlib.py
Python-3.8.5/Lib/mimetypes.py
Python-3.8.5/Lib/cmd.py
Python-3.8.5/Lib/importlib/
Python-3.8.5/Lib/importlib/abc.py
Python-3.8.5/Lib/importlib/_bootstrap_external.py
Python-3.8.5/Lib/importlib/machinery.py
Python-3.8.5/Lib/importlib/__init__.py
Python-3.8.5/Lib/importlib/_bootstrap.py
Python-3.8.5/Lib/importlib/metadata.py
Python-3.8.5/Lib/importlib/resources.py
Python-3.8.5/Lib/importlib/util.py
Python-3.8.5/Lib/codecs.py
Python-3.8.5/Lib/uuid.py
Python-3.8.5/Lib/pkgutil.py
Python-3.8.5/Lib/_markupbase.py
Python-3.8.5/Lib/tabnanny.py
Python-3.8.5/Lib/_threading_local.py
Python-3.8.5/Lib/collections/
Python-3.8.5/Lib/collections/abc.py
Python-3.8.5/Lib/collections/__init__.py
Python-3.8.5/Lib/tarfile.py
Python-3.8.5/Lib/ast.py
Python-3.8.5/Lib/dis.py
Python-3.8.5/Lib/encodings/
Python-3.8.5/Lib/encodings/cp037.py
Python-3.8.5/Lib/encodings/iso8859_2.py
Python-3.8.5/Lib/encodings/cp1006.py
Python-3.8.5/Lib/encodings/mac_centeuro.py
Python-3.8.5/Lib/encodings/mac_farsi.py
Python-3.8.5/Lib/encodings/cp860.py
Python-3.8.5/Lib/encodings/mac_arabic.py
Python-3.8.5/Lib/encodings/iso8859_9.py
Python-3.8.5/Lib/encodings/koi8_t.py
Python-3.8.5/Lib/encodings/cp737.py
Python-3.8.5/Lib/encodings/iso8859_3.py
Python-3.8.5/Lib/encodings/cp865.py
Python-3.8.5/Lib/encodings/iso2022_jp_3.py
Python-3.8.5/Lib/encodings/cp500.py
Python-3.8.5/Lib/encodings/bz2_codec.py
Python-3.8.5/Lib/encodings/cp1257.py
Python-3.8.5/Lib/encodings/iso8859_11.py
Python-3.8.5/Lib/encodings/cp950.py
Python-3.8.5/Lib/encodings/cp862.py
Python-3.8.5/Lib/encodings/cp1026.py
Python-3.8.5/Lib/encodings/cp1140.py
Python-3.8.5/Lib/encodings/zlib_codec.py
Python-3.8.5/Lib/encodings/raw_unicode_escape.py
Python-3.8.5/Lib/encodings/hz.py
Python-3.8.5/Lib/encodings/cp857.py
Python-3.8.5/Lib/encodings/cp855.py
Python-3.8.5/Lib/encodings/mac_latin2.py
Python-3.8.5/Lib/encodings/cp1256.py
Python-3.8.5/Lib/encodings/cp874.py
Python-3.8.5/Lib/encodings/rot_13.py
Python-3.8.5/Lib/encodings/utf_16_be.py
Python-3.8.5/Lib/encodings/iso8859_15.py
Python-3.8.5/Lib/encodings/iso2022_jp_1.py
Python-3.8.5/Lib/encodings/hex_codec.py
Python-3.8.5/Lib/encodings/big5hkscs.py
Python-3.8.5/Lib/encodings/shift_jisx0213.py
Python-3.8.5/Lib/encodings/shift_jis_2004.py
Python-3.8.5/Lib/encodings/cp864.py
Python-3.8.5/Lib/encodings/kz1048.py
Python-3.8.5/Lib/encodings/ascii.py
Python-3.8.5/Lib/encodings/iso2022_jp_ext.py
Python-3.8.5/Lib/encodings/utf_16.py
Python-3.8.5/Lib/encodings/iso8859_16.py
Python-3.8.5/Lib/encodings/cp1125.py
Python-3.8.5/Lib/encodings/aliases.py
Python-3.8.5/Lib/encodings/iso2022_jp_2004.py
Python-3.8.5/Lib/encodings/base64_codec.py
Python-3.8.5/Lib/encodings/johab.py
Python-3.8.5/Lib/encodings/utf_32_le.py
Python-3.8.5/Lib/encodings/cp1251.py
Python-3.8.5/Lib/encodings/ptcp154.py
Python-3.8.5/Lib/encodings/cp1253.py
Python-3.8.5/Lib/encodings/uu_codec.py
Python-3.8.5/Lib/encodings/tis_620.py
Python-3.8.5/Lib/encodings/mac_iceland.py
Python-3.8.5/Lib/encodings/cp852.py
Python-3.8.5/Lib/encodings/iso8859_13.py
Python-3.8.5/Lib/encodings/cp720.py
Python-3.8.5/Lib/encodings/quopri_codec.py
Python-3.8.5/Lib/encodings/mac_greek.py
Python-3.8.5/Lib/encodings/undefined.py
Python-3.8.5/Lib/encodings/cp875.py
Python-3.8.5/Lib/encodings/gb2312.py
Python-3.8.5/Lib/encodings/idna.py
Python-3.8.5/Lib/encodings/cp1250.py
Python-3.8.5/Lib/encodings/cp1254.py
Python-3.8.5/Lib/encodings/__init__.py
Python-3.8.5/Lib/encodings/koi8_u.py
Python-3.8.5/Lib/encodings/cp273.py
Python-3.8.5/Lib/encodings/euc_kr.py
Python-3.8.5/Lib/encodings/oem.py
Python-3.8.5/Lib/encodings/cp866.py
Python-3.8.5/Lib/encodings/mac_roman.py
Python-3.8.5/Lib/encodings/cp856.py
Python-3.8.5/Lib/encodings/iso8859_6.py
Python-3.8.5/Lib/encodings/utf_16_le.py
Python-3.8.5/Lib/encodings/cp949.py
Python-3.8.5/Lib/encodings/cp1258.py
Python-3.8.5/Lib/encodings/koi8_r.py
Python-3.8.5/Lib/encodings/iso8859_5.py
Python-3.8.5/Lib/encodings/cp437.py
Python-3.8.5/Lib/encodings/charmap.py
Python-3.8.5/Lib/encodings/mbcs.py
Python-3.8.5/Lib/encodings/shift_jis.py
Python-3.8.5/Lib/encodings/mac_cyrillic.py
Python-3.8.5/Lib/encodings/utf_8.py
Python-3.8.5/Lib/encodings/cp1252.py
Python-3.8.5/Lib/encodings/cp869.py
Python-3.8.5/Lib/encodings/punycode.py
Python-3.8.5/Lib/encodings/euc_jp.py
Python-3.8.5/Lib/encodings/cp1255.py
Python-3.8.5/Lib/encodings/mac_turkish.py
Python-3.8.5/Lib/encodings/hp_roman8.py
Python-3.8.5/Lib/encodings/latin_1.py
Python-3.8.5/Lib/encodings/iso2022_jp_2.py
Python-3.8.5/Lib/encodings/big5.py
Python-3.8.5/Lib/encodings/gb18030.py
Python-3.8.5/Lib/encodings/utf_32_be.py
Python-3.8.5/Lib/encodings/cp850.py
Python-3.8.5/Lib/encodings/cp861.py
Python-3.8.5/Lib/encodings/utf_8_sig.py
Python-3.8.5/Lib/encodings/iso8859_1.py
Python-3.8.5/Lib/encodings/euc_jisx0213.py
Python-3.8.5/Lib/encodings/iso8859_14.py
Python-3.8.5/Lib/encodings/cp775.py
Python-3.8.5/Lib/encodings/palmos.py
Python-3.8.5/Lib/encodings/cp424.py
Python-3.8.5/Lib/encodings/utf_32.py
Python-3.8.5/Lib/encodings/iso8859_4.py
Python-3.8.5/Lib/encodings/euc_jis_2004.py
Python-3.8.5/Lib/encodings/iso8859_10.py
Python-3.8.5/Lib/encodings/cp858.py
Python-3.8.5/Lib/encodings/gbk.py
Python-3.8.5/Lib/encodings/utf_7.py
Python-3.8.5/Lib/encodings/iso2022_kr.py
Python-3.8.5/Lib/encodings/iso8859_8.py
Python-3.8.5/Lib/encodings/mac_croatian.py
Python-3.8.5/Lib/encodings/mac_romanian.py
Python-3.8.5/Lib/encodings/iso2022_jp.py
Python-3.8.5/Lib/encodings/cp932.py
Python-3.8.5/Lib/encodings/unicode_escape.py
Python-3.8.5/Lib/encodings/cp863.py
Python-3.8.5/Lib/encodings/iso8859_7.py
Python-3.8.5/Lib/profile.py
Python-3.8.5/Lib/sqlite3/
Python-3.8.5/Lib/sqlite3/dump.py
Python-3.8.5/Lib/sqlite3/dbapi2.py
Python-3.8.5/Lib/sqlite3/__init__.py
Python-3.8.5/Lib/sqlite3/test/
Python-3.8.5/Lib/sqlite3/test/dump.py
Python-3.8.5/Lib/sqlite3/test/regression.py
Python-3.8.5/Lib/sqlite3/test/hooks.py
Python-3.8.5/Lib/sqlite3/test/factory.py
Python-3.8.5/Lib/sqlite3/test/backup.py
Python-3.8.5/Lib/sqlite3/test/__init__.py
Python-3.8.5/Lib/sqlite3/test/userfunctions.py
Python-3.8.5/Lib/sqlite3/test/types.py
Python-3.8.5/Lib/sqlite3/test/dbapi.py
Python-3.8.5/Lib/sqlite3/test/transactions.py
Python-3.8.5/Lib/threading.py
Python-3.8.5/Lib/tracemalloc.py
Python-3.8.5/Lib/modulefinder.py
Python-3.8.5/Lib/code.py
Python-3.8.5/Lib/signal.py
Python-3.8.5/Lib/shutil.py
Python-3.8.5/Lib/calendar.py
Python-3.8.5/Lib/runpy.py
Python-3.8.5/Lib/gettext.py
Python-3.8.5/Lib/gzip.py
Python-3.8.5/Lib/pydoc_data/
Python-3.8.5/Lib/pydoc_data/_pydoc.css
Python-3.8.5/Lib/pydoc_data/__init__.py
Python-3.8.5/Lib/pydoc_data/topics.py
Python-3.8.5/Lib/pprint.py
Python-3.8.5/Lib/asynchat.py
Python-3.8.5/Lib/symtable.py
Python-3.8.5/Lib/bdb.py
Python-3.8.5/Lib/tokenize.py
Python-3.8.5/Lib/smtplib.py
Python-3.8.5/Lib/contextvars.py
Python-3.8.5/Lib/keyword.py
Python-3.8.5/Lib/distutils/
Python-3.8.5/Lib/distutils/README
Python-3.8.5/Lib/distutils/config.py
Python-3.8.5/Lib/distutils/filelist.py
Python-3.8.5/Lib/distutils/version.py
Python-3.8.5/Lib/distutils/spawn.py
Python-3.8.5/Lib/distutils/dist.py
Python-3.8.5/Lib/distutils/ccompiler.py
Python-3.8.5/Lib/distutils/tests/
Python-3.8.5/Lib/distutils/tests/test_build_py.py
Python-3.8.5/Lib/distutils/tests/test_log.py
Python-3.8.5/Lib/distutils/tests/test_bdist.py
Python-3.8.5/Lib/distutils/tests/test_msvc9compiler.py
Python-3.8.5/Lib/distutils/tests/Setup.sample
Python-3.8.5/Lib/distutils/tests/test_sdist.py
Python-3.8.5/Lib/distutils/tests/test_dep_util.py
Python-3.8.5/Lib/distutils/tests/support.py
Python-3.8.5/Lib/distutils/tests/test_msvccompiler.py
Python-3.8.5/Lib/distutils/tests/test_build_ext.py
Python-3.8.5/Lib/distutils/tests/test_config_cmd.py
Python-3.8.5/Lib/distutils/tests/includetest.rst
Python-3.8.5/Lib/distutils/tests/test_check.py
Python-3.8.5/Lib/distutils/tests/test_register.py
Python-3.8.5/Lib/distutils/tests/test_bdist_rpm.py
Python-3.8.5/Lib/distutils/tests/test_upload.py
Python-3.8.5/Lib/distutils/tests/test_build_clib.py
Python-3.8.5/Lib/distutils/tests/test_versionpredicate.py
Python-3.8.5/Lib/distutils/tests/test_sysconfig.py
Python-3.8.5/Lib/distutils/tests/test_dist.py
Python-3.8.5/Lib/distutils/tests/test_build_scripts.py
Python-3.8.5/Lib/distutils/tests/test_install_headers.py
Python-3.8.5/Lib/distutils/tests/test_core.py
Python-3.8.5/Lib/distutils/tests/__init__.py
Python-3.8.5/Lib/distutils/tests/test_version.py
Python-3.8.5/Lib/distutils/tests/test_install_scripts.py
Python-3.8.5/Lib/distutils/tests/test_install_lib.py
Python-3.8.5/Lib/distutils/tests/test_config.py
Python-3.8.5/Lib/distutils/tests/test_bdist_dumb.py
Python-3.8.5/Lib/distutils/tests/test_cygwinccompiler.py
Python-3.8.5/Lib/distutils/tests/test_util.py
Python-3.8.5/Lib/distutils/tests/test_file_util.py
Python-3.8.5/Lib/distutils/tests/test_text_file.py
Python-3.8.5/Lib/distutils/tests/test_dir_util.py
Python-3.8.5/Lib/distutils/tests/test_extension.py
Python-3.8.5/Lib/distutils/tests/test_bdist_wininst.py
Python-3.8.5/Lib/distutils/tests/test_archive_util.py
Python-3.8.5/Lib/distutils/tests/test_filelist.py
Python-3.8.5/Lib/distutils/tests/test_build.py
Python-3.8.5/Lib/distutils/tests/test_cmd.py
Python-3.8.5/Lib/distutils/tests/test_bdist_msi.py
Python-3.8.5/Lib/distutils/tests/test_unixccompiler.py
Python-3.8.5/Lib/distutils/tests/test_clean.py
Python-3.8.5/Lib/distutils/tests/test_install_data.py
Python-3.8.5/Lib/distutils/tests/test_spawn.py
Python-3.8.5/Lib/distutils/tests/test_install.py
Python-3.8.5/Lib/distutils/sysconfig.py
Python-3.8.5/Lib/distutils/dir_util.py
Python-3.8.5/Lib/distutils/log.py
Python-3.8.5/Lib/distutils/bcppcompiler.py
Python-3.8.5/Lib/distutils/debug.py
Python-3.8.5/Lib/distutils/__init__.py
Python-3.8.5/Lib/distutils/cmd.py
Python-3.8.5/Lib/distutils/errors.py
Python-3.8.5/Lib/distutils/core.py
Python-3.8.5/Lib/distutils/extension.py
Python-3.8.5/Lib/distutils/dep_util.py
Python-3.8.5/Lib/distutils/versionpredicate.py
Python-3.8.5/Lib/distutils/fancy_getopt.py
Python-3.8.5/Lib/distutils/msvccompiler.py
Python-3.8.5/Lib/distutils/command/
Python-3.8.5/Lib/distutils/command/wininst-9.0-amd64.exe
Python-3.8.5/Lib/distutils/command/config.py
Python-3.8.5/Lib/distutils/command/build_py.py
Python-3.8.5/Lib/distutils/command/upload.py
Python-3.8.5/Lib/distutils/command/bdist_rpm.py
Python-3.8.5/Lib/distutils/command/wininst-14.0-amd64.exe
Python-3.8.5/Lib/distutils/command/build_scripts.py
Python-3.8.5/Lib/distutils/command/command_template
Python-3.8.5/Lib/distutils/command/bdist_wininst.py
Python-3.8.5/Lib/distutils/command/wininst-6.0.exe
Python-3.8.5/Lib/distutils/command/register.py
Python-3.8.5/Lib/distutils/command/install_scripts.py
Python-3.8.5/Lib/distutils/command/bdist_msi.py
Python-3.8.5/Lib/distutils/command/build_clib.py
Python-3.8.5/Lib/distutils/command/__init__.py
Python-3.8.5/Lib/distutils/command/bdist_dumb.py
Python-3.8.5/Lib/distutils/command/wininst-7.1.exe
Python-3.8.5/Lib/distutils/command/wininst-8.0.exe
Python-3.8.5/Lib/distutils/command/bdist.py
Python-3.8.5/Lib/distutils/command/install_lib.py
Python-3.8.5/Lib/distutils/command/install_headers.py
Python-3.8.5/Lib/distutils/command/wininst-10.0-amd64.exe
Python-3.8.5/Lib/distutils/command/build.py
Python-3.8.5/Lib/distutils/command/install_data.py
Python-3.8.5/Lib/distutils/command/install.py
Python-3.8.5/Lib/distutils/command/wininst-9.0.exe
Python-3.8.5/Lib/distutils/command/sdist.py
Python-3.8.5/Lib/distutils/command/clean.py
Python-3.8.5/Lib/distutils/command/wininst-10.0.exe
Python-3.8.5/Lib/distutils/command/build_ext.py
Python-3.8.5/Lib/distutils/command/check.py
Python-3.8.5/Lib/distutils/command/wininst-14.0.exe
Python-3.8.5/Lib/distutils/command/install_egg_info.py
Python-3.8.5/Lib/distutils/util.py
Python-3.8.5/Lib/distutils/unixccompiler.py
Python-3.8.5/Lib/distutils/text_file.py
Python-3.8.5/Lib/distutils/cygwinccompiler.py
Python-3.8.5/Lib/distutils/_msvccompiler.py
Python-3.8.5/Lib/distutils/msvc9compiler.py
Python-3.8.5/Lib/distutils/file_util.py
Python-3.8.5/Lib/distutils/archive_util.py
Python-3.8.5/Lib/site.py
Python-3.8.5/Lib/dataclasses.py
Python-3.8.5/Lib/test/
Python-3.8.5/Lib/test/test_unittest.py
Python-3.8.5/Lib/test/libregrtest/
Python-3.8.5/Lib/test/libregrtest/main.py
Python-3.8.5/Lib/test/libregrtest/cmdline.py
Python-3.8.5/Lib/test/libregrtest/__init__.py
Python-3.8.5/Lib/test/libregrtest/pgo.py
Python-3.8.5/Lib/test/libregrtest/refleak.py
Python-3.8.5/Lib/test/libregrtest/utils.py
Python-3.8.5/Lib/test/libregrtest/save_env.py
Python-3.8.5/Lib/test/libregrtest/win_utils.py
Python-3.8.5/Lib/test/libregrtest/setup.py
Python-3.8.5/Lib/test/libregrtest/runtest_mp.py
Python-3.8.5/Lib/test/libregrtest/runtest.py
Python-3.8.5/Lib/test/test_xdrlib.py
Python-3.8.5/Lib/test/badsyntax_future5.py
Python-3.8.5/Lib/test/test_generator_stop.py
Python-3.8.5/Lib/test/test_signal.py
Python-3.8.5/Lib/test/keycert3.pem
Python-3.8.5/Lib/test/test_pickle.py
Python-3.8.5/Lib/test/test_sndhdr.py
Python-3.8.5/Lib/test/test_pty.py
Python-3.8.5/Lib/test/test_global.py
Python-3.8.5/Lib/test/ffdh3072.pem
Python-3.8.5/Lib/test/test_turtle.py
Python-3.8.5/Lib/test/test_pickletools.py
Python-3.8.5/Lib/test/test_textwrap.py
Python-3.8.5/Lib/test/test_selectors.py
Python-3.8.5/Lib/test/support/
Python-3.8.5/Lib/test/support/testresult.py
Python-3.8.5/Lib/test/support/__init__.py
Python-3.8.5/Lib/test/support/script_helper.py
Python-3.8.5/Lib/test/test_frame.py
Python-3.8.5/Lib/test/test_asyncore.py
Python-3.8.5/Lib/test/test_pyexpat.py
Python-3.8.5/Lib/test/test_ucn.py
Python-3.8.5/Lib/test/test_cgi.py
Python-3.8.5/Lib/test/test_queue.py
Python-3.8.5/Lib/test/test_parser.py
Python-3.8.5/Lib/test/test_functools.py
Python-3.8.5/Lib/test/test_threadsignals.py
Python-3.8.5/Lib/test/test_nntplib.py
Python-3.8.5/Lib/test/test_zlib.py
Python-3.8.5/Lib/test/pythoninfo.py
Python-3.8.5/Lib/test/test_curses.py
Python-3.8.5/Lib/test/test_asdl_parser.py
Python-3.8.5/Lib/test/badsyntax_future8.py
Python-3.8.5/Lib/test/pycakey.pem
Python-3.8.5/Lib/test/test_sys_setprofile.py
Python-3.8.5/Lib/test/ssl_key.passwd.pem
Python-3.8.5/Lib/test/test__xxsubinterpreters.py
Python-3.8.5/Lib/test/nullbytecert.pem
Python-3.8.5/Lib/test/test_finalization.py
Python-3.8.5/Lib/test/test_dict_version.py
Python-3.8.5/Lib/test/mock_socket.py
Python-3.8.5/Lib/test/audiotest.au
Python-3.8.5/Lib/test/test_timeit.py
Python-3.8.5/Lib/test/test_threading_local.py
Python-3.8.5/Lib/test/cjkencodings/
Python-3.8.5/Lib/test/cjkencodings/gbk.txt
Python-3.8.5/Lib/test/cjkencodings/gb2312.txt
Python-3.8.5/Lib/test/cjkencodings/gb18030.txt
Python-3.8.5/Lib/test/cjkencodings/shift_jisx0213-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/euc_jisx0213.txt
Python-3.8.5/Lib/test/cjkencodings/big5hkscs.txt
Python-3.8.5/Lib/test/cjkencodings/iso2022_jp-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/iso2022_kr.txt
Python-3.8.5/Lib/test/cjkencodings/gbk-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/iso2022_jp.txt
Python-3.8.5/Lib/test/cjkencodings/hz-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/cp949.txt
Python-3.8.5/Lib/test/cjkencodings/euc_jp-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/gb18030-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/big5.txt
Python-3.8.5/Lib/test/cjkencodings/big5-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/johab-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/johab.txt
Python-3.8.5/Lib/test/cjkencodings/shift_jis.txt
Python-3.8.5/Lib/test/cjkencodings/euc_jp.txt
Python-3.8.5/Lib/test/cjkencodings/gb2312-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/euc_kr.txt
Python-3.8.5/Lib/test/cjkencodings/hz.txt
Python-3.8.5/Lib/test/cjkencodings/iso2022_kr-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/shift_jisx0213.txt
Python-3.8.5/Lib/test/cjkencodings/cp949-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/euc_jisx0213-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/shift_jis-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/big5hkscs-utf8.txt
Python-3.8.5/Lib/test/cjkencodings/euc_kr-utf8.txt
Python-3.8.5/Lib/test/coding20731.py
Python-3.8.5/Lib/test/test_codecmaps_hk.py
Python-3.8.5/Lib/test/test_genericclass.py
Python-3.8.5/Lib/test/ssl_cert.pem
Python-3.8.5/Lib/test/test_string.py
Python-3.8.5/Lib/test/test_code.py
Python-3.8.5/Lib/test/test_crashers.py
Python-3.8.5/Lib/test/test_abstract_numbers.py
Python-3.8.5/Lib/test/test_bdb.py
Python-3.8.5/Lib/test/test_time.py
Python-3.8.5/Lib/test/test_userstring.py
Python-3.8.5/Lib/test/test_setcomps.py
Python-3.8.5/Lib/test/test_codecencodings_cn.py
Python-3.8.5/Lib/test/test_enum.py
Python-3.8.5/Lib/test/test_zipimport_support.py
Python-3.8.5/Lib/test/test_dummy_threading.py
Python-3.8.5/Lib/test/test_robotparser.py
Python-3.8.5/Lib/test/test_mailcap.py
Python-3.8.5/Lib/test/test_typing.py
Python-3.8.5/Lib/test/test_tk.py
Python-3.8.5/Lib/test/test_property.py
Python-3.8.5/Lib/test/Sine-1000Hz-300ms.aif
Python-3.8.5/Lib/test/test_docxmlrpc.py
Python-3.8.5/Lib/test/test_secrets.py
Python-3.8.5/Lib/test/reperf.py
Python-3.8.5/Lib/test/test_codecmaps_cn.py
Python-3.8.5/Lib/test/test_collections.py
Python-3.8.5/Lib/test/test_urlparse.py
Python-3.8.5/Lib/test/test_richcmp.py
Python-3.8.5/Lib/test/test_pow.py
Python-3.8.5/Lib/test/test_contains.py
Python-3.8.5/Lib/test/test_frozen.py
Python-3.8.5/Lib/test/test_multiprocessing_forkserver.py
Python-3.8.5/Lib/test/test_readline.py
Python-3.8.5/Lib/test/test_platform.py
Python-3.8.5/Lib/test/test_socketserver.py
Python-3.8.5/Lib/test/test_dataclasses.py
Python-3.8.5/Lib/test/test_isinstance.py
Python-3.8.5/Lib/test/test_aifc.py
Python-3.8.5/Lib/test/test_pkg.py
Python-3.8.5/Lib/test/test_augassign.py
Python-3.8.5/Lib/test/test_grammar.py
Python-3.8.5/Lib/test/test_subprocess.py
Python-3.8.5/Lib/test/test_peepholer.py
Python-3.8.5/Lib/test/test_http_cookiejar.py
Python-3.8.5/Lib/test/test_unicode_identifiers.py
Python-3.8.5/Lib/test/test_ctypes.py
Python-3.8.5/Lib/test/test_float.py
Python-3.8.5/Lib/test/test_lib2to3.py
Python-3.8.5/Lib/test/test_structseq.py
Python-3.8.5/Lib/test/encoded_modules/
Python-3.8.5/Lib/test/encoded_modules/module_iso_8859_1.py
Python-3.8.5/Lib/test/encoded_modules/__init__.py
Python-3.8.5/Lib/test/encoded_modules/module_koi8_r.py
Python-3.8.5/Lib/test/keycert2.pem
Python-3.8.5/Lib/test/test_ssl.py
Python-3.8.5/Lib/test/sgml_input.html
Python-3.8.5/Lib/test/test_xxtestfuzz.py
Python-3.8.5/Lib/test/test_optparse.py
Python-3.8.5/Lib/test/talos-2019-0758.pem
Python-3.8.5/Lib/test/test_html.py
Python-3.8.5/Lib/test/test_telnetlib.py
Python-3.8.5/Lib/test/test_pydoc.py
Python-3.8.5/Lib/test/test_random.py
Python-3.8.5/Lib/test/test_ttk_guionly.py
Python-3.8.5/Lib/test/test_faulthandler.py
Python-3.8.5/Lib/test/ieee754.txt
Python-3.8.5/Lib/test/dataclass_module_1.py
Python-3.8.5/Lib/test/inspect_fodder2.py
Python-3.8.5/Lib/test/test_copyreg.py
Python-3.8.5/Lib/test/test_difflib.py
Python-3.8.5/Lib/test/test_doctest.py
Python-3.8.5/Lib/test/test_json/
Python-3.8.5/Lib/test/test_json/test_pass2.py
Python-3.8.5/Lib/test/test_json/test_recursion.py
Python-3.8.5/Lib/test/test_json/test_enum.py
Python-3.8.5/Lib/test/test_json/test_float.py
Python-3.8.5/Lib/test/test_json/test_pass1.py
Python-3.8.5/Lib/test/test_json/test_default.py
Python-3.8.5/Lib/test/test_json/test_fail.py
Python-3.8.5/Lib/test/test_json/test_tool.py
Python-3.8.5/Lib/test/test_json/__main__.py
Python-3.8.5/Lib/test/test_json/__init__.py
Python-3.8.5/Lib/test/test_json/test_decode.py
Python-3.8.5/Lib/test/test_json/test_scanstring.py
Python-3.8.5/Lib/test/test_json/test_pass3.py
Python-3.8.5/Lib/test/test_json/test_encode_basestring_ascii.py
Python-3.8.5/Lib/test/test_json/test_unicode.py
Python-3.8.5/Lib/test/test_json/test_indent.py
Python-3.8.5/Lib/test/test_json/test_speedups.py
Python-3.8.5/Lib/test/test_json/test_dump.py
Python-3.8.5/Lib/test/test_json/test_separators.py
Python-3.8.5/Lib/test/test_with.py
Python-3.8.5/Lib/test/test_zipapp.py
Python-3.8.5/Lib/test/test_difflib_expect.html
Python-3.8.5/Lib/test/test_ipaddress.py
Python-3.8.5/Lib/test/test__opcode.py
Python-3.8.5/Lib/test/re_tests.py
Python-3.8.5/Lib/test/test_asyncgen.py
Python-3.8.5/Lib/test/keycert.pem
Python-3.8.5/Lib/test/test_index.py
Python-3.8.5/Lib/test/allsans.pem
Python-3.8.5/Lib/test/test_sched.py
Python-3.8.5/Lib/test/floating_points.txt
Python-3.8.5/Lib/test/test_ensurepip.py
Python-3.8.5/Lib/test/test_bz2.py
Python-3.8.5/Lib/test/test_tabnanny.py
Python-3.8.5/Lib/test/test_audioop.py
Python-3.8.5/Lib/test/test_xml_etree_c.py
Python-3.8.5/Lib/test/test_complex.py
Python-3.8.5/Lib/test/randv2_64.pck
Python-3.8.5/Lib/test/randv3.pck
Python-3.8.5/Lib/test/test_sqlite.py
Python-3.8.5/Lib/test/test_logging.py
Python-3.8.5/Lib/test/gdb_sample.py
Python-3.8.5/Lib/test/sortperf.py
Python-3.8.5/Lib/test/xmltests.py
Python-3.8.5/Lib/test/test_ftplib.py
Python-3.8.5/Lib/test/test_runpy.py
Python-3.8.5/Lib/test/test_future4.py
Python-3.8.5/Lib/test/test_minidom.py
Python-3.8.5/Lib/test/test_fractions.py
Python-3.8.5/Lib/test/test_string_literals.py
Python-3.8.5/Lib/test/test_codecencodings_kr.py
Python-3.8.5/Lib/test/test_syntax.py
Python-3.8.5/Lib/test/bad_getattr3.py
Python-3.8.5/Lib/test/test_uuid.py
Python-3.8.5/Lib/test/test_argparse.py
Python-3.8.5/Lib/test/ssl_key.pem
Python-3.8.5/Lib/test/test_dbm.py
Python-3.8.5/Lib/test/test_exception_variations.py
Python-3.8.5/Lib/test/test_codecencodings_tw.py
Python-3.8.5/Lib/test/test_htmlparser.py
Python-3.8.5/Lib/test/autotest.py
Python-3.8.5/Lib/test/test_colorsys.py
Python-3.8.5/Lib/test/test_weakset.py
Python-3.8.5/Lib/test/test_concurrent_futures.py
Python-3.8.5/Lib/test/test_posixpath.py
Python-3.8.5/Lib/test/randv2_32.pck
Python-3.8.5/Lib/test/test_dbm_dumb.py
Python-3.8.5/Lib/test/test_capi.py
Python-3.8.5/Lib/test/test_atexit.py
Python-3.8.5/Lib/test/fork_wait.py
Python-3.8.5/Lib/test/test_popen.py
Python-3.8.5/Lib/test/test_lltrace.py
Python-3.8.5/Lib/test/tokenize_tests-utf8-coding-cookie-and-utf8-bom-sig.txt
Python-3.8.5/Lib/test/test_call.py
Python-3.8.5/Lib/test/final_a.py
Python-3.8.5/Lib/test/test_syslog.py
Python-3.8.5/Lib/test/test_userdict.py
Python-3.8.5/Lib/test/test_buffer.py
Python-3.8.5/Lib/test/test_memoryview.py
Python-3.8.5/Lib/test/test_audit.py
Python-3.8.5/Lib/test/test_tarfile.py
Python-3.8.5/Lib/test/test_mimetypes.py
Python-3.8.5/Lib/test/pycacert.pem
Python-3.8.5/Lib/test/badsyntax_future4.py
Python-3.8.5/Lib/test/test_binop.py
Python-3.8.5/Lib/test/test_fnmatch.py
Python-3.8.5/Lib/test/test_iter.py
Python-3.8.5/Lib/test/test_multibytecodec.py
Python-3.8.5/Lib/test/test_iterlen.py
Python-3.8.5/Lib/test/test_glob.py
Python-3.8.5/Lib/test/test_format.py
Python-3.8.5/Lib/test/test_pprint.py
Python-3.8.5/Lib/test/mod_generics_cache.py
Python-3.8.5/Lib/test/bad_coding2.py
Python-3.8.5/Lib/test/test_getargs2.py
Python-3.8.5/Lib/test/test_dynamic.py
Python-3.8.5/Lib/test/test_hmac.py
Python-3.8.5/Lib/test/test_decimal.py
Python-3.8.5/Lib/test/test_webbrowser.py
Python-3.8.5/Lib/test/test_mmap.py
Python-3.8.5/Lib/test/test_code_module.py
Python-3.8.5/Lib/test/test_defaultdict.py
Python-3.8.5/Lib/test/test_distutils.py
Python-3.8.5/Lib/test/test_positional_only_arg.py
Python-3.8.5/Lib/test/test_httplib.py
Python-3.8.5/Lib/test/seq_tests.py
Python-3.8.5/Lib/test/bad_getattr.py
Python-3.8.5/Lib/test/test_dictcomps.py
Python-3.8.5/Lib/test/test_rlcompleter.py
Python-3.8.5/Lib/test/test_sysconfig.py
Python-3.8.5/Lib/test/test_doctest3.txt
Python-3.8.5/Lib/test/test_email/
Python-3.8.5/Lib/test/test_email/test_utils.py
Python-3.8.5/Lib/test/test_email/test_parser.py
Python-3.8.5/Lib/test/test_email/test__header_value_parser.py
Python-3.8.5/Lib/test/test_email/torture_test.py
Python-3.8.5/Lib/test/test_email/test_defect_handling.py
Python-3.8.5/Lib/test/test_email/__main__.py
Python-3.8.5/Lib/test/test_email/test__encoded_words.py
Python-3.8.5/Lib/test/test_email/__init__.py
Python-3.8.5/Lib/test/test_email/test_email.py
Python-3.8.5/Lib/test/test_email/test_headerregistry.py
Python-3.8.5/Lib/test/test_email/test_pickleable.py
Python-3.8.5/Lib/test/test_email/data/
Python-3.8.5/Lib/test/test_email/data/msg_33.txt
Python-3.8.5/Lib/test/test_email/data/msg_34.txt
Python-3.8.5/Lib/test/test_email/data/msg_46.txt
Python-3.8.5/Lib/test/test_email/data/msg_05.txt
Python-3.8.5/Lib/test/test_email/data/audiotest.au
Python-3.8.5/Lib/test/test_email/data/msg_31.txt
Python-3.8.5/Lib/test/test_email/data/msg_42.txt
Python-3.8.5/Lib/test/test_email/data/msg_16.txt
Python-3.8.5/Lib/test/test_email/data/msg_14.txt
Python-3.8.5/Lib/test/test_email/data/msg_06.txt
Python-3.8.5/Lib/test/test_email/data/msg_26.txt
Python-3.8.5/Lib/test/test_email/data/msg_08.txt
Python-3.8.5/Lib/test/test_email/data/msg_02.txt
Python-3.8.5/Lib/test/test_email/data/msg_35.txt
Python-3.8.5/Lib/test/test_email/data/msg_39.txt
Python-3.8.5/Lib/test/test_email/data/msg_41.txt
Python-3.8.5/Lib/test/test_email/data/msg_25.txt
Python-3.8.5/Lib/test/test_email/data/msg_13.txt
Python-3.8.5/Lib/test/test_email/data/msg_15.txt
Python-3.8.5/Lib/test/test_email/data/msg_28.txt
Python-3.8.5/Lib/test/test_email/data/msg_23.txt
Python-3.8.5/Lib/test/test_email/data/msg_21.txt
Python-3.8.5/Lib/test/test_email/data/msg_24.txt
Python-3.8.5/Lib/test/test_email/data/msg_27.txt
Python-3.8.5/Lib/test/test_email/data/msg_29.txt
Python-3.8.5/Lib/test/test_email/data/msg_43.txt
Python-3.8.5/Lib/test/test_email/data/msg_17.txt
Python-3.8.5/Lib/test/test_email/data/PyBanner048.gif
Python-3.8.5/Lib/test/test_email/data/msg_37.txt
Python-3.8.5/Lib/test/test_email/data/msg_11.txt
Python-3.8.5/Lib/test/test_email/data/msg_07.txt
Python-3.8.5/Lib/test/test_email/data/msg_22.txt
Python-3.8.5/Lib/test/test_email/data/msg_18.txt
Python-3.8.5/Lib/test/test_email/data/msg_12a.txt
Python-3.8.5/Lib/test/test_email/data/msg_09.txt
Python-3.8.5/Lib/test/test_email/data/msg_10.txt
Python-3.8.5/Lib/test/test_email/data/msg_01.txt
Python-3.8.5/Lib/test/test_email/data/msg_32.txt
Python-3.8.5/Lib/test/test_email/data/msg_40.txt
Python-3.8.5/Lib/test/test_email/data/msg_44.txt
Python-3.8.5/Lib/test/test_email/data/msg_36.txt
Python-3.8.5/Lib/test/test_email/data/msg_20.txt
Python-3.8.5/Lib/test/test_email/data/msg_12.txt
Python-3.8.5/Lib/test/test_email/data/msg_45.txt
Python-3.8.5/Lib/test/test_email/data/msg_30.txt
Python-3.8.5/Lib/test/test_email/data/msg_03.txt
Python-3.8.5/Lib/test/test_email/data/msg_38.txt
Python-3.8.5/Lib/test/test_email/data/msg_19.txt
Python-3.8.5/Lib/test/test_email/data/msg_04.txt
Python-3.8.5/Lib/test/test_email/test_asian_codecs.py
Python-3.8.5/Lib/test/test_email/test_policy.py
Python-3.8.5/Lib/test/test_email/test_message.py
Python-3.8.5/Lib/test/test_email/test_inversion.py
Python-3.8.5/Lib/test/test_email/test_generator.py
Python-3.8.5/Lib/test/test_email/test_contentmanager.py
Python-3.8.5/Lib/test/test_eof.py
Python-3.8.5/Lib/test/test_errno.py
Python-3.8.5/Lib/test/test_memoryio.py
Python-3.8.5/Lib/test/test_copy.py
Python-3.8.5/Lib/test/test_configparser.py
Python-3.8.5/Lib/test/test_statistics.py
Python-3.8.5/Lib/test/test_cmd_line_script.py
Python-3.8.5/Lib/test/test_dummy_thread.py
Python-3.8.5/Lib/test/lock_tests.py
Python-3.8.5/Lib/test/test_dict.py
Python-3.8.5/Lib/test/test_cmath.py
Python-3.8.5/Lib/test/test__locale.py
Python-3.8.5/Lib/test/tokenize_tests-no-coding-cookie-and-utf8-bom-sig-only.txt
Python-3.8.5/Lib/test/test_thread.py
Python-3.8.5/Lib/test/test_dictviews.py
Python-3.8.5/Lib/test/test_generators.py
Python-3.8.5/Lib/test/xmltestdata/
Python-3.8.5/Lib/test/xmltestdata/test.xml.out
Python-3.8.5/Lib/test/xmltestdata/simple-ns.xml
Python-3.8.5/Lib/test/xmltestdata/simple.xml
Python-3.8.5/Lib/test/xmltestdata/expat224_utf8_bug.xml
Python-3.8.5/Lib/test/xmltestdata/test.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nComment.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/README
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inNsRedecl.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N3_c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nQname.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N2_c14nTrim.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inC14N6.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsRedecl_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsDefault_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nQnameElem.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/doc.dtd
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nQnameXpathElem.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N3_c14nTrim.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inNsXml.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsSuperfluous_c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nQname.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsPushdown_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsPushdown_c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inC14N3.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inC14N5.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N1_c14nComment.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inC14N4.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N4_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N6_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inNsPushdown.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inNsSort.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsRedecl_c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/world.txt
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inNsSuperfluous.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nPrefixQname.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N5_c14nTrim.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nPrefixQnameXpathElem.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inC14N1.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N1_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N3_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nQnameXpathElem.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inNsContent.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsSort_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nQnameElem.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsSort_c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nTrim.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inNsDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsDefault_c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/doc.xsl
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nPrefixQnameXpathElem.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inNsSuperfluous_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N2_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nPrefix.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N4_c14nTrim.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/inC14N2.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/out_inC14N5_c14nDefault.xml
Python-3.8.5/Lib/test/xmltestdata/c14n-20/c14nPrefixQname.xml
Python-3.8.5/Lib/test/pydoc_mod.py
Python-3.8.5/Lib/test/test_super.py
Python-3.8.5/Lib/test/test_support.py
Python-3.8.5/Lib/test/test_doctest2.txt
Python-3.8.5/Lib/test/test_threadedtempfile.py
Python-3.8.5/Lib/test/test_unary.py
Python-3.8.5/Lib/test/pydocfodder.py
Python-3.8.5/Lib/test/test_codecencodings_hk.py
Python-3.8.5/Lib/test/imp_dummy.py
Python-3.8.5/Lib/test/audiotests.py
Python-3.8.5/Lib/test/test_itertools.py
Python-3.8.5/Lib/test/test_exceptions.py
Python-3.8.5/Lib/test/audiodata/
Python-3.8.5/Lib/test/audiodata/pluck-pcm32.wav
Python-3.8.5/Lib/test/audiodata/pluck-pcm8.au
Python-3.8.5/Lib/test/audiodata/pluck-pcm8.aiff
Python-3.8.5/Lib/test/audiodata/pluck-pcm16.wav
Python-3.8.5/Lib/test/audiodata/pluck-pcm8.wav
Python-3.8.5/Lib/test/audiodata/pluck-pcm24.wav
Python-3.8.5/Lib/test/audiodata/pluck-ulaw.au
Python-3.8.5/Lib/test/audiodata/pluck-alaw.aifc
Python-3.8.5/Lib/test/audiodata/pluck-ulaw.aifc
Python-3.8.5/Lib/test/audiodata/pluck-pcm24.aiff
Python-3.8.5/Lib/test/audiodata/pluck-pcm24.au
Python-3.8.5/Lib/test/audiodata/pluck-pcm16.au
Python-3.8.5/Lib/test/audiodata/pluck-pcm32.aiff
Python-3.8.5/Lib/test/audiodata/pluck-pcm16.aiff
Python-3.8.5/Lib/test/audiodata/pluck-pcm32.au
Python-3.8.5/Lib/test/test_codecencodings_jp.py
Python-3.8.5/Lib/test/test_embed.py
Python-3.8.5/Lib/test/test_select.py
Python-3.8.5/Lib/test/test_unicode_file.py
Python-3.8.5/Lib/test/pstats.pck
Python-3.8.5/Lib/test/test_ttk_textonly.py
Python-3.8.5/Lib/test/test_getpass.py
Python-3.8.5/Lib/test/test_imghdr.py
Python-3.8.5/Lib/test/test_enumerate.py
Python-3.8.5/Lib/test/keycertecc.pem
Python-3.8.5/Lib/test/test_symtable.py
Python-3.8.5/Lib/test/test_range.py
Python-3.8.5/Lib/test/test_traceback.py
Python-3.8.5/Lib/test/test_dynamicclassattribute.py
Python-3.8.5/Lib/test/tracedmodules/
Python-3.8.5/Lib/test/tracedmodules/__init__.py
Python-3.8.5/Lib/test/tracedmodules/testmod.py
Python-3.8.5/Lib/test/string_tests.py
Python-3.8.5/Lib/test/test_gettext.py
Python-3.8.5/Lib/test/test_bytes.py
Python-3.8.5/Lib/test/test_multiprocessing_spawn.py
Python-3.8.5/Lib/test/test_int_literal.py
Python-3.8.5/Lib/test/test_strftime.py
Python-3.8.5/Lib/test/test_zipfile.py
Python-3.8.5/Lib/test/test_importlib/
Python-3.8.5/Lib/test/test_importlib/test_lazy.py
Python-3.8.5/Lib/test/test_importlib/zipdata02/
Python-3.8.5/Lib/test/test_importlib/zipdata02/ziptestdata.zip
Python-3.8.5/Lib/test/test_importlib/zipdata02/__init__.py
Python-3.8.5/Lib/test/test_importlib/test_metadata_api.py
Python-3.8.5/Lib/test/test_importlib/frozen/
Python-3.8.5/Lib/test/test_importlib/frozen/test_finder.py
Python-3.8.5/Lib/test/test_importlib/frozen/test_loader.py
Python-3.8.5/Lib/test/test_importlib/frozen/__main__.py
Python-3.8.5/Lib/test/test_importlib/frozen/__init__.py
Python-3.8.5/Lib/test/test_importlib/fixtures.py
Python-3.8.5/Lib/test/test_importlib/zipdata01/
Python-3.8.5/Lib/test/test_importlib/zipdata01/ziptestdata.zip
Python-3.8.5/Lib/test/test_importlib/zipdata01/__init__.py
Python-3.8.5/Lib/test/test_importlib/test_windows.py
Python-3.8.5/Lib/test/test_importlib/data01/
Python-3.8.5/Lib/test/test_importlib/data01/utf-16.file
Python-3.8.5/Lib/test/test_importlib/data01/binary.file
Python-3.8.5/Lib/test/test_importlib/data01/subdirectory/
Python-3.8.5/Lib/test/test_importlib/data01/subdirectory/binary.file
Python-3.8.5/Lib/test/test_importlib/data01/subdirectory/__init__.py
Python-3.8.5/Lib/test/test_importlib/data01/__init__.py
Python-3.8.5/Lib/test/test_importlib/data01/utf-8.file
Python-3.8.5/Lib/test/test_importlib/abc.py
Python-3.8.5/Lib/test/test_importlib/data02/
Python-3.8.5/Lib/test/test_importlib/data02/two/
Python-3.8.5/Lib/test/test_importlib/data02/two/resource2.txt
Python-3.8.5/Lib/test/test_importlib/data02/two/__init__.py
Python-3.8.5/Lib/test/test_importlib/data02/__init__.py
Python-3.8.5/Lib/test/test_importlib/data02/one/
Python-3.8.5/Lib/test/test_importlib/data02/one/__init__.py
Python-3.8.5/Lib/test/test_importlib/data02/one/resource1.txt
Python-3.8.5/Lib/test/test_importlib/test_open.py
Python-3.8.5/Lib/test/test_importlib/test_zip.py
Python-3.8.5/Lib/test/test_importlib/import_/
Python-3.8.5/Lib/test/test_importlib/import_/test___loader__.py
Python-3.8.5/Lib/test/test_importlib/import_/test_relative_imports.py
Python-3.8.5/Lib/test/test_importlib/import_/test_caching.py
Python-3.8.5/Lib/test/test_importlib/import_/__main__.py
Python-3.8.5/Lib/test/test_importlib/import_/__init__.py
Python-3.8.5/Lib/test/test_importlib/import_/test___package__.py
Python-3.8.5/Lib/test/test_importlib/import_/test_api.py
Python-3.8.5/Lib/test/test_importlib/import_/test_meta_path.py
Python-3.8.5/Lib/test/test_importlib/import_/test_fromlist.py
Python-3.8.5/Lib/test/test_importlib/import_/test_packages.py
Python-3.8.5/Lib/test/test_importlib/import_/test_path.py
Python-3.8.5/Lib/test/test_importlib/__main__.py
Python-3.8.5/Lib/test/test_importlib/data03/
Python-3.8.5/Lib/test/test_importlib/data03/__init__.py
Python-3.8.5/Lib/test/test_importlib/data03/namespace/
Python-3.8.5/Lib/test/test_importlib/data03/namespace/portion2/
Python-3.8.5/Lib/test/test_importlib/data03/namespace/portion2/__init__.py
Python-3.8.5/Lib/test/test_importlib/data03/namespace/resource1.txt
Python-3.8.5/Lib/test/test_importlib/data03/namespace/portion1/
Python-3.8.5/Lib/test/test_importlib/data03/namespace/portion1/__init__.py
Python-3.8.5/Lib/test/test_importlib/stubs.py
Python-3.8.5/Lib/test/test_importlib/test_spec.py
Python-3.8.5/Lib/test/test_importlib/__init__.py
Python-3.8.5/Lib/test/test_importlib/test_namespace_pkgs.py
Python-3.8.5/Lib/test/test_importlib/test_main.py
Python-3.8.5/Lib/test/test_importlib/test_api.py
Python-3.8.5/Lib/test/test_importlib/test_locks.py
Python-3.8.5/Lib/test/test_importlib/test_util.py
Python-3.8.5/Lib/test/test_importlib/data/
Python-3.8.5/Lib/test/test_importlib/data/example-21.12-py3-none-any.whl
Python-3.8.5/Lib/test/test_importlib/data/__init__.py
Python-3.8.5/Lib/test/test_importlib/data/example-21.12-py3.6.egg
Python-3.8.5/Lib/test/test_importlib/builtin/
Python-3.8.5/Lib/test/test_importlib/builtin/test_finder.py
Python-3.8.5/Lib/test/test_importlib/builtin/test_loader.py
Python-3.8.5/Lib/test/test_importlib/builtin/__main__.py
Python-3.8.5/Lib/test/test_importlib/builtin/__init__.py
Python-3.8.5/Lib/test/test_importlib/test_abc.py
Python-3.8.5/Lib/test/test_importlib/extension/
Python-3.8.5/Lib/test/test_importlib/extension/test_finder.py
Python-3.8.5/Lib/test/test_importlib/extension/test_loader.py
Python-3.8.5/Lib/test/test_importlib/extension/test_case_sensitivity.py
Python-3.8.5/Lib/test/test_importlib/extension/__main__.py
Python-3.8.5/Lib/test/test_importlib/extension/__init__.py
Python-3.8.5/Lib/test/test_importlib/extension/test_path_hook.py
Python-3.8.5/Lib/test/test_importlib/test_read.py
Python-3.8.5/Lib/test/test_importlib/util.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/nested_portion1.zip
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/both_portions/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/both_portions/foo/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/both_portions/foo/one.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/both_portions/foo/two.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project1/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project1/parent/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project1/parent/child/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project1/parent/child/one.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/one.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/__init__.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project3/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project3/parent/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project3/parent/child/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project3/parent/child/three.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/portion2/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/portion2/foo/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/portion2/foo/two.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project2/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project2/parent/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project2/parent/child/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/project2/parent/child/two.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/missing_directory.zip
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/top_level_portion1.zip
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/portion1/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/portion1/foo/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/portion1/foo/one.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/module_and_namespace_package/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test.py
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test/
Python-3.8.5/Lib/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test/empty
Python-3.8.5/Lib/test/test_importlib/test_resource.py
Python-3.8.5/Lib/test/test_importlib/source/
Python-3.8.5/Lib/test/test_importlib/source/test_file_loader.py
Python-3.8.5/Lib/test/test_importlib/source/test_finder.py
Python-3.8.5/Lib/test/test_importlib/source/test_case_sensitivity.py
Python-3.8.5/Lib/test/test_importlib/source/__main__.py
Python-3.8.5/Lib/test/test_importlib/source/__init__.py
Python-3.8.5/Lib/test/test_importlib/source/test_path_hook.py
Python-3.8.5/Lib/test/test_importlib/source/test_source_encoding.py
Python-3.8.5/Lib/test/test_importlib/test_path.py
Python-3.8.5/Lib/test/keycert4.pem
Python-3.8.5/Lib/test/__main__.py
Python-3.8.5/Lib/test/sample_doctest.py
Python-3.8.5/Lib/test/test_httpservers.py
Python-3.8.5/Lib/test/test_codecmaps_tw.py
Python-3.8.5/Lib/test/test_type_comments.py
Python-3.8.5/Lib/test/test_dis.py
Python-3.8.5/Lib/test/badsyntax_future3.py
Python-3.8.5/Lib/test/test_opcodes.py
Python-3.8.5/Lib/test/test_inspect.py
Python-3.8.5/Lib/test/keycert.passwd.pem
Python-3.8.5/Lib/test/test_pwd.py
Python-3.8.5/Lib/test/test_univnewlines.py
Python-3.8.5/Lib/test/badsyntax_future10.py
Python-3.8.5/Lib/test/test_xml_dom_minicompat.py
Python-3.8.5/Lib/test/leakers/
Python-3.8.5/Lib/test/leakers/test_selftype.py
Python-3.8.5/Lib/test/leakers/test_ctypes.py
Python-3.8.5/Lib/test/leakers/README.txt
Python-3.8.5/Lib/test/leakers/__init__.py
Python-3.8.5/Lib/test/test_quopri.py
Python-3.8.5/Lib/test/test_operator.py
Python-3.8.5/Lib/test/test_context.py
Python-3.8.5/Lib/test/memory_watchdog.py
Python-3.8.5/Lib/test/test_profile.py
Python-3.8.5/Lib/test/testcodec.py
Python-3.8.5/Lib/test/test_bisect.py
Python-3.8.5/Lib/test/tokenize_tests-utf8-coding-cookie-and-no-utf8-bom-sig.txt
Python-3.8.5/Lib/test/test_future.py
Python-3.8.5/Lib/test/test_extcall.py
Python-3.8.5/Lib/test/test_regrtest.py
Python-3.8.5/Lib/test/test_contextlib_async.py
Python-3.8.5/Lib/test/__init__.py
Python-3.8.5/Lib/test/test_locale.py
Python-3.8.5/Lib/test/test_longexp.py
Python-3.8.5/Lib/test/idnsans.pem
Python-3.8.5/Lib/test/test_winsound.py
Python-3.8.5/Lib/test/test_ossaudiodev.py
Python-3.8.5/Lib/test/test_openpty.py
Python-3.8.5/Lib/test/test_pstats.py
Python-3.8.5/Lib/test/test_spwd.py
Python-3.8.5/Lib/test/make_ssl_certs.py
Python-3.8.5/Lib/test/test_crypt.py
Python-3.8.5/Lib/test/dataclass_textanno.py
Python-3.8.5/Lib/test/test_print.py
Python-3.8.5/Lib/test/cmath_testcases.txt
Python-3.8.5/Lib/test/test_picklebuffer.py
Python-3.8.5/Lib/test/test_set.py
Python-3.8.5/Lib/test/multibytecodec_support.py
Python-3.8.5/Lib/test/test_exception_hierarchy.py
Python-3.8.5/Lib/test/test_pdb.py
Python-3.8.5/Lib/test/empty.vbs
Python-3.8.5/Lib/test/datetimetester.py
Python-3.8.5/Lib/test/test_venv.py
Python-3.8.5/Lib/test/secp384r1.pem
Python-3.8.5/Lib/test/test_normalization.py
Python-3.8.5/Lib/test/relimport.py
Python-3.8.5/Lib/test/test_threading.py
Python-3.8.5/Lib/test/test_datetime.py
Python-3.8.5/Lib/test/dataclass_module_1_str.py
Python-3.8.5/Lib/test/badsyntax_future7.py
Python-3.8.5/Lib/test/test_xmlrpc_net.py
Python-3.8.5/Lib/test/sample_doctest_no_doctests.py
Python-3.8.5/Lib/test/formatfloat_testcases.txt
Python-3.8.5/Lib/test/dataclass_module_2_str.py
Python-3.8.5/Lib/test/mp_fork_bomb.py
Python-3.8.5/Lib/test/test_charmapcodec.py
Python-3.8.5/Lib/test/test_site.py
Python-3.8.5/Lib/test/test_doctest2.py
Python-3.8.5/Lib/test/test_scope.py
Python-3.8.5/Lib/test/test_tempfile.py
Python-3.8.5/Lib/test/test_asyncio/
Python-3.8.5/Lib/test/test_asyncio/test_sock_lowlevel.py
Python-3.8.5/Lib/test/test_asyncio/test_events.py
Python-3.8.5/Lib/test/test_asyncio/test_queues.py
Python-3.8.5/Lib/test/test_asyncio/echo3.py
Python-3.8.5/Lib/test/test_asyncio/test_subprocess.py
Python-3.8.5/Lib/test/test_asyncio/test_base_events.py
Python-3.8.5/Lib/test/test_asyncio/test_proactor_events.py
Python-3.8.5/Lib/test/test_asyncio/test_sslproto.py
Python-3.8.5/Lib/test/test_asyncio/test_tasks.py
Python-3.8.5/Lib/test/test_asyncio/test_transports.py
Python-3.8.5/Lib/test/test_asyncio/__main__.py
Python-3.8.5/Lib/test/test_asyncio/test_unix_events.py
Python-3.8.5/Lib/test/test_asyncio/test_context.py
Python-3.8.5/Lib/test/test_asyncio/test_sendfile.py
Python-3.8.5/Lib/test/test_asyncio/test_protocols.py
Python-3.8.5/Lib/test/test_asyncio/__init__.py
Python-3.8.5/Lib/test/test_asyncio/test_futures.py
Python-3.8.5/Lib/test/test_asyncio/functional.py
Python-3.8.5/Lib/test/test_asyncio/test_server.py
Python-3.8.5/Lib/test/test_asyncio/test_locks.py
Python-3.8.5/Lib/test/test_asyncio/test_pep492.py
Python-3.8.5/Lib/test/test_asyncio/utils.py
Python-3.8.5/Lib/test/test_asyncio/test_streams.py
Python-3.8.5/Lib/test/test_asyncio/test_selector_events.py
Python-3.8.5/Lib/test/test_asyncio/echo2.py
Python-3.8.5/Lib/test/test_asyncio/echo.py
Python-3.8.5/Lib/test/test_asyncio/test_buffered_proto.py
Python-3.8.5/Lib/test/test_asyncio/test_runners.py
Python-3.8.5/Lib/test/test_asyncio/test_windows_utils.py
Python-3.8.5/Lib/test/test_asyncio/test_windows_events.py
Python-3.8.5/Lib/test/test_compare.py
Python-3.8.5/Lib/test/test_tokenize.py
Python-3.8.5/Lib/test/test_script_helper.py
Python-3.8.5/Lib/test/cfgparser.2
Python-3.8.5/Lib/test/test_metaclass.py
Python-3.8.5/Lib/test/test_clinic.py
Python-3.8.5/Lib/test/outstanding_bugs.py
Python-3.8.5/Lib/test/test_compileall.py
Python-3.8.5/Lib/test/test_smtpnet.py
Python-3.8.5/Lib/test/win_console_handler.py
Python-3.8.5/Lib/test/test_base64.py
Python-3.8.5/Lib/test/ssl_servers.py
Python-3.8.5/Lib/test/badsyntax_future9.py
Python-3.8.5/Lib/test/test_unicodedata.py
Python-3.8.5/Lib/test/test_codecencodings_iso2022.py
Python-3.8.5/Lib/test/test_userlist.py
Python-3.8.5/Lib/test/tf_inherit_check.py
Python-3.8.5/Lib/test/test_cmd_line.py
Python-3.8.5/Lib/test/sndhdrdata/
Python-3.8.5/Lib/test/sndhdrdata/README
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.8svx
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.sndt
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.wav
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.aiff
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.au
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.voc
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.hcom
Python-3.8.5/Lib/test/sndhdrdata/sndhdr.aifc
Python-3.8.5/Lib/test/pyclbr_input.py
Python-3.8.5/Lib/test/test_grp.py
Python-3.8.5/Lib/test/test_re.py
Python-3.8.5/Lib/test/test_fileinput.py
Python-3.8.5/Lib/test/test_hashlib.py
Python-3.8.5/Lib/test/test_numeric_tower.py
Python-3.8.5/Lib/test/test_hash.py
Python-3.8.5/Lib/test/test_smtpd.py
Python-3.8.5/Lib/test/test_subclassinit.py
Python-3.8.5/Lib/test/test_contextlib.py
Python-3.8.5/Lib/test/test_wsgiref.py
Python-3.8.5/Lib/test/badsyntax_future6.py
Python-3.8.5/Lib/test/ann_module.py
Python-3.8.5/Lib/test/bad_coding.py
Python-3.8.5/Lib/test/test_plistlib.py
Python-3.8.5/Lib/test/test_devpoll.py
Python-3.8.5/Lib/test/testtar.tar
Python-3.8.5/Lib/test/test_urllib_response.py
Python-3.8.5/Lib/test/profilee.py
Python-3.8.5/Lib/test/test_zipimport.py
Python-3.8.5/Lib/test/subprocessdata/
Python-3.8.5/Lib/test/subprocessdata/input_reader.py
Python-3.8.5/Lib/test/subprocessdata/qgrep.py
Python-3.8.5/Lib/test/subprocessdata/qcat.py
Python-3.8.5/Lib/test/subprocessdata/sigchild_ignore.py
Python-3.8.5/Lib/test/subprocessdata/fd_status.py
Python-3.8.5/Lib/test/test_urllibnet.py
Python-3.8.5/Lib/test/test_symbol.py
Python-3.8.5/Lib/test/test_reprlib.py
Python-3.8.5/Lib/test/test_smtplib.py
Python-3.8.5/Lib/test/test_deque.py
Python-3.8.5/Lib/test/test_list.py
Python-3.8.5/Lib/test/test_sax.py
Python-3.8.5/Lib/test/test_uu.py
Python-3.8.5/Lib/test/test_fork1.py
Python-3.8.5/Lib/test/test_netrc.py
Python-3.8.5/Lib/test/test_shlex.py
Python-3.8.5/Lib/test/test_listcomps.py
Python-3.8.5/Lib/test/badsyntax_pep3120.py
Python-3.8.5/Lib/test/test_os.py
Python-3.8.5/Lib/test/test_long.py
Python-3.8.5/Lib/test/crashers/
Python-3.8.5/Lib/test/crashers/README
Python-3.8.5/Lib/test/crashers/underlying_dict.py
Python-3.8.5/Lib/test/crashers/infinite_loop_re.py
Python-3.8.5/Lib/test/crashers/bogus_code_obj.py
Python-3.8.5/Lib/test/crashers/trace_at_recursion_limit.py
Python-3.8.5/Lib/test/crashers/recursive_call.py
Python-3.8.5/Lib/test/crashers/gc_inspection.py
Python-3.8.5/Lib/test/crashers/mutation_inside_cyclegc.py
Python-3.8.5/Lib/test/nokia.pem
Python-3.8.5/Lib/test/test_winconsoleio.py
Python-3.8.5/Lib/test/future_test2.py
Python-3.8.5/Lib/test/test_yield_from.py
Python-3.8.5/Lib/test/test_codecmaps_jp.py
Python-3.8.5/Lib/test/imghdrdata/
Python-3.8.5/Lib/test/imghdrdata/python.jpg
Python-3.8.5/Lib/test/imghdrdata/python.ppm
Python-3.8.5/Lib/test/imghdrdata/python.pgm
Python-3.8.5/Lib/test/imghdrdata/python.gif
Python-3.8.5/Lib/test/imghdrdata/python.webp
Python-3.8.5/Lib/test/imghdrdata/python.ras
Python-3.8.5/Lib/test/imghdrdata/python.sgi
Python-3.8.5/Lib/test/imghdrdata/python.bmp
Python-3.8.5/Lib/test/imghdrdata/python.exr
Python-3.8.5/Lib/test/imghdrdata/python.pbm
Python-3.8.5/Lib/test/imghdrdata/python.png
Python-3.8.5/Lib/test/imghdrdata/python.xbm
Python-3.8.5/Lib/test/imghdrdata/python.tiff
Python-3.8.5/Lib/test/eintrdata/
Python-3.8.5/Lib/test/eintrdata/eintr_tester.py
Python-3.8.5/Lib/test/audit-tests.py
Python-3.8.5/Lib/test/final_b.py
Python-3.8.5/Lib/test/test_largefile.py
Python-3.8.5/Lib/test/data/
Python-3.8.5/Lib/test/data/README
Python-3.8.5/Lib/test/dis_module.py
Python-3.8.5/Lib/test/test_osx_env.py
Python-3.8.5/Lib/test/test_timeout.py
Python-3.8.5/Lib/test/test_dtrace.py
Python-3.8.5/Lib/test/test_ast.py
Python-3.8.5/Lib/test/test_tracemalloc.py
Python-3.8.5/Lib/test/test_compile.py
Python-3.8.5/Lib/test/test_pipes.py
Python-3.8.5/Lib/test/bad_getattr2.py
Python-3.8.5/Lib/test/test_funcattrs.py
Python-3.8.5/Lib/test/test_named_expressions.py
Python-3.8.5/Lib/test/test__osx_support.py
Python-3.8.5/Lib/test/zip_cp437_header.zip
Python-3.8.5/Lib/test/double_const.py
Python-3.8.5/Lib/test/test_tuple.py
Python-3.8.5/Lib/test/test_gdb.py
Python-3.8.5/Lib/test/test_tcl.py
Python-3.8.5/Lib/test/recursion.tar
Python-3.8.5/Lib/test/badkey.pem
Python-3.8.5/Lib/test/test_posix.py
Python-3.8.5/Lib/test/test_structmembers.py
Python-3.8.5/Lib/test/test_bigaddrspace.py
Python-3.8.5/Lib/test/list_tests.py
Python-3.8.5/Lib/test/test_pathlib.py
Python-3.8.5/Lib/test/test_bigmem.py
Python-3.8.5/Lib/test/pickletester.py
Python-3.8.5/Lib/test/test_binascii.py
Python-3.8.5/Lib/test/test_urllib2_localnet.py
Python-3.8.5/Lib/test/test_codeccallbacks.py
Python-3.8.5/Lib/test/test_fcntl.py
Python-3.8.5/Lib/test/cfgparser.3
Python-3.8.5/Lib/test/test_future5.py
Python-3.8.5/Lib/test/test_codecs.py
Python-3.8.5/Lib/test/signalinterproctester.py
Python-3.8.5/Lib/test/test_abc.py
Python-3.8.5/Lib/test/test_typechecks.py
Python-3.8.5/Lib/test/test_unicode.py
Python-3.8.5/Lib/test/test_array.py
Python-3.8.5/Lib/test/test_unpack_ex.py
Python-3.8.5/Lib/test/test_imp.py
Python-3.8.5/Lib/test/ziptestdata/
Python-3.8.5/Lib/test/ziptestdata/testdata_module_inside_zip.py
Python-3.8.5/Lib/test/ziptestdata/exe_with_zip
Python-3.8.5/Lib/test/ziptestdata/header.sh
Python-3.8.5/Lib/test/ziptestdata/README.md
Python-3.8.5/Lib/test/ziptestdata/exe_with_z64
Python-3.8.5/Lib/test/test_tix.py
Python-3.8.5/Lib/test/test_genexps.py
Python-3.8.5/Lib/test/test_cgitb.py
Python-3.8.5/Lib/test/curses_tests.py
Python-3.8.5/Lib/test/test_pyclbr.py
Python-3.8.5/Lib/test/decimaltestdata/
Python-3.8.5/Lib/test/decimaltestdata/ddCompareTotal.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCopyAbs.decTest
Python-3.8.5/Lib/test/decimaltestdata/testall.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqScaleB.decTest
Python-3.8.5/Lib/test/decimaltestdata/copynegate.decTest
Python-3.8.5/Lib/test/decimaltestdata/rounding.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCanonical.decTest
Python-3.8.5/Lib/test/decimaltestdata/ln.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqAbs.decTest
Python-3.8.5/Lib/test/decimaltestdata/copysign.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCompareTotalMag.decTest
Python-3.8.5/Lib/test/decimaltestdata/max.decTest
Python-3.8.5/Lib/test/decimaltestdata/subtract.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqRotate.decTest
Python-3.8.5/Lib/test/decimaltestdata/extra.decTest
Python-3.8.5/Lib/test/decimaltestdata/divide.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqNextMinus.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddBase.decTest
Python-3.8.5/Lib/test/decimaltestdata/clamp.decTest
Python-3.8.5/Lib/test/decimaltestdata/decDouble.decTest
Python-3.8.5/Lib/test/decimaltestdata/multiply.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqReduce.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddSubtract.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCompareSig.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddRotate.decTest
Python-3.8.5/Lib/test/decimaltestdata/nexttoward.decTest
Python-3.8.5/Lib/test/decimaltestdata/samequantum.decTest
Python-3.8.5/Lib/test/decimaltestdata/tointegral.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddDivide.decTest
Python-3.8.5/Lib/test/decimaltestdata/decSingle.decTest
Python-3.8.5/Lib/test/decimaltestdata/class.decTest
Python-3.8.5/Lib/test/decimaltestdata/logb.decTest
Python-3.8.5/Lib/test/decimaltestdata/rescale.decTest
Python-3.8.5/Lib/test/decimaltestdata/fma.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddEncode.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqMinMag.decTest
Python-3.8.5/Lib/test/decimaltestdata/rotate.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddClass.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddReduce.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqNextToward.decTest
Python-3.8.5/Lib/test/decimaltestdata/divideint.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqToIntegral.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqMinus.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddMinus.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddNextToward.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqEncode.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCopySign.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCopySign.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCopy.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqSubtract.decTest
Python-3.8.5/Lib/test/decimaltestdata/squareroot.decTest
Python-3.8.5/Lib/test/decimaltestdata/remainderNear.decTest
Python-3.8.5/Lib/test/decimaltestdata/minus.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddAnd.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCopy.decTest
Python-3.8.5/Lib/test/decimaltestdata/minmag.decTest
Python-3.8.5/Lib/test/decimaltestdata/invert.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCompareTotalMag.decTest
Python-3.8.5/Lib/test/decimaltestdata/or.decTest
Python-3.8.5/Lib/test/decimaltestdata/randoms.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqShift.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddLogB.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCompareTotal.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqBase.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqMin.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddDivideInt.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddMinMag.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqPlus.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddQuantize.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddXor.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCompare.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCopyNegate.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqDivideInt.decTest
Python-3.8.5/Lib/test/decimaltestdata/maxmag.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqNextPlus.decTest
Python-3.8.5/Lib/test/decimaltestdata/powersqrt.decTest
Python-3.8.5/Lib/test/decimaltestdata/exp.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCompareSig.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddMultiply.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqQuantize.decTest
Python-3.8.5/Lib/test/decimaltestdata/reduce.decTest
Python-3.8.5/Lib/test/decimaltestdata/compare.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqAnd.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddScaleB.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddAbs.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqSameQuantum.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddAdd.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqMaxMag.decTest
Python-3.8.5/Lib/test/decimaltestdata/scaleb.decTest
Python-3.8.5/Lib/test/decimaltestdata/tointegralx.decTest
Python-3.8.5/Lib/test/decimaltestdata/abs.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqMultiply.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqClass.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddMin.decTest
Python-3.8.5/Lib/test/decimaltestdata/plus.decTest
Python-3.8.5/Lib/test/decimaltestdata/dsEncode.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqAdd.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddCanonical.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqFMA.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddMax.decTest
Python-3.8.5/Lib/test/decimaltestdata/xor.decTest
Python-3.8.5/Lib/test/decimaltestdata/copyabs.decTest
Python-3.8.5/Lib/test/decimaltestdata/copy.decTest
Python-3.8.5/Lib/test/decimaltestdata/randomBound32.decTest
Python-3.8.5/Lib/test/decimaltestdata/dsBase.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqRemainderNear.decTest
Python-3.8.5/Lib/test/decimaltestdata/inexact.decTest
Python-3.8.5/Lib/test/decimaltestdata/nextplus.decTest
Python-3.8.5/Lib/test/decimaltestdata/comparetotal.decTest
Python-3.8.5/Lib/test/decimaltestdata/quantize.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddRemainderNear.decTest
Python-3.8.5/Lib/test/decimaltestdata/remainder.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddSameQuantum.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddMaxMag.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCompare.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqLogB.decTest
Python-3.8.5/Lib/test/decimaltestdata/log10.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddShift.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddNextPlus.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqRemainder.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddOr.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddNextMinus.decTest
Python-3.8.5/Lib/test/decimaltestdata/min.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqXor.decTest
Python-3.8.5/Lib/test/decimaltestdata/and.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqDivide.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddInvert.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddPlus.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqMax.decTest
Python-3.8.5/Lib/test/decimaltestdata/base.decTest
Python-3.8.5/Lib/test/decimaltestdata/decQuad.decTest
Python-3.8.5/Lib/test/decimaltestdata/add.decTest
Python-3.8.5/Lib/test/decimaltestdata/nextminus.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqInvert.decTest
Python-3.8.5/Lib/test/decimaltestdata/power.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCopyNegate.decTest
Python-3.8.5/Lib/test/decimaltestdata/shift.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddRemainder.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddFMA.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqCopyAbs.decTest
Python-3.8.5/Lib/test/decimaltestdata/comparetotmag.decTest
Python-3.8.5/Lib/test/decimaltestdata/dqOr.decTest
Python-3.8.5/Lib/test/decimaltestdata/ddToIntegral.decTest
Python-3.8.5/Lib/test/test_mailbox.py
Python-3.8.5/Lib/test/test_wait3.py
Python-3.8.5/Lib/test/test_genericpath.py
Python-3.8.5/Lib/test/test_unicode_file_functions.py
Python-3.8.5/Lib/test/doctest_aliases.py
Python-3.8.5/Lib/test/test_baseexception.py
Python-3.8.5/Lib/test/test_keyword.py
Python-3.8.5/Lib/test/test_module.py
Python-3.8.5/Lib/test/test_stat.py
Python-3.8.5/Lib/test/test_repl.py
Python-3.8.5/Lib/test/ssltests.py
Python-3.8.5/Lib/test/test_builtin.py
Python-3.8.5/Lib/test/test_zipfile64.py
Python-3.8.5/Lib/test/test_calendar.py
Python-3.8.5/Lib/test/tokenize_tests-latin1-coding-cookie-and-utf8-bom-sig.txt
Python-3.8.5/Lib/test/test_pkgutil.py
Python-3.8.5/Lib/test/test_shutil.py
Python-3.8.5/Lib/test/test_trace.py
Python-3.8.5/Lib/test/test_csv.py
Python-3.8.5/Lib/test/test_decorators.py
Python-3.8.5/Lib/test/test_heapq.py
Python-3.8.5/Lib/test/test_shelve.py
Python-3.8.5/Lib/test/inspect_fodder.py
Python-3.8.5/Lib/test/test_class.py
Python-3.8.5/Lib/test/test_threaded_import.py
Python-3.8.5/Lib/test/test_kqueue.py
Python-3.8.5/Lib/test/threaded_import_hangers.py
Python-3.8.5/Lib/test/test_import/
Python-3.8.5/Lib/test/test_import/__main__.py
Python-3.8.5/Lib/test/test_import/__init__.py
Python-3.8.5/Lib/test/test_import/data/
Python-3.8.5/Lib/test/test_import/data/package2/
Python-3.8.5/Lib/test/test_import/data/package2/submodule2.py
Python-3.8.5/Lib/test/test_import/data/package2/submodule1.py
Python-3.8.5/Lib/test/test_import/data/package/
Python-3.8.5/Lib/test/test_import/data/package/submodule.py
Python-3.8.5/Lib/test/test_import/data/package/__init__.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/
Python-3.8.5/Lib/test/test_import/data/circular_imports/rebinding2.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/from_cycle2.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/source.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/use.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/subpackage.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/basic.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/binding2.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/basic2.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/binding.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/from_cycle1.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/util.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/rebinding.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/indirect.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/subpkg/
Python-3.8.5/Lib/test/test_import/data/circular_imports/subpkg/subpackage2.py
Python-3.8.5/Lib/test/test_import/data/circular_imports/subpkg/util.py
Python-3.8.5/Lib/test/test_imaplib.py
Python-3.8.5/Lib/test/tokenize_tests.txt
Python-3.8.5/Lib/test/future_test1.py
Python-3.8.5/Lib/test/test_weakref.py
Python-3.8.5/Lib/test/test_sys_settrace.py
Python-3.8.5/Lib/test/test_file.py
Python-3.8.5/Lib/test/test_doctest.txt
Python-3.8.5/Lib/test/test_file_eintr.py
Python-3.8.5/Lib/test/mp_preload.py
Python-3.8.5/Lib/test/test___future__.py
Python-3.8.5/Lib/test/test_struct.py
Python-3.8.5/Lib/test/test_int.py
Python-3.8.5/Lib/test/test_strtod.py
Python-3.8.5/Lib/test/test_filecmp.py
Python-3.8.5/Lib/test/test_stringprep.py
Python-3.8.5/Lib/test/dtracedata/
Python-3.8.5/Lib/test/dtracedata/gc.py
Python-3.8.5/Lib/test/dtracedata/assert_usable.stp
Python-3.8.5/Lib/test/dtracedata/call_stack.d.expected
Python-3.8.5/Lib/test/dtracedata/gc.d.expected
Python-3.8.5/Lib/test/dtracedata/line.d
Python-3.8.5/Lib/test/dtracedata/line.d.expected
Python-3.8.5/Lib/test/dtracedata/call_stack.d
Python-3.8.5/Lib/test/dtracedata/call_stack.py
Python-3.8.5/Lib/test/dtracedata/instance.py
Python-3.8.5/Lib/test/dtracedata/assert_usable.d
Python-3.8.5/Lib/test/dtracedata/call_stack.stp.expected
Python-3.8.5/Lib/test/dtracedata/line.py
Python-3.8.5/Lib/test/dtracedata/call_stack.stp
Python-3.8.5/Lib/test/dtracedata/gc.stp
Python-3.8.5/Lib/test/dtracedata/gc.d
Python-3.8.5/Lib/test/dtracedata/gc.stp.expected
Python-3.8.5/Lib/test/test_keywordonlyarg.py
Python-3.8.5/Lib/test/test_warnings/
Python-3.8.5/Lib/test/test_warnings/__main__.py
Python-3.8.5/Lib/test/test_warnings/__init__.py
Python-3.8.5/Lib/test/test_warnings/data/
Python-3.8.5/Lib/test/test_warnings/data/import_warning.py
Python-3.8.5/Lib/test/test_warnings/data/stacklevel.py
Python-3.8.5/Lib/test/badsyntax_3131.py
Python-3.8.5/Lib/test/sample_doctest_no_docstrings.py
Python-3.8.5/Lib/test/test_math.py
Python-3.8.5/Lib/test/test_tools/
Python-3.8.5/Lib/test/test_tools/test_pdeps.py
Python-3.8.5/Lib/test/test_tools/test_gprof2html.py
Python-3.8.5/Lib/test/test_tools/test_pindent.py
Python-3.8.5/Lib/test/test_tools/test_lll.py
Python-3.8.5/Lib/test/test_tools/__main__.py
Python-3.8.5/Lib/test/test_tools/__init__.py
Python-3.8.5/Lib/test/test_tools/test_fixcid.py
Python-3.8.5/Lib/test/test_tools/test_reindent.py
Python-3.8.5/Lib/test/test_tools/test_i18n.py
Python-3.8.5/Lib/test/test_tools/test_md5sum.py
Python-3.8.5/Lib/test/test_tools/test_pathfix.py
Python-3.8.5/Lib/test/test_tools/test_unparse.py
Python-3.8.5/Lib/test/test_tools/test_sundry.py
Python-3.8.5/Lib/test/test_descr.py
Python-3.8.5/Lib/test/test_dbm_gnu.py
Python-3.8.5/Lib/test/test_descrtut.py
Python-3.8.5/Lib/test/test_pulldom.py
Python-3.8.5/Lib/test/_test_multiprocessing.py
Python-3.8.5/Lib/test/ann_module2.py
Python-3.8.5/Lib/test/test_poll.py
Python-3.8.5/Lib/test/test_wait4.py
Python-3.8.5/Lib/test/test_linecache.py
Python-3.8.5/Lib/test/test_cmd.py
Python-3.8.5/Lib/test/test_dbm_ndbm.py
Python-3.8.5/Lib/test/test_py_compile.py
Python-3.8.5/Lib/test/test_gc.py
Python-3.8.5/Lib/test/test_lzma.py
Python-3.8.5/Lib/test/good_getattr.py
Python-3.8.5/Lib/test/clinic.test
Python-3.8.5/Lib/test/exception_hierarchy.txt
Python-3.8.5/Lib/test/test_sys.py
Python-3.8.5/Lib/test/bisect_cmd.py
Python-3.8.5/Lib/test/test_socket.py
Python-3.8.5/Lib/test/test_marshal.py
Python-3.8.5/Lib/test/selfsigned_pythontestdotnet.pem
Python-3.8.5/Lib/test/test_urllib.py
Python-3.8.5/Lib/test/test_idle.py
Python-3.8.5/Lib/test/test_future3.py
Python-3.8.5/Lib/test/test_urllib2.py
Python-3.8.5/Lib/test/test_msilib.py
Python-3.8.5/Lib/test/test_getopt.py
Python-3.8.5/Lib/test/test_types.py
Python-3.8.5/Lib/test/test_slice.py
Python-3.8.5/Lib/test/test_xmlrpc.py
Python-3.8.5/Lib/test/ann_module3.py
Python-3.8.5/Lib/test/test_bufio.py
Python-3.8.5/Lib/test/test_io.py
Python-3.8.5/Lib/test/test_ioctl.py
Python-3.8.5/Lib/test/test_eintr.py
Python-3.8.5/Lib/test/math_testcases.txt
Python-3.8.5/Lib/test/test_unpack.py
Python-3.8.5/Lib/test/test_multiprocessing_main_handling.py
Python-3.8.5/Lib/test/test_utf8source.py
Python-3.8.5/Lib/test/test___all__.py
Python-3.8.5/Lib/test/test_http_cookies.py
Python-3.8.5/Lib/test/test_resource.py
Python-3.8.5/Lib/test/dataclass_module_2.py
Python-3.8.5/Lib/test/nullcert.pem
Python-3.8.5/Lib/test/test_flufl.py
Python-3.8.5/Lib/test/test_startfile.py
Python-3.8.5/Lib/test/cfgparser.1
Python-3.8.5/Lib/test/test_nis.py
Python-3.8.5/Lib/test/revocation.crl
Python-3.8.5/Lib/test/badcert.pem
Python-3.8.5/Lib/test/test_coroutines.py
Python-3.8.5/Lib/test/test_codecmaps_kr.py
Python-3.8.5/Lib/test/mapping_tests.py
Python-3.8.5/Lib/test/test_fileio.py
Python-3.8.5/Lib/test/test_ordered_dict.py
Python-3.8.5/Lib/test/regrtest.py
Python-3.8.5/Lib/test/test_modulefinder.py
Python-3.8.5/Lib/test/mailcap.txt
Python-3.8.5/Lib/test/test_sunau.py
Python-3.8.5/Lib/test/test_urllib2net.py
Python-3.8.5/Lib/test/test_wave.py
Python-3.8.5/Lib/test/test_cprofile.py
Python-3.8.5/Lib/test/test_ntpath.py
Python-3.8.5/Lib/test/test_fstring.py
Python-3.8.5/Lib/test/test_multiprocessing_fork.py
Python-3.8.5/Lib/test/test_utf8_mode.py
Python-3.8.5/Lib/test/test_pkgimport.py
Python-3.8.5/Lib/test/capath/
Python-3.8.5/Lib/test/capath/ceff1710.0
Python-3.8.5/Lib/test/capath/6e88d7b8.0
Python-3.8.5/Lib/test/capath/b1930218.0
Python-3.8.5/Lib/test/capath/4e1295a3.0
Python-3.8.5/Lib/test/capath/99d0fa06.0
Python-3.8.5/Lib/test/capath/5ed36f99.0
Python-3.8.5/Lib/test/test_epoll.py
Python-3.8.5/Lib/test/test_sort.py
Python-3.8.5/Lib/test/test_sundry.py
Python-3.8.5/Lib/test/test_doctest4.txt
Python-3.8.5/Lib/test/test_strptime.py
Python-3.8.5/Lib/test/test_bool.py
Python-3.8.5/Lib/test/test_binhex.py
Python-3.8.5/Lib/test/test_winreg.py
Python-3.8.5/Lib/test/test_codeop.py
Python-3.8.5/Lib/test/time_hashlib.py
Python-3.8.5/Lib/test/test_gzip.py
Python-3.8.5/Lib/test/zipdir.zip
Python-3.8.5/Lib/test/bytecode_helper.py
Python-3.8.5/Lib/test/test_xml_etree.py
Python-3.8.5/Lib/test/test_source_encoding.py
Python-3.8.5/Lib/test/test_c_locale_coercion.py
Python-3.8.5/Lib/test/mime.types
Python-3.8.5/Lib/test/test_asynchat.py
Python-3.8.5/Lib/test/test_raise.py
Python-3.8.5/Lib/test/test_poplib.py
Python-3.8.5/Lib/tempfile.py
Python-3.8.5/Lib/pdb.py
Python-3.8.5/Lib/concurrent/
Python-3.8.5/Lib/concurrent/__init__.py
Python-3.8.5/Lib/concurrent/futures/
Python-3.8.5/Lib/concurrent/futures/thread.py
Python-3.8.5/Lib/concurrent/futures/process.py
Python-3.8.5/Lib/concurrent/futures/__init__.py
Python-3.8.5/Lib/concurrent/futures/_base.py
Python-3.8.5/Lib/opcode.py
Python-3.8.5/Lib/textwrap.py
Python-3.8.5/Lib/pty.py
Python-3.8.5/Lib/lzma.py
Python-3.8.5/Lib/_pydecimal.py
Python-3.8.5/Lib/token.py
Python-3.8.5/Lib/os.py
Python-3.8.5/Lib/telnetlib.py
Python-3.8.5/Lib/pstats.py
Python-3.8.5/Lib/_pyio.py
Python-3.8.5/Lib/_py_abc.py
Python-3.8.5/Lib/symbol.py
Python-3.8.5/Lib/argparse.py
Python-3.8.5/Lib/pickletools.py
Python-3.8.5/Lib/pydoc.py
Python-3.8.5/Lib/genericpath.py
Python-3.8.5/Lib/asyncore.py
Python-3.8.5/Lib/crypt.py
Python-3.8.5/Lib/linecache.py
Python-3.8.5/Lib/ssl.py
Python-3.8.5/Lib/sre_constants.py
Python-3.8.5/Lib/_sitebuiltins.py
Python-3.8.5/Lib/imghdr.py
Python-3.8.5/Lib/colorsys.py
Python-3.8.5/Lib/formatter.py
Python-3.8.5/Lib/chunk.py
Python-3.8.5/Lib/_collections_abc.py
Python-3.8.5/Lib/fractions.py
Python-3.8.5/Lib/wsgiref/
Python-3.8.5/Lib/wsgiref/simple_server.py
Python-3.8.5/Lib/wsgiref/validate.py
Python-3.8.5/Lib/wsgiref/__init__.py
Python-3.8.5/Lib/wsgiref/handlers.py
Python-3.8.5/Lib/wsgiref/headers.py
Python-3.8.5/Lib/wsgiref/util.py
Python-3.8.5/Lib/turtledemo/
Python-3.8.5/Lib/turtledemo/tree.py
Python-3.8.5/Lib/turtledemo/paint.py
Python-3.8.5/Lib/turtledemo/minimal_hanoi.py
Python-3.8.5/Lib/turtledemo/forest.py
Python-3.8.5/Lib/turtledemo/chaos.py
Python-3.8.5/Lib/turtledemo/rosette.py
Python-3.8.5/Lib/turtledemo/fractalcurves.py
Python-3.8.5/Lib/turtledemo/penrose.py
Python-3.8.5/Lib/turtledemo/__main__.py
Python-3.8.5/Lib/turtledemo/clock.py
Python-3.8.5/Lib/turtledemo/__init__.py
Python-3.8.5/Lib/turtledemo/round_dance.py
Python-3.8.5/Lib/turtledemo/planet_and_moon.py
Python-3.8.5/Lib/turtledemo/turtle.cfg
Python-3.8.5/Lib/turtledemo/colormixer.py
Python-3.8.5/Lib/turtledemo/nim.py
Python-3.8.5/Lib/turtledemo/two_canvases.py
Python-3.8.5/Lib/turtledemo/bytedesign.py
Python-3.8.5/Lib/turtledemo/lindenmayer.py
Python-3.8.5/Lib/turtledemo/sorting_animate.py
Python-3.8.5/Lib/turtledemo/yinyang.py
Python-3.8.5/Lib/turtledemo/peace.py
Python-3.8.5/Lib/zipimport.py
Python-3.8.5/Lib/socket.py
Python-3.8.5/Lib/ipaddress.py
Python-3.8.5/Lib/rlcompleter.py
Python-3.8.5/Lib/ctypes/
Python-3.8.5/Lib/ctypes/macholib/
Python-3.8.5/Lib/ctypes/macholib/fetch_macholib
Python-3.8.5/Lib/ctypes/macholib/__init__.py
Python-3.8.5/Lib/ctypes/macholib/dylib.py
Python-3.8.5/Lib/ctypes/macholib/dyld.py
Python-3.8.5/Lib/ctypes/macholib/fetch_macholib.bat
Python-3.8.5/Lib/ctypes/macholib/README.ctypes
Python-3.8.5/Lib/ctypes/macholib/framework.py
Python-3.8.5/Lib/ctypes/wintypes.py
Python-3.8.5/Lib/ctypes/__init__.py
Python-3.8.5/Lib/ctypes/_endian.py
Python-3.8.5/Lib/ctypes/test/
Python-3.8.5/Lib/ctypes/test/test_win32.py
Python-3.8.5/Lib/ctypes/test/test_slicing.py
Python-3.8.5/Lib/ctypes/test/test_libc.py
Python-3.8.5/Lib/ctypes/test/test_pickling.py
Python-3.8.5/Lib/ctypes/test/test_stringptr.py
Python-3.8.5/Lib/ctypes/test/test_bitfields.py
Python-3.8.5/Lib/ctypes/test/test_find.py
Python-3.8.5/Lib/ctypes/test/test_pep3118.py
Python-3.8.5/Lib/ctypes/test/test_pointers.py
Python-3.8.5/Lib/ctypes/test/test_incomplete.py
Python-3.8.5/Lib/ctypes/test/test_keeprefs.py
Python-3.8.5/Lib/ctypes/test/test_varsize_struct.py
Python-3.8.5/Lib/ctypes/test/test_as_parameter.py
Python-3.8.5/Lib/ctypes/test/test_refcounts.py
Python-3.8.5/Lib/ctypes/test/test_array_in_pointer.py
Python-3.8.5/Lib/ctypes/test/test_struct_fields.py
Python-3.8.5/Lib/ctypes/test/test_wintypes.py
Python-3.8.5/Lib/ctypes/test/test_buffers.py
Python-3.8.5/Lib/ctypes/test/test_simplesubclasses.py
Python-3.8.5/Lib/ctypes/test/test_objects.py
Python-3.8.5/Lib/ctypes/test/test_anon.py
Python-3.8.5/Lib/ctypes/test/test_values.py
Python-3.8.5/Lib/ctypes/test/test_errno.py
Python-3.8.5/Lib/ctypes/test/test_structures.py
Python-3.8.5/Lib/ctypes/test/test_returnfuncptrs.py
Python-3.8.5/Lib/ctypes/test/test_init.py
Python-3.8.5/Lib/ctypes/test/test_sizes.py
Python-3.8.5/Lib/ctypes/test/test_bytes.py
Python-3.8.5/Lib/ctypes/test/test_functions.py
Python-3.8.5/Lib/ctypes/test/__main__.py
Python-3.8.5/Lib/ctypes/test/test_parameters.py
Python-3.8.5/Lib/ctypes/test/__init__.py
Python-3.8.5/Lib/ctypes/test/test_memfunctions.py
Python-3.8.5/Lib/ctypes/test/test_byteswap.py
Python-3.8.5/Lib/ctypes/test/test_numbers.py
Python-3.8.5/Lib/ctypes/test/test_arrays.py
Python-3.8.5/Lib/ctypes/test/test_strings.py
Python-3.8.5/Lib/ctypes/test/test_repr.py
Python-3.8.5/Lib/ctypes/test/test_prototypes.py
Python-3.8.5/Lib/ctypes/test/test_internals.py
Python-3.8.5/Lib/ctypes/test/test_checkretval.py
Python-3.8.5/Lib/ctypes/test/test_cfuncs.py
Python-3.8.5/Lib/ctypes/test/test_loading.py
Python-3.8.5/Lib/ctypes/test/test_unicode.py
Python-3.8.5/Lib/ctypes/test/test_python_api.py
Python-3.8.5/Lib/ctypes/test/test_unaligned_structures.py
Python-3.8.5/Lib/ctypes/test/test_delattr.py
Python-3.8.5/Lib/ctypes/test/test_macholib.py
Python-3.8.5/Lib/ctypes/test/test_callbacks.py
Python-3.8.5/Lib/ctypes/test/test_funcptr.py
Python-3.8.5/Lib/ctypes/test/test_random_things.py
Python-3.8.5/Lib/ctypes/test/test_frombuffer.py
Python-3.8.5/Lib/ctypes/test/test_cast.py
Python-3.8.5/Lib/ctypes/_aix.py
Python-3.8.5/Lib/ctypes/util.py
Python-3.8.5/Lib/hmac.py
Python-3.8.5/Lib/compileall.py
Python-3.8.5/Lib/__future__.py
Python-3.8.5/Lib/imaplib.py
Python-3.8.5/Lib/ntpath.py
Python-3.8.5/Lib/io.py
Python-3.8.5/Lib/multiprocessing/
Python-3.8.5/Lib/multiprocessing/popen_fork.py
Python-3.8.5/Lib/multiprocessing/popen_spawn_posix.py
Python-3.8.5/Lib/multiprocessing/spawn.py
Python-3.8.5/Lib/multiprocessing/synchronize.py
Python-3.8.5/Lib/multiprocessing/sharedctypes.py
Python-3.8.5/Lib/multiprocessing/dummy/
Python-3.8.5/Lib/multiprocessing/dummy/__init__.py
Python-3.8.5/Lib/multiprocessing/dummy/connection.py
Python-3.8.5/Lib/multiprocessing/resource_sharer.py
Python-3.8.5/Lib/multiprocessing/process.py
Python-3.8.5/Lib/multiprocessing/resource_tracker.py
Python-3.8.5/Lib/multiprocessing/context.py
Python-3.8.5/Lib/multiprocessing/__init__.py
Python-3.8.5/Lib/multiprocessing/forkserver.py
Python-3.8.5/Lib/multiprocessing/connection.py
Python-3.8.5/Lib/multiprocessing/queues.py
Python-3.8.5/Lib/multiprocessing/popen_spawn_win32.py
Python-3.8.5/Lib/multiprocessing/popen_forkserver.py
Python-3.8.5/Lib/multiprocessing/pool.py
Python-3.8.5/Lib/multiprocessing/heap.py
Python-3.8.5/Lib/multiprocessing/shared_memory.py
Python-3.8.5/Lib/multiprocessing/reduction.py
Python-3.8.5/Lib/multiprocessing/util.py
Python-3.8.5/Lib/multiprocessing/managers.py
Python-3.8.5/Lib/mailcap.py
Python-3.8.5/Lib/poplib.py
Python-3.8.5/Lib/random.py
Python-3.8.5/Lib/decimal.py
Python-3.8.5/Lib/shelve.py
Python-3.8.5/Lib/_bootlocale.py
Python-3.8.5/Lib/ensurepip/
Python-3.8.5/Lib/ensurepip/_uninstall.py
Python-3.8.5/Lib/ensurepip/__main__.py
Python-3.8.5/Lib/ensurepip/__init__.py
Python-3.8.5/Lib/ensurepip/_bundled/
Python-3.8.5/Lib/ensurepip/_bundled/pip-20.1.1-py2.py3-none-any.whl
Python-3.8.5/Lib/ensurepip/_bundled/setuptools-47.1.0-py3-none-any.whl
Python-3.8.5/Lib/_compression.py
Python-3.8.5/Lib/enum.py
Python-3.8.5/Lib/cgi.py
Python-3.8.5/Lib/json/
Python-3.8.5/Lib/json/decoder.py
Python-3.8.5/Lib/json/scanner.py
Python-3.8.5/Lib/json/encoder.py
Python-3.8.5/Lib/json/tool.py
Python-3.8.5/Lib/json/__init__.py
Python-3.8.5/Lib/struct.py
Python-3.8.5/m4/
Python-3.8.5/m4/ax_c_float_words_bigendian.m4
Python-3.8.5/m4/ax_check_openssl.m4
Python-3.8.5/PC/
Python-3.8.5/PC/_testconsole.c
Python-3.8.5/PC/pyshellext_d.def
Python-3.8.5/PC/classicAppCompat.sccd
Python-3.8.5/PC/errmap.mak
Python-3.8.5/PC/WinMain.c
Python-3.8.5/PC/classicAppCompat.can.xml
Python-3.8.5/PC/python_exe.rc
Python-3.8.5/PC/python3.def
Python-3.8.5/PC/store_info.txt
Python-3.8.5/PC/winsound.c
Python-3.8.5/PC/pyshellext.idl
Python-3.8.5/PC/bdist_wininst/
Python-3.8.5/PC/bdist_wininst/build.bat
Python-3.8.5/PC/bdist_wininst/extract.c
Python-3.8.5/PC/bdist_wininst/install.c
Python-3.8.5/PC/bdist_wininst/archive.h
Python-3.8.5/PC/bdist_wininst/PythonPowered.bmp
Python-3.8.5/PC/bdist_wininst/README.txt
Python-3.8.5/PC/bdist_wininst/bdist_wininst.vcxproj
Python-3.8.5/PC/bdist_wininst/resource.h
Python-3.8.5/PC/bdist_wininst/bdist_wininst.vcxproj.filters
Python-3.8.5/PC/bdist_wininst/install.rc
Python-3.8.5/PC/readme.txt
Python-3.8.5/PC/pyshellext.cpp
Python-3.8.5/PC/sqlite3.rc
Python-3.8.5/PC/empty.c
Python-3.8.5/PC/python3dll.c
Python-3.8.5/PC/python_nt.rc
Python-3.8.5/PC/frozen_dllmain.c
Python-3.8.5/PC/dl_nt.c
Python-3.8.5/PC/python.manifest
Python-3.8.5/PC/icons/
Python-3.8.5/PC/icons/pythonw.ico
Python-3.8.5/PC/icons/py.icns
Python-3.8.5/PC/icons/pyc.svg
Python-3.8.5/PC/icons/python.icns
Python-3.8.5/PC/icons/pythonx44.png
Python-3.8.5/PC/icons/pythonw.icns
Python-3.8.5/PC/icons/pythonw.svg
Python-3.8.5/PC/icons/launcher.svg
Python-3.8.5/PC/icons/pyd.icns
Python-3.8.5/PC/icons/setup.ico
Python-3.8.5/PC/icons/pyd.svg
Python-3.8.5/PC/icons/pyc.icns
Python-3.8.5/PC/icons/launcher.ico
Python-3.8.5/PC/icons/python.ico
Python-3.8.5/PC/icons/pythonx150.png
Python-3.8.5/PC/icons/pyc.ico
Python-3.8.5/PC/icons/logo.svg
Python-3.8.5/PC/icons/py.png
Python-3.8.5/PC/icons/pythonwx44.png
Python-3.8.5/PC/icons/setup.icns
Python-3.8.5/PC/icons/pythonx50.png
Python-3.8.5/PC/icons/pyd.ico
Python-3.8.5/PC/icons/py.ico
Python-3.8.5/PC/icons/setup.svg
Python-3.8.5/PC/icons/py.svg
Python-3.8.5/PC/icons/logox128.png
Python-3.8.5/PC/icons/python.svg
Python-3.8.5/PC/icons/launcher.icns
Python-3.8.5/PC/icons/pythonwx150.png
Python-3.8.5/PC/clinic/
Python-3.8.5/PC/clinic/winreg.c.h
Python-3.8.5/PC/clinic/_testconsole.c.h
Python-3.8.5/PC/clinic/winsound.c.h
Python-3.8.5/PC/clinic/msvcrtmodule.c.h
Python-3.8.5/PC/winreg.c
Python-3.8.5/PC/python_uwp.cpp
Python-3.8.5/PC/config.c
Python-3.8.5/PC/errmap.h
Python-3.8.5/PC/pyshellext.def
Python-3.8.5/PC/pyshellext.rc
Python-3.8.5/PC/validate_ucrtbase.py
Python-3.8.5/PC/classicAppCompat.cat
Python-3.8.5/PC/msvcrtmodule.c
Python-3.8.5/PC/testpy.py
Python-3.8.5/PC/_msi.c
Python-3.8.5/PC/pylauncher.rc
Python-3.8.5/PC/pyconfig.h
Python-3.8.5/PC/python_ver_rc.h
Python-3.8.5/PC/crtlicense.txt
Python-3.8.5/PC/layout/
Python-3.8.5/PC/layout/support/
Python-3.8.5/PC/layout/support/catalog.py
Python-3.8.5/PC/layout/support/pip.py
Python-3.8.5/PC/layout/support/nuspec.py
Python-3.8.5/PC/layout/support/constants.py
Python-3.8.5/PC/layout/support/python.props
Python-3.8.5/PC/layout/support/__init__.py
Python-3.8.5/PC/layout/support/appxmanifest.py
Python-3.8.5/PC/layout/support/options.py
Python-3.8.5/PC/layout/support/distutils.command.bdist_wininst.py
Python-3.8.5/PC/layout/support/logging.py
Python-3.8.5/PC/layout/support/props.py
Python-3.8.5/PC/layout/support/filesets.py
Python-3.8.5/PC/layout/main.py
Python-3.8.5/PC/layout/__main__.py
Python-3.8.5/PC/layout/__init__.py
Python-3.8.5/PC/invalid_parameter_handler.c
Python-3.8.5/PC/getpathp.c
Python-3.8.5/PC/launcher.c
Python-3.8.5/PC/pythonw_exe.rc
Python-3.8.5/setup.py
Python-3.8.5/Objects/
Python-3.8.5/Objects/README
Python-3.8.5/Objects/dictobject.c
Python-3.8.5/Objects/iterobject.c
Python-3.8.5/Objects/interpreteridobject.c
Python-3.8.5/Objects/lnotab_notes.txt
Python-3.8.5/Objects/memoryobject.c
Python-3.8.5/Objects/dict-common.h
Python-3.8.5/Objects/abstract.c
Python-3.8.5/Objects/bytes_methods.c
Python-3.8.5/Objects/call.c
Python-3.8.5/Objects/dictnotes.txt
Python-3.8.5/Objects/structseq.c
Python-3.8.5/Objects/methodobject.c
Python-3.8.5/Objects/tupleobject.c
Python-3.8.5/Objects/moduleobject.c
Python-3.8.5/Objects/obmalloc.c
Python-3.8.5/Objects/typeobject.c
Python-3.8.5/Objects/object.c
Python-3.8.5/Objects/exceptions.c
Python-3.8.5/Objects/bytesobject.c
Python-3.8.5/Objects/capsule.c
Python-3.8.5/Objects/classobject.c
Python-3.8.5/Objects/descrobject.c
Python-3.8.5/Objects/unicodetype_db.h
Python-3.8.5/Objects/funcobject.c
Python-3.8.5/Objects/boolobject.c
Python-3.8.5/Objects/floatobject.c
Python-3.8.5/Objects/accu.c
Python-3.8.5/Objects/fileobject.c
Python-3.8.5/Objects/stringlib/
Python-3.8.5/Objects/stringlib/join.h
Python-3.8.5/Objects/stringlib/undef.h
Python-3.8.5/Objects/stringlib/ucs2lib.h
Python-3.8.5/Objects/stringlib/split.h
Python-3.8.5/Objects/stringlib/unicode_format.h
Python-3.8.5/Objects/stringlib/codecs.h
Python-3.8.5/Objects/stringlib/count.h
Python-3.8.5/Objects/stringlib/fastsearch.h
Python-3.8.5/Objects/stringlib/eq.h
Python-3.8.5/Objects/stringlib/replace.h
Python-3.8.5/Objects/stringlib/README.txt
Python-3.8.5/Objects/stringlib/unicodedefs.h
Python-3.8.5/Objects/stringlib/ctype.h
Python-3.8.5/Objects/stringlib/partition.h
Python-3.8.5/Objects/stringlib/find_max_char.h
Python-3.8.5/Objects/stringlib/clinic/
Python-3.8.5/Objects/stringlib/clinic/transmogrify.h.h
Python-3.8.5/Objects/stringlib/transmogrify.h
Python-3.8.5/Objects/stringlib/ucs4lib.h
Python-3.8.5/Objects/stringlib/ucs1lib.h
Python-3.8.5/Objects/stringlib/find.h
Python-3.8.5/Objects/stringlib/stringdefs.h
Python-3.8.5/Objects/stringlib/localeutil.h
Python-3.8.5/Objects/stringlib/asciilib.h
Python-3.8.5/Objects/typeslots.py
Python-3.8.5/Objects/clinic/
Python-3.8.5/Objects/clinic/typeobject.c.h
Python-3.8.5/Objects/clinic/odictobject.c.h
Python-3.8.5/Objects/clinic/codeobject.c.h
Python-3.8.5/Objects/clinic/enumobject.c.h
Python-3.8.5/Objects/clinic/bytearrayobject.c.h
Python-3.8.5/Objects/clinic/tupleobject.c.h
Python-3.8.5/Objects/clinic/structseq.c.h
Python-3.8.5/Objects/clinic/floatobject.c.h
Python-3.8.5/Objects/clinic/unicodeobject.c.h
Python-3.8.5/Objects/clinic/memoryobject.c.h
Python-3.8.5/Objects/clinic/funcobject.c.h
Python-3.8.5/Objects/clinic/moduleobject.c.h
Python-3.8.5/Objects/clinic/complexobject.c.h
Python-3.8.5/Objects/clinic/descrobject.c.h
Python-3.8.5/Objects/clinic/longobject.c.h
Python-3.8.5/Objects/clinic/bytesobject.c.h
Python-3.8.5/Objects/clinic/listobject.c.h
Python-3.8.5/Objects/clinic/dictobject.c.h
Python-3.8.5/Objects/namespaceobject.c
Python-3.8.5/Objects/cellobject.c
Python-3.8.5/Objects/unicodectype.c
Python-3.8.5/Objects/frameobject.c
Python-3.8.5/Objects/longobject.c
Python-3.8.5/Objects/bytearrayobject.c
Python-3.8.5/Objects/setobject.c
Python-3.8.5/Objects/codeobject.c
Python-3.8.5/Objects/rangeobject.c
Python-3.8.5/Objects/listsort.txt
Python-3.8.5/Objects/enumobject.c
Python-3.8.5/Objects/sliceobject.c
Python-3.8.5/Objects/listobject.c
Python-3.8.5/Objects/typeslots.inc
Python-3.8.5/Objects/weakrefobject.c
Python-3.8.5/Objects/unicodeobject.c
Python-3.8.5/Objects/complexobject.c
Python-3.8.5/Objects/picklebufobject.c
Python-3.8.5/Objects/odictobject.c
Python-3.8.5/Objects/genobject.c
Removing intermediate container c7dfbeff3be0
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Running in 818c67d52b3a
checking build system type... x86_64-pc-linux-musl
checking host system type... x86_64-pc-linux-musl
checking for python3.8... no
checking for python3... no
checking for python... no
checking for --enable-universalsdk... no
checking for --with-universal-archs... no
checking MACHDEP... "linux"
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for a sed that does not truncate output... /bin/sed
checking for --with-cxx-main=<compiler>... no
checking for g++... no
configure:

  By default, distutils will build C++ extension modules with "g++".
  If this is not intended, then set CXX on the configure command line.
  
checking for the platform triplet based on compiler characteristics... x86_64-linux-gnu
checking for -Wl,--no-as-needed... yes
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking for the Android API level... not Android
checking for --with-suffix... 
checking for case-insensitive build directory... no
checking LIBRARY... libpython$(VERSION)$(ABIFLAGS).a
checking LINKCC... $(PURIFY) $(MAINCC)
checking for GNU ld... yes
checking for --enable-shared... no
checking for --enable-profiling... no
checking LDLIBRARY... libpython$(VERSION)$(ABIFLAGS).a
checking for ar... ar
checking for readelf... readelf
checking for a BSD-compatible install... /usr/bin/install -c
checking for a thread-safe mkdir -p... ./install-sh -c -d
checking for --with-pydebug... no
checking for --with-trace-refs... no
checking for --with-assertions... no
checking for --enable-optimizations... no
checking PROFILE_TASK... -m test --pgo
checking for --with-lto... no
checking for llvm-profdata... /usr/bin/llvm-profdata
checking for -Wextra... yes
checking whether gcc accepts and needs -fno-strict-aliasing... no
checking if we can turn off gcc unused result warning... yes
checking if we can turn off gcc unused parameter warning... yes
checking if we can turn off gcc missing field initializers warning... yes
checking if we can turn on gcc mixed sign comparison warning... yes
checking if we can turn on gcc unreachable code warning... no
checking if we can turn on gcc strict-prototypes warning... no
checking if we can make implicit function declaration an error in gcc... yes
checking whether pthreads are available without options... yes
checking whether g++ also accepts flags for thread support... no
checking for ANSI C header files... (cached) yes
checking asm/types.h usability... yes
checking asm/types.h presence... yes
checking for asm/types.h... yes
checking crypt.h usability... yes
checking crypt.h presence... yes
checking for crypt.h... yes
checking conio.h usability... no
checking conio.h presence... no
checking for conio.h... no
checking direct.h usability... no
checking direct.h presence... no
checking for direct.h... no
checking dlfcn.h usability... yes
checking dlfcn.h presence... yes
checking for dlfcn.h... yes
checking errno.h usability... yes
checking errno.h presence... yes
checking for errno.h... yes
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking grp.h usability... yes
checking grp.h presence... yes
checking for grp.h... yes
checking ieeefp.h usability... no
checking ieeefp.h presence... no
checking for ieeefp.h... no
checking io.h usability... no
checking io.h presence... no
checking for io.h... no
checking langinfo.h usability... yes
checking langinfo.h presence... yes
checking for langinfo.h... yes
checking libintl.h usability... no
checking libintl.h presence... no
checking for libintl.h... no
checking process.h usability... no
checking process.h presence... no
checking for process.h... no
checking pthread.h usability... yes
checking pthread.h presence... yes
checking for pthread.h... yes
checking sched.h usability... yes
checking sched.h presence... yes
checking for sched.h... yes
checking shadow.h usability... yes
checking shadow.h presence... yes
checking for shadow.h... yes
checking signal.h usability... yes
checking signal.h presence... yes
checking for signal.h... yes
checking stropts.h usability... yes
checking stropts.h presence... yes
checking for stropts.h... yes
checking termios.h usability... yes
checking termios.h presence... yes
checking for termios.h... yes
checking utime.h usability... yes
checking utime.h presence... yes
checking for utime.h... yes
checking poll.h usability... yes
checking poll.h presence... yes
checking for poll.h... yes
checking sys/devpoll.h usability... no
checking sys/devpoll.h presence... no
checking for sys/devpoll.h... no
checking sys/epoll.h usability... yes
checking sys/epoll.h presence... yes
checking for sys/epoll.h... yes
checking sys/poll.h usability... yes
checking sys/poll.h presence... yes
checking for sys/poll.h... yes
checking sys/audioio.h usability... no
checking sys/audioio.h presence... no
checking for sys/audioio.h... no
checking sys/xattr.h usability... yes
checking sys/xattr.h presence... yes
checking for sys/xattr.h... yes
checking sys/bsdtty.h usability... no
checking sys/bsdtty.h presence... no
checking for sys/bsdtty.h... no
checking sys/event.h usability... no
checking sys/event.h presence... no
checking for sys/event.h... no
checking sys/file.h usability... yes
checking sys/file.h presence... yes
checking for sys/file.h... yes
checking sys/ioctl.h usability... yes
checking sys/ioctl.h presence... yes
checking for sys/ioctl.h... yes
checking sys/kern_control.h usability... no
checking sys/kern_control.h presence... no
checking for sys/kern_control.h... no
checking sys/loadavg.h usability... no
checking sys/loadavg.h presence... no
checking for sys/loadavg.h... no
checking sys/lock.h usability... no
checking sys/lock.h presence... no
checking for sys/lock.h... no
checking sys/mkdev.h usability... no
checking sys/mkdev.h presence... no
checking for sys/mkdev.h... no
checking sys/modem.h usability... no
checking sys/modem.h presence... no
checking for sys/modem.h... no
checking sys/param.h usability... yes
checking sys/param.h presence... yes
checking for sys/param.h... yes
checking sys/random.h usability... yes
checking sys/random.h presence... yes
checking for sys/random.h... yes
checking sys/select.h usability... yes
checking sys/select.h presence... yes
checking for sys/select.h... yes
checking sys/sendfile.h usability... yes
checking sys/sendfile.h presence... yes
checking for sys/sendfile.h... yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking sys/statvfs.h usability... yes
checking sys/statvfs.h presence... yes
checking for sys/statvfs.h... yes
checking for sys/stat.h... (cached) yes
checking sys/syscall.h usability... yes
checking sys/syscall.h presence... yes
checking for sys/syscall.h... yes
checking sys/sys_domain.h usability... no
checking sys/sys_domain.h presence... no
checking for sys/sys_domain.h... no
checking sys/termio.h usability... no
checking sys/termio.h presence... no
checking for sys/termio.h... no
checking sys/time.h usability... yes
checking sys/time.h presence... yes
checking for sys/time.h... yes
checking sys/times.h usability... yes
checking sys/times.h presence... yes
checking for sys/times.h... yes
checking for sys/types.h... (cached) yes
checking sys/uio.h usability... yes
checking sys/uio.h presence... yes
checking for sys/uio.h... yes
checking sys/un.h usability... yes
checking sys/un.h presence... yes
checking for sys/un.h... yes
checking sys/utsname.h usability... yes
checking sys/utsname.h presence... yes
checking for sys/utsname.h... yes
checking sys/wait.h usability... yes
checking sys/wait.h presence... yes
checking for sys/wait.h... yes
checking pty.h usability... yes
checking pty.h presence... yes
checking for pty.h... yes
checking libutil.h usability... no
checking libutil.h presence... no
checking for libutil.h... no
checking sys/resource.h usability... yes
checking sys/resource.h presence... yes
checking for sys/resource.h... yes
checking netpacket/packet.h usability... yes
checking netpacket/packet.h presence... yes
checking for netpacket/packet.h... yes
checking sysexits.h usability... yes
checking sysexits.h presence... yes
checking for sysexits.h... yes
checking bluetooth.h usability... no
checking bluetooth.h presence... no
checking for bluetooth.h... no
checking linux/tipc.h usability... yes
checking linux/tipc.h presence... yes
checking for linux/tipc.h... yes
checking linux/random.h usability... yes
checking linux/random.h presence... yes
checking for linux/random.h... yes
checking spawn.h usability... yes
checking spawn.h presence... yes
checking for spawn.h... yes
checking util.h usability... no
checking util.h presence... no
checking for util.h... no
checking alloca.h usability... yes
checking alloca.h presence... yes
checking for alloca.h... yes
checking endian.h usability... yes
checking endian.h presence... yes
checking for endian.h... yes
checking sys/endian.h usability... no
checking sys/endian.h presence... no
checking for sys/endian.h... no
checking sys/sysmacros.h usability... yes
checking sys/sysmacros.h presence... yes
checking for sys/sysmacros.h... yes
checking linux/memfd.h usability... yes
checking linux/memfd.h presence... yes
checking for linux/memfd.h... yes
checking sys/memfd.h usability... no
checking sys/memfd.h presence... no
checking for sys/memfd.h... no
checking sys/mman.h usability... yes
checking sys/mman.h presence... yes
checking for sys/mman.h... yes
checking for dirent.h that defines DIR... yes
checking for library containing opendir... none required
checking whether sys/types.h defines makedev... no
checking for sys/mkdev.h... (cached) no
checking for sys/sysmacros.h... (cached) yes
checking bluetooth/bluetooth.h usability... no
checking bluetooth/bluetooth.h presence... no
checking for bluetooth/bluetooth.h... no
checking for net/if.h... yes
checking for linux/netlink.h... yes
checking for linux/qrtr.h... yes
checking for linux/vm_sockets.h... yes
checking for linux/can.h... yes
checking for linux/can/raw.h... yes
checking for linux/can/bcm.h... yes
checking for clock_t in time.h... yes
checking for makedev... yes
checking for le64toh... yes
checking for mode_t... yes
checking for off_t... yes
checking for pid_t... yes
checking for size_t... yes
checking for uid_t in sys/types.h... yes
checking for ssize_t... yes
checking for __uint128_t... yes
checking size of int... 4
checking size of long... 8
checking size of long long... 8
checking size of void *... 8
checking size of short... 2
checking size of float... 4
checking size of double... 8
checking size of fpos_t... 16
checking size of size_t... 8
checking size of pid_t... 4
checking size of uintptr_t... 8
checking for long double... yes
checking size of long double... 16
checking size of _Bool... 1
checking size of off_t... 8
checking whether to enable large file support... no
checking size of time_t... 8
checking for pthread_t... yes
checking size of pthread_t... 8
checking size of pthread_key_t... 4
checking whether pthread_key_t is compatible with int... yes
checking for --enable-framework... no
checking for dyld... no
checking the extension of shared libraries... .so
checking LDSHARED... $(CC) -shared
checking CCSHARED... -fPIC
checking LINKFORSHARED... -Xlinker -export-dynamic
checking CFLAGSFORSHARED... 
checking SHLIBS... $(LIBS)
checking for sendfile in -lsendfile... no
checking for dlopen in -ldl... yes
checking for shl_load in -ldld... no
checking uuid/uuid.h usability... yes
checking uuid/uuid.h presence... yes
checking for uuid/uuid.h... yes
checking uuid.h usability... no
checking uuid.h presence... no
checking for uuid.h... no
checking for uuid_generate_time_safe... yes
checking for uuid_create... no
checking for uuid_enc_be... no
checking for library containing sem_init... none required
checking for textdomain in -lintl... no
checking aligned memory access is required... no
checking for --with-hash-algorithm... default
checking for --with-address-sanitizer... no
checking for --with-memory-sanitizer... no
checking for --with-undefined-behavior-sanitizer... no
checking for t_open in -lnsl... no
checking for socket in -lsocket... no
checking for --with-libs... no
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for --with-system-expat... no
checking for --with-system-ffi... yes
checking for --with-system-libmpdec... no
checking for --with-decimal-contextvar... yes
checking for --enable-loadable-sqlite-extensions... no
checking for --with-tcltk-includes... default
checking for --with-tcltk-libs... default
checking for --with-dbmliborder... 
checking if PTHREAD_SCOPE_SYSTEM is supported... yes
checking for pthread_sigmask... yes
checking for pthread_getcpuclockid... yes
checking if --enable-ipv6 is specified... yes
checking if RFC2553 API is available... yes
checking ipv6 stack type... unknown
checking for CAN_RAW_FD_FRAMES... yes
checking for --with-doc-strings... yes
checking for --with-pymalloc... yes
checking for --with-c-locale-coercion... yes
checking for --with-valgrind... no
checking for --with-dtrace... no
checking for dlopen... yes
checking DYNLOADFILE... dynload_shlib.o
checking MACHDEP_OBJS... none
checking for alarm... yes
checking for accept4... yes
checking for setitimer... yes
checking for getitimer... yes
checking for bind_textdomain_codeset... yes
checking for chown... yes
checking for clock... yes
checking for confstr... yes
checking for copy_file_range... yes
checking for ctermid... yes
checking for dup3... yes
checking for execv... yes
checking for explicit_bzero... yes
checking for explicit_memset... no
checking for faccessat... yes
checking for fchmod... yes
checking for fchmodat... yes
checking for fchown... yes
checking for fchownat... yes
checking for fdwalk... no
checking for fexecve... yes
checking for fdopendir... yes
checking for fork... yes
checking for fpathconf... yes
checking for fstatat... yes
checking for ftime... yes
checking for ftruncate... yes
checking for futimesat... yes
checking for futimens... yes
checking for futimes... yes
checking for gai_strerror... yes
checking for getentropy... yes
checking for getgrgid_r... yes
checking for getgrnam_r... yes
checking for getgrouplist... yes
checking for getgroups... yes
checking for getlogin... yes
checking for getloadavg... yes
checking for getpeername... yes
checking for getpgid... yes
checking for getpid... yes
checking for getpriority... yes
checking for getresuid... yes
checking for getresgid... yes
checking for getpwent... yes
checking for getpwnam_r... yes
checking for getpwuid_r... yes
checking for getspnam... yes
checking for getspent... yes
checking for getsid... yes
checking for getwd... no
checking for if_nameindex... yes
checking for initgroups... yes
checking for kill... yes
checking for killpg... yes
checking for lchown... yes
checking for lockf... yes
checking for linkat... yes
checking for lstat... yes
checking for lutimes... yes
checking for mmap... yes
checking for memrchr... yes
checking for mbrtowc... yes
checking for mkdirat... yes
checking for mkfifo... yes
checking for madvise... yes
checking for mkfifoat... yes
checking for mknod... yes
checking for mknodat... yes
checking for mktime... yes
checking for mremap... yes
checking for nice... yes
checking for openat... yes
checking for pathconf... yes
checking for pause... yes
checking for pipe2... yes
checking for plock... no
checking for poll... yes
checking for posix_fallocate... yes
checking for posix_fadvise... yes
checking for posix_spawn... yes
checking for posix_spawnp... yes
checking for pread... yes
checking for preadv... yes
checking for preadv2... no
checking for pthread_condattr_setclock... yes
checking for pthread_init... no
checking for pthread_kill... yes
checking for putenv... yes
checking for pwrite... yes
checking for pwritev... yes
checking for pwritev2... no
checking for readlink... yes
checking for readlinkat... yes
checking for readv... yes
checking for realpath... yes
checking for renameat... yes
checking for sem_open... yes
checking for sem_timedwait... yes
checking for sem_getvalue... yes
checking for sem_unlink... yes
checking for sendfile... yes
checking for setegid... yes
checking for seteuid... yes
checking for setgid... yes
checking for sethostname... yes
checking for setlocale... yes
checking for setregid... yes
checking for setreuid... yes
checking for setresuid... yes
checking for setresgid... yes
checking for setsid... yes
checking for setpgid... yes
checking for setpgrp... yes
checking for setpriority... yes
checking for setuid... yes
checking for setvbuf... yes
checking for sched_get_priority_max... yes
checking for sched_setaffinity... yes
checking for sched_setscheduler... yes
checking for sched_setparam... yes
checking for sched_rr_get_interval... yes
checking for sigaction... yes
checking for sigaltstack... yes
checking for sigfillset... yes
checking for siginterrupt... yes
checking for sigpending... yes
checking for sigrelse... yes
checking for sigtimedwait... yes
checking for sigwait... yes
checking for sigwaitinfo... yes
checking for snprintf... yes
checking for strftime... yes
checking for strlcpy... yes
checking for strsignal... yes
checking for symlinkat... yes
checking for sync... yes
checking for sysconf... yes
checking for tcgetpgrp... yes
checking for tcsetpgrp... yes
checking for tempnam... yes
checking for timegm... yes
checking for times... yes
checking for tmpfile... yes
checking for tmpnam... yes
checking for tmpnam_r... no
checking for truncate... yes
checking for uname... yes
checking for unlinkat... yes
checking for unsetenv... yes
checking for utimensat... yes
checking for utimes... yes
checking for waitid... yes
checking for waitpid... yes
checking for wait3... yes
checking for wait4... yes
checking for wcscoll... yes
checking for wcsftime... yes
checking for wcsxfrm... yes
checking for wmemcmp... yes
checking for writev... yes
checking for _getpty... no
checking for rtpSpawn... no
checking whether dirfd is declared... yes
checking for chroot... yes
checking for link... yes
checking for symlink... yes
checking for fchdir... yes
checking for fsync... yes
checking for fdatasync... yes
checking for epoll... yes
checking for epoll_create1... yes
checking for kqueue... no
checking for prlimit... yes
checking for memfd_create... yes
checking for ctermid_r... no
checking for flock declaration... yes
checking for flock... yes
checking for getpagesize... yes
checking for broken unsetenv... no
checking for true... true
checking for inet_aton in -lc... yes
checking for chflags... no
checking for lchflags... no
checking for inflateCopy in -lz... yes
checking for hstrerror... yes
checking for inet_aton... yes
checking for inet_pton... yes
checking for setgroups... yes
checking for openpty... yes
checking for forkpty... yes
checking for fseek64... no
checking for fseeko... yes
checking for fstatvfs... yes
checking for ftell64... no
checking for ftello... yes
checking for statvfs... yes
checking for dup2... yes
checking for strdup... yes
checking for getpgrp... yes
checking for setpgrp... (cached) yes
checking for gettimeofday... yes
checking for library containing crypt... none required
checking for library containing crypt_r... none required
checking for crypt_r... yes
checking for clock_gettime... yes
checking for clock_getres... yes
checking for clock_settime... yes
checking for major... yes
checking for getaddrinfo... yes
checking getaddrinfo bug... no
checking for getnameinfo... yes
checking whether time.h and sys/time.h may both be included... yes
checking whether struct tm is in sys/time.h or time.h... time.h
checking for struct tm.tm_zone... yes
checking for struct stat.st_rdev... yes
checking for struct stat.st_blksize... yes
checking for struct stat.st_flags... no
checking for struct stat.st_gen... no
checking for struct stat.st_birthtime... no
checking for struct stat.st_blocks... yes
checking for struct passwd.pw_gecos... yes
checking for struct passwd.pw_passwd... yes
checking for siginfo_t.si_band... yes
checking for time.h that defines altzone... no
checking whether sys/select.h and sys/time.h may both be included... yes
checking for addrinfo... yes
checking for sockaddr_storage... yes
checking for sockaddr_alg... yes
checking whether char is unsigned... no
checking for an ANSI C-conforming const... yes
checking for working signed char... yes
checking for prototypes... yes
checking for variable length prototypes and stdarg.h... yes
checking for socketpair... yes
checking if sockaddr has sa_len member... no
checking for gethostbyname_r... yes
checking gethostbyname_r with 6 args... yes
checking for __fpu_control... no
checking for __fpu_control in -lieee... no
checking for --with-libm=STRING... default LIBM="-lm"
checking for --with-libc=STRING... default LIBC=""
checking for x64 gcc inline assembler... yes
checking whether float word ordering is bigendian... no
checking whether we can use gcc inline assembler to get and set x87 control word... yes
checking whether we can use gcc inline assembler to get and set mc68881 fpcr... no
checking for x87-style double rounding... no
checking for acosh... yes
checking for asinh... yes
checking for atanh... yes
checking for copysign... yes
checking for erf... yes
checking for erfc... yes
checking for expm1... yes
checking for finite... yes
checking for gamma... no
checking for hypot... yes
checking for lgamma... yes
checking for log1p... yes
checking for log2... yes
checking for round... yes
checking for tgamma... yes
checking whether isinf is declared... yes
checking whether isnan is declared... yes
checking whether isfinite is declared... yes
checking whether POSIX semaphores are enabled... yes
checking for broken sem_getvalue... no
checking whether RTLD_LAZY is declared... yes
checking whether RTLD_NOW is declared... yes
checking whether RTLD_GLOBAL is declared... yes
checking whether RTLD_LOCAL is declared... yes
checking whether RTLD_NODELETE is declared... yes
checking whether RTLD_NOLOAD is declared... yes
checking whether RTLD_DEEPBIND is declared... no
checking whether RTLD_MEMBER is declared... no
checking digit size for Python's longs... no value specified
checking wchar.h usability... yes
checking wchar.h presence... yes
checking for wchar.h... yes
checking size of wchar_t... 4
checking for UCS-4 tcl... no
checking whether wchar_t is signed... yes
checking whether wchar_t is usable... no
checking whether byte ordering is bigendian... no
checking ABIFLAGS... 
checking SOABI... cpython-38-x86_64-linux-gnu
checking LDVERSION... $(VERSION)$(ABIFLAGS)
checking whether right shift extends the sign bit... yes
checking for getc_unlocked() and friends... yes
checking how to link readline libs... -lreadline
checking for rl_pre_input_hook in -lreadline... yes
checking for rl_completion_display_matches_hook in -lreadline... yes
checking for rl_resize_terminal in -lreadline... yes
checking for rl_completion_matches in -lreadline... yes
checking for append_history in -lreadline... yes
checking for broken nice()... no
checking for broken poll()... no
checking for working tzset()... yes
checking for tv_nsec in struct stat... yes
checking for tv_nsec2 in struct stat... no
checking curses.h usability... yes
checking curses.h presence... yes
checking for curses.h... yes
checking ncurses.h usability... yes
checking ncurses.h presence... yes
checking for ncurses.h... yes
checking for term.h... yes
checking whether mvwdelch is an expression... yes
checking whether WINDOW has _flags... yes
checking for is_pad... yes
checking for is_term_resized... yes
checking for resize_term... yes
checking for resizeterm... yes
checking for immedok... yes
checking for syncok... yes
checking for wchgat... yes
checking for filter... yes
checking for has_key... yes
checking for typeahead... yes
checking for use_env... yes
configure: checking for device files
checking for /dev/ptmx... yes
checking for /dev/ptc... no
checking for %zd printf() format support... yes
checking for socklen_t... yes
checking for broken mbstowcs... no
checking for --with-computed-gotos... no value specified
checking whether gcc supports computed gotos... yes
checking for build directories... done
checking for -O2... yes
checking for glibc _FORTIFY_SOURCE/memmove bug... no
checking for gcc ipa-pure-const bug... no
checking for stdatomic.h... yes
checking for GCC >= 4.7 __atomic builtins... yes
checking for ensurepip... upgrade
checking if the dirent structure of a d_type field... yes
checking for the Linux getrandom() syscall... yes
checking for the getrandom() function... yes
checking for library containing shm_open... none required
checking for sys/mman.h... (cached) yes
checking for shm_open... yes
checking for shm_unlink... yes
checking for pkg-config... /usr/bin/pkg-config
checking whether compiling and linking against OpenSSL works... yes
checking for X509_VERIFY_PARAM_set1_host in libssl... yes
checking for --with-ssl-default-suites... python
configure: creating ./config.status
config.status: creating Makefile.pre
config.status: creating Misc/python.pc
config.status: creating Misc/python-embed.pc
config.status: creating Misc/python-config.sh
config.status: creating Modules/ld_so_aix
config.status: creating pyconfig.h
creating Modules/Setup.local
creating Makefile


If you want a release build with all stable optimizations active (PGO, etc),
please run ./configure --enable-optimizations


Removing intermediate container 818c67d52b3a
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Running in bd422452ac3f
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Programs/python.o ./Programs/python.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/acceler.o Parser/acceler.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/grammar1.o Parser/grammar1.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/listnode.o Parser/listnode.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/node.o Parser/node.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/parser.o Parser/parser.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/token.o Parser/token.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/myreadline.o Parser/myreadline.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/parsetok.o Parser/parsetok.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Parser/tokenizer.o Parser/tokenizer.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/abstract.o Objects/abstract.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/accu.o Objects/accu.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/boolobject.o Objects/boolobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/bytes_methods.o Objects/bytes_methods.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/bytearrayobject.o Objects/bytearrayobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/bytesobject.o Objects/bytesobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/call.o Objects/call.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/capsule.o Objects/capsule.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/cellobject.o Objects/cellobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/classobject.o Objects/classobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/codeobject.o Objects/codeobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/complexobject.o Objects/complexobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/descrobject.o Objects/descrobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/enumobject.o Objects/enumobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/exceptions.o Objects/exceptions.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/genobject.o Objects/genobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/fileobject.o Objects/fileobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/floatobject.o Objects/floatobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/frameobject.o Objects/frameobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/funcobject.o Objects/funcobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/interpreteridobject.o Objects/interpreteridobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/iterobject.o Objects/iterobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/listobject.o Objects/listobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/longobject.o Objects/longobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/dictobject.o Objects/dictobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/odictobject.o Objects/odictobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/memoryobject.o Objects/memoryobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/methodobject.o Objects/methodobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/moduleobject.o Objects/moduleobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/namespaceobject.o Objects/namespaceobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/object.o Objects/object.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/obmalloc.o Objects/obmalloc.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/picklebufobject.o Objects/picklebufobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/rangeobject.o Objects/rangeobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/setobject.o Objects/setobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/sliceobject.o Objects/sliceobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/structseq.o Objects/structseq.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/tupleobject.o Objects/tupleobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/typeobject.o Objects/typeobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/unicodeobject.o Objects/unicodeobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/unicodectype.o Objects/unicodectype.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Objects/weakrefobject.o Objects/weakrefobject.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/_warnings.o Python/_warnings.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/Python-ast.o Python/Python-ast.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/asdl.o Python/asdl.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/ast.o Python/ast.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/ast_opt.o Python/ast_opt.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/ast_unparse.o Python/ast_unparse.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/bltinmodule.o Python/bltinmodule.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/ceval.o Python/ceval.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/codecs.o Python/codecs.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/compile.o Python/compile.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/context.o Python/context.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/dynamic_annotations.o Python/dynamic_annotations.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/errors.o Python/errors.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/frozenmain.o Python/frozenmain.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/future.o Python/future.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/getargs.o Python/getargs.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/getcompiler.o Python/getcompiler.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/getcopyright.o Python/getcopyright.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -DPLATFORM='"linux"' -o Python/getplatform.o ./Python/getplatform.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/getversion.o Python/getversion.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/graminit.o Python/graminit.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/hamt.o Python/hamt.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/import.o Python/import.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -I. -o Python/importdl.o ./Python/importdl.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/initconfig.o Python/initconfig.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/marshal.o Python/marshal.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/modsupport.o Python/modsupport.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/mysnprintf.o Python/mysnprintf.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/mystrtoul.o Python/mystrtoul.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pathconfig.o Python/pathconfig.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/peephole.o Python/peephole.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/preconfig.o Python/preconfig.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pyarena.o Python/pyarena.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pyctype.o Python/pyctype.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pyfpe.o Python/pyfpe.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pyhash.o Python/pyhash.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pylifecycle.o Python/pylifecycle.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pymath.o Python/pymath.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pystate.o Python/pystate.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pythonrun.o Python/pythonrun.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pytime.o Python/pytime.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/bootstrap_hash.o Python/bootstrap_hash.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/structmember.o Python/structmember.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/symtable.o Python/symtable.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE \
	-DABIFLAGS='""' \
	-DMULTIARCH=\"x86_64-linux-gnu\" \
	-o Python/sysmodule.o ./Python/sysmodule.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/thread.o Python/thread.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/traceback.o Python/traceback.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/getopt.o Python/getopt.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pystrcmp.o Python/pystrcmp.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pystrtod.o Python/pystrtod.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/pystrhex.o Python/pystrhex.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE  -o Python/dtoa.o Python/dtoa.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/formatter_unicode.o Python/formatter_unicode.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/fileutils.o Python/fileutils.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE \
	-DSOABI='"cpython-38-x86_64-linux-gnu"' \
	-o Python/dynload_shlib.o ./Python/dynload_shlib.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Modules/config.o Modules/config.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -DPYTHONPATH='""' \
	-DPREFIX='"/usr/local"' \
	-DEXEC_PREFIX='"/usr/local"' \
	-DVERSION='"3.8"' \
	-DVPATH='""' \
	-o Modules/getpath.o ./Modules/getpath.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Modules/main.o Modules/main.c
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Modules/gcmodule.o Modules/gcmodule.c
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -c ./Modules/posixmodule.c -o Modules/posixmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/errnomodule.c -o Modules/errnomodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/pwdmodule.c -o Modules/pwdmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_sre.c -o Modules/_sre.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_codecsmodule.c -o Modules/_codecsmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_weakref.c -o Modules/_weakref.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -c ./Modules/_functoolsmodule.c -o Modules/_functoolsmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_operator.c -o Modules/_operator.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_collectionsmodule.c -o Modules/_collectionsmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_abc.c -o Modules/_abc.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/itertoolsmodule.c -o Modules/itertoolsmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/atexitmodule.c -o Modules/atexitmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -c ./Modules/signalmodule.c -o Modules/signalmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_stat.c -o Modules/_stat.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -c ./Modules/timemodule.c -o Modules/timemodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -c ./Modules/_threadmodule.c -o Modules/_threadmodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -c ./Modules/_localemodule.c -o Modules/_localemodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -I./Modules/_io -c ./Modules/_io/_iomodule.c -o Modules/_iomodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -I./Modules/_io -c ./Modules/_io/iobase.c -o Modules/iobase.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -I./Modules/_io -c ./Modules/_io/fileio.c -o Modules/fileio.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -I./Modules/_io -c ./Modules/_io/bytesio.c -o Modules/bytesio.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -I./Modules/_io -c ./Modules/_io/bufferedio.c -o Modules/bufferedio.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -I./Modules/_io -c ./Modules/_io/textio.c -o Modules/textio.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -DPy_BUILD_CORE_BUILTIN -I./Include/internal -I./Modules/_io -c ./Modules/_io/stringio.c -o Modules/stringio.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/faulthandler.c -o Modules/faulthandler.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/_tracemalloc.c -o Modules/_tracemalloc.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/hashtable.c -o Modules/hashtable.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/symtablemodule.c -o Modules/symtablemodule.o
gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE_BUILTIN  -c ./Modules/xxsubtype.c -o Modules/xxsubtype.o
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Python/frozen.o Python/frozen.c
gcc -c -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Modules/_math.o Modules/_math.c
/usr/bin/install -c -m 644 ./Tools/gdb/libpython.py python-gdb.py
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE -o Programs/_testembed.o ./Programs/_testembed.c
sed -e "s,@EXENAME@,/usr/local/bin/python3.8," < ./Misc/python-config.in >python-config.py
LC_ALL=C sed -e 's,\$(\([A-Za-z0-9_]*\)),\$\{\1\},g' < Misc/python-config.sh >python-config
gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration  -I./Include/internal  -I. -I./Include    -DPy_BUILD_CORE \
      -DGITVERSION="\"`LC_ALL=C `\"" \
      -DGITTAG="\"`LC_ALL=C `\"" \
      -DGITBRANCH="\"`LC_ALL=C `\"" \
      -o Modules/getbuildinfo.o ./Modules/getbuildinfo.c
rm -f libpython3.8.a
ar rcs libpython3.8.a Modules/getbuildinfo.o Parser/acceler.o Parser/grammar1.o Parser/listnode.o Parser/node.o Parser/parser.o Parser/token.o  Parser/myreadline.o Parser/parsetok.o Parser/tokenizer.o Objects/abstract.o Objects/accu.o Objects/boolobject.o Objects/bytes_methods.o Objects/bytearrayobject.o Objects/bytesobject.o Objects/call.o Objects/capsule.o Objects/cellobject.o Objects/classobject.o Objects/codeobject.o Objects/complexobject.o Objects/descrobject.o Objects/enumobject.o Objects/exceptions.o Objects/genobject.o Objects/fileobject.o Objects/floatobject.o Objects/frameobject.o Objects/funcobject.o Objects/interpreteridobject.o Objects/iterobject.o Objects/listobject.o Objects/longobject.o Objects/dictobject.o Objects/odictobject.o Objects/memoryobject.o Objects/methodobject.o Objects/moduleobject.o Objects/namespaceobject.o Objects/object.o Objects/obmalloc.o Objects/picklebufobject.o Objects/rangeobject.o Objects/setobject.o Objects/sliceobject.o Objects/structseq.o Objects/tupleobject.o Objects/typeobject.o Objects/unicodeobject.o Objects/unicodectype.o Objects/weakrefobject.o Python/_warnings.o Python/Python-ast.o Python/asdl.o Python/ast.o Python/ast_opt.o Python/ast_unparse.o Python/bltinmodule.o Python/ceval.o Python/codecs.o Python/compile.o Python/context.o Python/dynamic_annotations.o Python/errors.o Python/frozenmain.o Python/future.o Python/getargs.o Python/getcompiler.o Python/getcopyright.o Python/getplatform.o Python/getversion.o Python/graminit.o Python/hamt.o Python/import.o Python/importdl.o Python/initconfig.o Python/marshal.o Python/modsupport.o Python/mysnprintf.o Python/mystrtoul.o Python/pathconfig.o Python/peephole.o Python/preconfig.o Python/pyarena.o Python/pyctype.o Python/pyfpe.o Python/pyhash.o Python/pylifecycle.o Python/pymath.o Python/pystate.o Python/pythonrun.o Python/pytime.o Python/bootstrap_hash.o Python/structmember.o Python/symtable.o Python/sysmodule.o Python/thread.o Python/traceback.o Python/getopt.o Python/pystrcmp.o Python/pystrtod.o Python/pystrhex.o Python/dtoa.o Python/formatter_unicode.o Python/fileutils.o Python/dynload_shlib.o    Modules/config.o Modules/getpath.o Modules/main.o Modules/gcmodule.o Modules/posixmodule.o  Modules/errnomodule.o  Modules/pwdmodule.o  Modules/_sre.o  Modules/_codecsmodule.o  Modules/_weakref.o  Modules/_functoolsmodule.o  Modules/_operator.o  Modules/_collectionsmodule.o  Modules/_abc.o  Modules/itertoolsmodule.o  Modules/atexitmodule.o  Modules/signalmodule.o  Modules/_stat.o  Modules/timemodule.o  Modules/_threadmodule.o  Modules/_localemodule.o  Modules/_iomodule.o Modules/iobase.o Modules/fileio.o Modules/bytesio.o Modules/bufferedio.o Modules/textio.o Modules/stringio.o  Modules/faulthandler.o  Modules/_tracemalloc.o Modules/hashtable.o  Modules/symtablemodule.o  Modules/xxsubtype.o Python/frozen.o
gcc     -Xlinker -export-dynamic -o python Programs/python.o libpython3.8.a -ldl  -lm   -lm 
gcc     -Xlinker -export-dynamic -o Programs/_testembed Programs/_testembed.o libpython3.8.a -ldl  -lm   -lm 
./python -E -S -m sysconfig --generate-posix-vars ;\
if test $? -ne 0 ; then \
	echo "generate-posix-vars failed" ; \
	rm -f ./pybuilddir.txt ; \
	exit 1 ; \
fi
 CC='gcc' LDSHARED='gcc -shared    ' OPT='-DNDEBUG -g -fwrapv -O3 -Wall' 	_TCLTK_INCLUDES='' _TCLTK_LIBS='' 	./python -E ./setup.py  build
running build
running build_ext
building '_struct' extension
building 'array' extension
building '_contextvars' extension
creating build/temp.linux-x86_64-3.8/python
building 'math' extension
creating build/temp.linux-x86_64-3.8/python
creating build/temp.linux-x86_64-3.8/python/Modules
creating build/temp.linux-x86_64-3.8/python/Modules
building 'cmath' extension
creating build/temp.linux-x86_64-3.8/python/Modules
creating build/temp.linux-x86_64-3.8/python/Modules
building '_bisect' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/mathmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/mathmodule.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cmathmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/cmathmodule.o
building '_random' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/arraymodule.c -o build/temp.linux-x86_64-3.8/python/Modules/arraymodule.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_struct.c -o build/temp.linux-x86_64-3.8/python/Modules/_struct.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_contextvarsmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_contextvarsmodule.o
building '_datetime' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_bisectmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_bisectmodule.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_datetimemodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_datetimemodule.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_randommodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_randommodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_contextvarsmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_contextvars.cpython-38-x86_64-linux-gnu.so
building '_heapq' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_heapqmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_heapqmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_bisectmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_bisect.cpython-38-x86_64-linux-gnu.so
building '_pickle' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_pickle.c -o build/temp.linux-x86_64-3.8/python/Modules/_pickle.o -DPy_BUILD_CORE_MODULE
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_randommodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_random.cpython-38-x86_64-linux-gnu.so
building '_json' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_json.c -o build/temp.linux-x86_64-3.8/python/Modules/_json.o -DPy_BUILD_CORE_MODULE
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_heapqmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_heapq.cpython-38-x86_64-linux-gnu.so
building '_lsprof' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_lsprof.c -o build/temp.linux-x86_64-3.8/python/Modules/_lsprof.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/rotatingtree.c -o build/temp.linux-x86_64-3.8/python/Modules/rotatingtree.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_lsprof.o build/temp.linux-x86_64-3.8/python/Modules/rotatingtree.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_lsprof.cpython-38-x86_64-linux-gnu.so
building 'unicodedata' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/unicodedata.c -o build/temp.linux-x86_64-3.8/python/Modules/unicodedata.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_struct.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_struct.cpython-38-x86_64-linux-gnu.so
building '_opcode' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_opcode.c -o build/temp.linux-x86_64-3.8/python/Modules/_opcode.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_opcode.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_opcode.cpython-38-x86_64-linux-gnu.so
building '_asyncio' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_asynciomodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_asynciomodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/mathmodule.o Modules/_math.o -L/usr/local/lib -lm -o build/lib.linux-x86_64-3.8/math.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/arraymodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/array.cpython-38-x86_64-linux-gnu.so
building '_queue' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_queuemodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_queuemodule.o
building '_statistics' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_statisticsmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_statisticsmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_statisticsmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_statistics.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_queuemodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_queue.cpython-38-x86_64-linux-gnu.so
building 'fcntl' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/fcntlmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/fcntlmodule.o
building 'grp' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/grpmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/grpmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_json.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_json.cpython-38-x86_64-linux-gnu.so
building 'spwd' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/spwdmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/spwdmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/grpmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/grp.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/spwdmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/spwd.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/fcntlmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/fcntl.cpython-38-x86_64-linux-gnu.so
building 'select' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/selectmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/selectmodule.o
building 'parser' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/parsermodule.c -o build/temp.linux-x86_64-3.8/python/Modules/parsermodule.o
building 'mmap' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/mmapmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/mmapmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/parsermodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/parser.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_asynciomodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_asyncio.cpython-38-x86_64-linux-gnu.so
building 'syslog' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/syslogmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/syslogmodule.o
building '_xxsubinterpreters' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_xxsubinterpretersmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_xxsubinterpretersmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/selectmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/select.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/mmapmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/mmap.cpython-38-x86_64-linux-gnu.so
building 'audioop' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/audioop.c -o build/temp.linux-x86_64-3.8/python/Modules/audioop.o
building '_csv' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_csv.c -o build/temp.linux-x86_64-3.8/python/Modules/_csv.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/syslogmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/syslog.cpython-38-x86_64-linux-gnu.so
building '_posixsubprocess' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_posixsubprocess.c -o build/temp.linux-x86_64-3.8/python/Modules/_posixsubprocess.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/unicodedata.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/unicodedata.cpython-38-x86_64-linux-gnu.so
building '_testcapi' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_testcapimodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_testcapimodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_datetimemodule.o -L/usr/local/lib -lm -o build/lib.linux-x86_64-3.8/_datetime.cpython-38-x86_64-linux-gnu.so
building '_testinternalcapi' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_testinternalcapi.c -o build/temp.linux-x86_64-3.8/python/Modules/_testinternalcapi.o -DPy_BUILD_CORE_MODULE
[91m/python/Modules/_testcapimodule.c: In function 'PyInit__testcapi':
[0m[91m/python/Modules/_testcapimodule.c:6308:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
 6308 |     MyList_Type.tp_print = 0;
      |     ^~~~~~~~~~~
[0m[91mIn file included from ./Include/object.h:746,
                 from ./Include/pytime.h:6,
                 from ./Include/Python.h:85,
                 from /python/Modules/_testcapimodule.c:15:
./Include/cpython/object.h:260:30: note: declared here
  260 |     Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
      |                              ^~~~~~~~
[0m[91m/python/Modules/_testcapimodule.c: In function 'test_buildvalue_issue38913':
[0m[91m/python/Modules/_testcapimodule.c:6443:15: warning: variable 'res' set but not used [-Wunused-but-set-variable]
 6443 |     PyObject *res;
      |               ^~~
[0mgcc -shared build/temp.linux-x86_64-3.8/python/Modules/_posixsubprocess.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_posixsubprocess.cpython-38-x86_64-linux-gnu.so
building '_testbuffer' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_testbuffer.c -o build/temp.linux-x86_64-3.8/python/Modules/_testbuffer.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_testinternalcapi.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_testinternalcapi.cpython-38-x86_64-linux-gnu.so
building '_testimportmultiple' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_testimportmultiple.c -o build/temp.linux-x86_64-3.8/python/Modules/_testimportmultiple.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_testimportmultiple.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_testimportmultiple.cpython-38-x86_64-linux-gnu.so
building '_testmultiphase' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_testmultiphase.c -o build/temp.linux-x86_64-3.8/python/Modules/_testmultiphase.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_xxsubinterpretersmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_xxsubinterpreters.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_csv.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_csv.cpython-38-x86_64-linux-gnu.so
building '_xxtestfuzz' extension
creating build/temp.linux-x86_64-3.8/python/Modules/_xxtestfuzz
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_xxtestfuzz/_xxtestfuzz.c -o build/temp.linux-x86_64-3.8/python/Modules/_xxtestfuzz/_xxtestfuzz.o
building 'readline' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/readline.c -o build/temp.linux-x86_64-3.8/python/Modules/readline.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_testmultiphase.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_testmultiphase.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_xxtestfuzz/fuzzer.c -o build/temp.linux-x86_64-3.8/python/Modules/_xxtestfuzz/fuzzer.o
building '_curses' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_NCURSESW=1 -I/usr/include/ncursesw -I./Include -I. -I/python/Include -I/python -c /python/Modules/_cursesmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_cursesmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_xxtestfuzz/_xxtestfuzz.o build/temp.linux-x86_64-3.8/python/Modules/_xxtestfuzz/fuzzer.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_xxtestfuzz.cpython-38-x86_64-linux-gnu.so
building '_curses_panel' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_NCURSESW=1 -I/usr/include/ncursesw -I./Include -I. -I/python/Include -I/python -c /python/Modules/_curses_panel.c -o build/temp.linux-x86_64-3.8/python/Modules/_curses_panel.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/readline.o -L/usr/lib/termcap -L/usr/local/lib -lreadline -o build/lib.linux-x86_64-3.8/readline.cpython-38-x86_64-linux-gnu.so
building '_crypt' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_cryptmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_cryptmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_cryptmodule.o -L/usr/local/lib -lcrypt -o build/lib.linux-x86_64-3.8/_crypt.cpython-38-x86_64-linux-gnu.so
building '_socket' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/socketmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/socketmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cmathmodule.o Modules/_math.o -L/usr/local/lib -lm -o build/lib.linux-x86_64-3.8/cmath.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_curses_panel.o -L/usr/local/lib -lpanelw -lncursesw -o build/lib.linux-x86_64-3.8/_curses_panel.cpython-38-x86_64-linux-gnu.so
building '_ssl' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_ssl.c -o build/temp.linux-x86_64-3.8/python/Modules/_ssl.o
building '_hashlib' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_hashopenssl.c -o build/temp.linux-x86_64-3.8/python/Modules/_hashopenssl.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_pickle.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_pickle.cpython-38-x86_64-linux-gnu.so
building '_sha256' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/sha256module.c -o build/temp.linux-x86_64-3.8/python/Modules/sha256module.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/audioop.o -L/usr/local/lib -lm -o build/lib.linux-x86_64-3.8/audioop.cpython-38-x86_64-linux-gnu.so
building '_sha512' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/sha512module.c -o build/temp.linux-x86_64-3.8/python/Modules/sha512module.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_testbuffer.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_testbuffer.cpython-38-x86_64-linux-gnu.so
building '_md5' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/md5module.c -o build/temp.linux-x86_64-3.8/python/Modules/md5module.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_hashopenssl.o -L/usr/local/lib -lssl -lcrypto -o build/lib.linux-x86_64-3.8/_hashlib.cpython-38-x86_64-linux-gnu.so
building '_sha1' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/sha1module.c -o build/temp.linux-x86_64-3.8/python/Modules/sha1module.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/md5module.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_md5.cpython-38-x86_64-linux-gnu.so
building '_blake2' extension
creating build/temp.linux-x86_64-3.8/python/Modules/_blake2
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_blake2/blake2module.c -o build/temp.linux-x86_64-3.8/python/Modules/_blake2/blake2module.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_blake2/blake2b_impl.c -o build/temp.linux-x86_64-3.8/python/Modules/_blake2/blake2b_impl.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/sha1module.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_sha1.cpython-38-x86_64-linux-gnu.so
building '_sha3' extension
creating build/temp.linux-x86_64-3.8/python/Modules/_sha3
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sha3/sha3module.c -o build/temp.linux-x86_64-3.8/python/Modules/_sha3/sha3module.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/sha256module.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_sha256.cpython-38-x86_64-linux-gnu.so
building '_dbm' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_NDBM_H -I./Include -I. -I/python/Include -I/python -c /python/Modules/_dbmmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_dbmmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_dbmmodule.o -L/usr/local/lib -lgdbm_compat -o build/lib.linux-x86_64-3.8/_dbm.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/sha512module.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_sha512.cpython-38-x86_64-linux-gnu.so
building '_gdbm' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_gdbmmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_gdbmmodule.o
building '_sqlite3' extension
creating build/temp.linux-x86_64-3.8/python/Modules/_sqlite
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/cache.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/cache.o
[91mIn function 'getsockaddrarg',
    inlined from 'sock_bind' at /python/Modules/socketmodule.c:3066:10:
[0m[91m/python/Modules/socketmodule.c:2288:9: warning: 'memset' offset [17, 88] from the object at 'addrbuf' is out of the bounds of referenced subobject 'sa' with type 'struct sockaddr' at offset 0 [-Warray-bounds]
 2288 |         memset(sa, 0, sizeof(*sa));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0mgcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/connection.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/connection.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_testcapimodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_testcapi.cpython-38-x86_64-linux-gnu.so
building 'termios' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/termios.c -o build/temp.linux-x86_64-3.8/python/Modules/termios.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_gdbmmodule.o -L/usr/local/lib -lgdbm -o build/lib.linux-x86_64-3.8/_gdbm.cpython-38-x86_64-linux-gnu.so
building 'resource' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/resource.c -o build/temp.linux-x86_64-3.8/python/Modules/resource.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/resource.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/resource.cpython-38-x86_64-linux-gnu.so
building 'ossaudiodev' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/ossaudiodev.c -o build/temp.linux-x86_64-3.8/python/Modules/ossaudiodev.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/termios.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/termios.cpython-38-x86_64-linux-gnu.so
building 'zlib' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/zlibmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/zlibmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_cursesmodule.o -L/usr/local/lib -lncursesw -o build/lib.linux-x86_64-3.8/_curses.cpython-38-x86_64-linux-gnu.so
building 'binascii' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/binascii.c -o build/temp.linux-x86_64-3.8/python/Modules/binascii.o -DUSE_ZLIB_CRC32
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_blake2/blake2s_impl.c -o build/temp.linux-x86_64-3.8/python/Modules/_blake2/blake2s_impl.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/socketmodule.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_socket.cpython-38-x86_64-linux-gnu.so
building '_lzma' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_lzmamodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_lzmamodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/ossaudiodev.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/ossaudiodev.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/cursor.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/cursor.o
building 'pyexpat' extension
creating build/temp.linux-x86_64-3.8/python/Modules/expat
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_EXPAT_CONFIG_H=1 -DXML_POOR_ENTROPY=1 -DUSE_PYEXPAT_CAPI -I/python/Modules/expat -I./Include -I. -I/python/Include -I/python -c /python/Modules/pyexpat.c -o build/temp.linux-x86_64-3.8/python/Modules/pyexpat.o -Wno-unreachable-code
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_ssl.o -L/usr/local/lib -lssl -lcrypto -o build/lib.linux-x86_64-3.8/_ssl.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_blake2/blake2module.o build/temp.linux-x86_64-3.8/python/Modules/_blake2/blake2b_impl.o build/temp.linux-x86_64-3.8/python/Modules/_blake2/blake2s_impl.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_blake2.cpython-38-x86_64-linux-gnu.so
building '_elementtree' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_EXPAT_CONFIG_H=1 -DXML_POOR_ENTROPY=1 -DUSE_PYEXPAT_CAPI -I/python/Modules/expat -I./Include -I. -I/python/Include -I/python -c /python/Modules/_elementtree.c -o build/temp.linux-x86_64-3.8/python/Modules/_elementtree.o
building '_multibytecodec' extension
creating build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cjkcodecs/multibytecodec.c -o build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/multibytecodec.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/microprotocols.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/microprotocols.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_lzmamodule.o -L/usr/local/lib -llzma -o build/lib.linux-x86_64-3.8/_lzma.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/module.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/module.o
building '_codecs_kr' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cjkcodecs/_codecs_kr.c -o build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_kr.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/binascii.o -L/usr/local/lib -lz -o build/lib.linux-x86_64-3.8/binascii.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/zlibmodule.o -L/usr/local/lib -lz -o build/lib.linux-x86_64-3.8/zlib.cpython-38-x86_64-linux-gnu.so
building '_codecs_jp' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cjkcodecs/_codecs_jp.c -o build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_jp.o
building '_codecs_cn' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cjkcodecs/_codecs_cn.c -o build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_cn.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/prepare_protocol.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/prepare_protocol.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/row.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/row.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/statement.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/statement.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_kr.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_codecs_kr.cpython-38-x86_64-linux-gnu.so
building '_codecs_tw' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cjkcodecs/_codecs_tw.c -o build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_tw.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/multibytecodec.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_multibytecodec.cpython-38-x86_64-linux-gnu.so
building '_codecs_hk' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cjkcodecs/_codecs_hk.c -o build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_hk.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DMODULE_NAME="sqlite3" -DSQLITE_OMIT_LOAD_EXTENSION=1 -IModules/_sqlite -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_sqlite/util.c -o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/util.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_cn.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_codecs_cn.cpython-38-x86_64-linux-gnu.so
building '_codecs_iso2022' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/cjkcodecs/_codecs_iso2022.c -o build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_iso2022.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_sqlite/cache.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/connection.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/cursor.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/microprotocols.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/module.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/prepare_protocol.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/row.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/statement.o build/temp.linux-x86_64-3.8/python/Modules/_sqlite/util.o -L/usr/local/lib -lsqlite3 -o build/lib.linux-x86_64-3.8/_sqlite3.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_tw.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_codecs_tw.cpython-38-x86_64-linux-gnu.so
building '_decimal' extension
creating build/temp.linux-x86_64-3.8/python/Modules/_decimal
creating build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/_decimal.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/_decimal.o
building '_ctypes_test' extension
creating build/temp.linux-x86_64-3.8/python/Modules/_ctypes
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I./Include -I. -I/python/Include -I/python -c /python/Modules/_ctypes/_ctypes_test.c -o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/_ctypes_test.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_jp.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_codecs_jp.cpython-38-x86_64-linux-gnu.so
building '_posixshmem' extension
creating build/temp.linux-x86_64-3.8/python/Modules/_multiprocessing
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -IModules/_multiprocessing -I./Include -I. -I/python/Include -I/python -c /python/Modules/_multiprocessing/posixshmem.c -o build/temp.linux-x86_64-3.8/python/Modules/_multiprocessing/posixshmem.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_ctypes/_ctypes_test.o -L/usr/local/lib -lm -o build/lib.linux-x86_64-3.8/_ctypes_test.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_multiprocessing/posixshmem.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_posixshmem.cpython-38-x86_64-linux-gnu.so
building '_multiprocessing' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -IModules/_multiprocessing -I./Include -I. -I/python/Include -I/python -c /python/Modules/_multiprocessing/multiprocessing.c -o build/temp.linux-x86_64-3.8/python/Modules/_multiprocessing/multiprocessing.o
building '_tkinter' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DWITH_APPINIT=1 -I/usr/X11/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_tkinter.c -o build/temp.linux-x86_64-3.8/python/Modules/_tkinter.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_hk.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_codecs_hk.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_EXPAT_CONFIG_H=1 -DXML_POOR_ENTROPY=1 -DUSE_PYEXPAT_CAPI -I/python/Modules/expat -I./Include -I. -I/python/Include -I/python -c /python/Modules/expat/xmlparse.c -o build/temp.linux-x86_64-3.8/python/Modules/expat/xmlparse.o -Wno-unreachable-code
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -IModules/_multiprocessing -I./Include -I. -I/python/Include -I/python -c /python/Modules/_multiprocessing/semaphore.c -o build/temp.linux-x86_64-3.8/python/Modules/_multiprocessing/semaphore.o
building '_uuid' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I/usr/include/uuid -I./Include -I. -I/python/Include -I/python -c /python/Modules/_uuidmodule.c -o build/temp.linux-x86_64-3.8/python/Modules/_uuidmodule.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_uuidmodule.o -L/usr/local/lib -luuid -o build/lib.linux-x86_64-3.8/_uuid.cpython-38-x86_64-linux-gnu.so
building 'xxlimited' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DPy_LIMITED_API=0x03050000 -I./Include -I. -I/python/Include -I/python -c /python/Modules/xxlimited.c -o build/temp.linux-x86_64-3.8/python/Modules/xxlimited.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_multiprocessing/multiprocessing.o build/temp.linux-x86_64-3.8/python/Modules/_multiprocessing/semaphore.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_multiprocessing.cpython-38-x86_64-linux-gnu.so
building '_ctypes' extension
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_ctypes/_ctypes.c -o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/_ctypes.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/cjkcodecs/_codecs_iso2022.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_codecs_iso2022.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/xxlimited.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/xxlimited.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_elementtree.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_elementtree.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DWITH_APPINIT=1 -I/usr/X11/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/tkappinit.c -o build/temp.linux-x86_64-3.8/python/Modules/tkappinit.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_tkinter.o build/temp.linux-x86_64-3.8/python/Modules/tkappinit.o -L/usr/X11/lib -L/usr/local/lib -ltk8.6 -ltcl8.6 -lX11 -o build/lib.linux-x86_64-3.8/_tkinter.cpython-38-x86_64-linux-gnu.so
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_sha3/sha3module.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/_sha3.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_ctypes/callbacks.c -o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/callbacks.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_ctypes/callproc.c -o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/callproc.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_ctypes/stgdict.c -o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/stgdict.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -I/usr/include -I./Include -I. -I/python/Include -I/python -c /python/Modules/_ctypes/cfield.c -o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/cfield.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_EXPAT_CONFIG_H=1 -DXML_POOR_ENTROPY=1 -DUSE_PYEXPAT_CAPI -I/python/Modules/expat -I./Include -I. -I/python/Include -I/python -c /python/Modules/expat/xmlrole.c -o build/temp.linux-x86_64-3.8/python/Modules/expat/xmlrole.o -Wno-unreachable-code
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DHAVE_EXPAT_CONFIG_H=1 -DXML_POOR_ENTROPY=1 -DUSE_PYEXPAT_CAPI -I/python/Modules/expat -I./Include -I. -I/python/Include -I/python -c /python/Modules/expat/xmltok.c -o build/temp.linux-x86_64-3.8/python/Modules/expat/xmltok.o -Wno-unreachable-code
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_ctypes/_ctypes.o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/callbacks.o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/callproc.o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/stgdict.o build/temp.linux-x86_64-3.8/python/Modules/_ctypes/cfield.o -L/usr/local/lib -lffi -ldl -o build/lib.linux-x86_64-3.8/_ctypes.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/basearith.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/basearith.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/constants.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/constants.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/context.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/context.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/convolute.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/convolute.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/crt.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/crt.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/difradix2.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/difradix2.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/fnt.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/fnt.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/fourstep.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/fourstep.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/io.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/io.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/pyexpat.o build/temp.linux-x86_64-3.8/python/Modules/expat/xmlparse.o build/temp.linux-x86_64-3.8/python/Modules/expat/xmlrole.o build/temp.linux-x86_64-3.8/python/Modules/expat/xmltok.o -L/usr/local/lib -o build/lib.linux-x86_64-3.8/pyexpat.cpython-38-x86_64-linux-gnu.so
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/memory.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/memory.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/mpdecimal.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/mpdecimal.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/numbertheory.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/numbertheory.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/sixstep.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/sixstep.o
gcc -fPIC -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Werror=implicit-function-declaration -I./Include/internal -DCONFIG_64=1 -DASM=1 -I/python/Modules/_decimal/libmpdec -I./Include -I. -I/python/Include -I/python -c /python/Modules/_decimal/libmpdec/transpose.c -o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/transpose.o
gcc -shared build/temp.linux-x86_64-3.8/python/Modules/_decimal/_decimal.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/basearith.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/constants.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/context.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/convolute.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/crt.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/difradix2.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/fnt.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/fourstep.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/io.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/memory.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/mpdecimal.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/numbertheory.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/sixstep.o build/temp.linux-x86_64-3.8/python/Modules/_decimal/libmpdec/transpose.o -L/usr/local/lib -lm -o build/lib.linux-x86_64-3.8/_decimal.cpython-38-x86_64-linux-gnu.so

Python build finished successfully!
The necessary bits to build these optional modules were not found:
_bz2                  nis                                      
To find the necessary bits, look in setup.py in detect_modules() for the module's name.


The following modules found by detect_modules() in setup.py, have been
built by the Makefile instead, as configured by the Setup files:
_abc                  atexit                pwd                
time                                                           

running build_scripts
creating build/scripts-3.8
copying and adjusting /python/Tools/scripts/pydoc3 -> build/scripts-3.8
copying and adjusting /python/Tools/scripts/idle3 -> build/scripts-3.8
copying and adjusting /python/Tools/scripts/2to3 -> build/scripts-3.8
changing mode of build/scripts-3.8/pydoc3 from 644 to 755
changing mode of build/scripts-3.8/idle3 from 644 to 755
changing mode of build/scripts-3.8/2to3 from 644 to 755
renaming build/scripts-3.8/pydoc3 to build/scripts-3.8/pydoc3.8
renaming build/scripts-3.8/idle3 to build/scripts-3.8/idle3.8
renaming build/scripts-3.8/2to3 to build/scripts-3.8/2to3-3.8
Removing intermediate container bd422452ac3f
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Running in 573dfb76f54d
 CC='gcc' LDSHARED='gcc -shared    ' OPT='-DNDEBUG -g -fwrapv -O3 -Wall' 	_TCLTK_INCLUDES='' _TCLTK_LIBS='' 	./python -E ./setup.py  build
if test "no-framework" = "no-framework" ; then \
	/usr/bin/install -c python /usr/local/bin/python3.8; \
else \
	/usr/bin/install -c -s Mac/pythonw /usr/local/bin/python3.8; \
fi
Creating directory /usr/local/include
Creating directory /usr/local/lib/python3.8
Creating directory /usr/local/share/man
Creating directory /usr/local/include/python3.8
Creating directory /usr/local/lib/python3.8/lib-dynload
Creating directory /usr/local/share/man/man1
Creating directory /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Misc/python.man \
	/usr/local/share/man/man1/python3.8.1
rm -f /usr/local/share/man/man1/python3.1
Creating directory /usr/local/include/python3.8/internal
(cd /usr/local/share/man/man1; ln -s python3.8.1 python3.1)
/usr/bin/install -c -m 644 ./Include/Python-ast.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/Python.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/abstract.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/asdl.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/ast.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/bitset.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/bltinmodule.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/boolobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/bytearrayobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/bytes_methods.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/bytesobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/cellobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/ceval.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/classobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/code.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/codecs.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/compile.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/complexobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/context.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/datetime.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/descrobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/dictobject.h /usr/local/include/python3.8
if test "3.8" != "3.8"; then \
	if test -f /usr/local/bin/python3.8 -o -h /usr/local/bin/python3.8; \
	then rm -f /usr/local/bin/python3.8; \
	fi; \
	(cd /usr/local/bin; ln python3.8 python3.8); \
fi
/usr/bin/install -c -m 644 ./Include/dtoa.h /usr/local/include/python3.8
if test -f libpython3.8.a && test "no-framework" = "no-framework" ; then \
	if test -n "" ; then \
		/usr/bin/install -c -m 755  /usr/local/bin; \
	else \
		/usr/bin/install -c -m 755 libpython3.8.a /usr/local/lib/libpython3.8.a; \
		if test libpython3.8.a != libpython3.8.a; then \
			(cd /usr/local/lib; ln -sf libpython3.8.a libpython3.8.a) \
		fi \
	fi; \
	if test -n ""; then \
		/usr/bin/install -c -m 755  /usr/local/lib/; \
	fi; \
else	true; \
fi
/usr/bin/install -c -m 644 ./Include/dynamic_annotations.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/enumobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/errcode.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/eval.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/fileobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/fileutils.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/floatobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/frameobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/funcobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/genobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/graminit.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/grammar.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/import.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/interpreteridobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/intrcheck.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/iterobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/listobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/longintrepr.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/longobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/marshal.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/memoryobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/methodobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/modsupport.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/moduleobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/namespaceobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/node.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/object.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/objimpl.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/odictobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/opcode.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/osdefs.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/osmodule.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/parsetok.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/patchlevel.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/picklebufobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/py_curses.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/pyarena.h /usr/local/include/python3.8
if test "x" != "x" ; then \
	rm -f /usr/local/binpython3.8-32; \
	lipo  \
		-output /usr/local/bin/python3.8-32 \
		/usr/local/bin/python3.8; \
fi
/usr/bin/install -c -m 644 ./Include/pycapsule.h /usr/local/include/python3.8
if test ! -d /usr/local/lib/pkgconfig; then \
	echo "Creating directory /usr/local/lib/pkgconfig"; \
	/usr/bin/install -c -d -m 755 /usr/local/lib/pkgconfig; \
fi
/usr/bin/install -c -m 644 ./Include/pyctype.h /usr/local/include/python3.8
Creating directory /usr/local/lib/pkgconfig
if test -f /usr/local/bin/python3 -o -h /usr/local/bin/python3; \
then rm -f /usr/local/bin/python3; \
else true; \
fi
/usr/bin/install -c -m 644 ./Include/pydebug.h /usr/local/include/python3.8
(cd /usr/local/bin; ln -s python3.8 python3)
/usr/bin/install -c -m 644 ./Include/pydtrace.h /usr/local/include/python3.8
if test "3.8" != "3.8"; then \
	rm -f /usr/local/bin/python3.8-config; \
	(cd /usr/local/bin; ln -s python3.8-config python3.8-config); \
	rm -f /usr/local/lib/pkgconfig/python-3.8.pc; \
	(cd /usr/local/lib/pkgconfig; ln -s python-3.8.pc python-3.8.pc); \
	rm -f /usr/local/lib/pkgconfig/python-3.8-embed.pc; \
	(cd /usr/local/lib/pkgconfig; ln -s python-3.8-embed.pc python-3.8-embed.pc); \
fi
/usr/bin/install -c -m 644 ./Include/pyerrors.h /usr/local/include/python3.8
rm -f /usr/local/bin/python3-config
/usr/bin/install -c -m 644 ./Include/pyexpat.h /usr/local/include/python3.8
(cd /usr/local/bin; ln -s python3.8-config python3-config)
/usr/bin/install -c -m 644 ./Include/pyfpe.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/pyhash.h /usr/local/include/python3.8
rm -f /usr/local/lib/pkgconfig/python3.pc
(cd /usr/local/lib/pkgconfig; ln -s python-3.8.pc python3.pc)
/usr/bin/install -c -m 644 ./Include/pylifecycle.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/pymacconfig.h /usr/local/include/python3.8
rm -f /usr/local/lib/pkgconfig/python3-embed.pc
(cd /usr/local/lib/pkgconfig; ln -s python-3.8-embed.pc python3-embed.pc)
/usr/bin/install -c -m 644 ./Include/pymacro.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/pymath.h /usr/local/include/python3.8
rm -f /usr/local/bin/idle3
(cd /usr/local/bin; ln -s idle3.8 idle3)
/usr/bin/install -c -m 644 ./Include/pymem.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/pyport.h /usr/local/include/python3.8
rm -f /usr/local/bin/pydoc3
/usr/bin/install -c -m 644 ./Include/pystate.h /usr/local/include/python3.8
(cd /usr/local/bin; ln -s pydoc3.8 pydoc3)
/usr/bin/install -c -m 644 ./Include/pystrcmp.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/pystrhex.h /usr/local/include/python3.8
rm -f /usr/local/bin/2to3
/usr/bin/install -c -m 644 ./Include/pystrtod.h /usr/local/include/python3.8
(cd /usr/local/bin; ln -s 2to3-3.8 2to3)
/usr/bin/install -c -m 644 ./Include/pythonrun.h /usr/local/include/python3.8
if test "x" != "x" ; then \
	rm -f /usr/local/bin/python3-32; \
	(cd /usr/local/bin; ln -s python3.8-32 python3-32) \
fi
/usr/bin/install -c -m 644 ./Include/pythread.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/pytime.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/rangeobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/setobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/sliceobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/structmember.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/structseq.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/symtable.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/sysmodule.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/token.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/traceback.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/tracemalloc.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/tupleobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/typeslots.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/ucnhash.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/unicodeobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/warnings.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/weakrefobject.h /usr/local/include/python3.8
/usr/bin/install -c -m 644 ./Include/cpython/abstract.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/dictobject.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/fileobject.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/initconfig.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/interpreteridobject.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/object.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/objimpl.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/pyerrors.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/pylifecycle.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/pymem.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/pystate.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/sysmodule.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/traceback.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/tupleobject.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/cpython/unicodeobject.h /usr/local/include/python3.8/cpython
/usr/bin/install -c -m 644 ./Include/internal/pycore_accu.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_atomic.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_ceval.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_code.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_condvar.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_context.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_fileutils.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_getopt.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_gil.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_hamt.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_initconfig.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_object.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_pathconfig.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_pyerrors.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_pyhash.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_pylifecycle.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_pymem.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_pystate.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_traceback.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_tupleobject.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 ./Include/internal/pycore_warnings.h /usr/local/include/python3.8/internal
/usr/bin/install -c -m 644 pyconfig.h /usr/local/include/python3.8/pyconfig.h
running build
running build_ext

Python build finished successfully!
The necessary bits to build these optional modules were not found:
_bz2                  nis                                      
To find the necessary bits, look in setup.py in detect_modules() for the module's name.


The following modules found by detect_modules() in setup.py, have been
built by the Makefile instead, as configured by the Setup files:
_abc                  atexit                pwd                
time                                                           

running build_scripts
copying and adjusting /python/Tools/scripts/pydoc3 -> build/scripts-3.8
copying and adjusting /python/Tools/scripts/idle3 -> build/scripts-3.8
copying and adjusting /python/Tools/scripts/2to3 -> build/scripts-3.8
changing mode of build/scripts-3.8/pydoc3 from 644 to 755
changing mode of build/scripts-3.8/idle3 from 644 to 755
changing mode of build/scripts-3.8/2to3 from 644 to 755
renaming build/scripts-3.8/pydoc3 to build/scripts-3.8/pydoc3.8
renaming build/scripts-3.8/idle3 to build/scripts-3.8/idle3.8
renaming build/scripts-3.8/2to3 to build/scripts-3.8/2to3-3.8
Creating directory /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu
./python -E ./setup.py install \
   	--prefix=/usr/local \
	--install-scripts=/usr/local/bin \
	--install-platlib=/usr/local/lib/python3.8/lib-dynload \
	--root=/
Creating directory /usr/local/lib/python3.8/tkinter
Creating directory /usr/local/lib/python3.8/tkinter/test
Creating directory /usr/local/lib/python3.8/tkinter/test/test_tkinter
Creating directory /usr/local/lib/python3.8/tkinter/test/test_ttk
Creating directory /usr/local/lib/python3.8/site-packages
Creating directory /usr/local/lib/python3.8/test
Creating directory /usr/local/lib/python3.8/test/audiodata
Creating directory /usr/local/lib/python3.8/test/capath
Creating directory /usr/local/lib/python3.8/test/data
Creating directory /usr/local/lib/python3.8/test/cjkencodings
Creating directory /usr/local/lib/python3.8/test/decimaltestdata
Creating directory /usr/local/lib/python3.8/test/xmltestdata
Creating directory /usr/local/lib/python3.8/test/xmltestdata/c14n-20
Creating directory /usr/local/lib/python3.8/test/dtracedata
Creating directory /usr/local/lib/python3.8/test/eintrdata
Creating directory /usr/local/lib/python3.8/test/imghdrdata
Creating directory /usr/local/lib/python3.8/test/libregrtest
Creating directory /usr/local/lib/python3.8/test/subprocessdata
Creating directory /usr/local/lib/python3.8/test/sndhdrdata
Creating directory /usr/local/lib/python3.8/test/support
Creating directory /usr/local/lib/python3.8/test/tracedmodules
Creating directory /usr/local/lib/python3.8/test/encoded_modules
Creating directory /usr/local/lib/python3.8/test/test_import
Creating directory /usr/local/lib/python3.8/test/test_import/data
Creating directory /usr/local/lib/python3.8/test/test_import/data/circular_imports
Creating directory /usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg
Creating directory /usr/local/lib/python3.8/test/test_import/data/package
Creating directory /usr/local/lib/python3.8/test/test_import/data/package2
Creating directory /usr/local/lib/python3.8/importlib
Creating directory /usr/local/lib/python3.8/test/test_importlib
Creating directory /usr/local/lib/python3.8/test/test_importlib/builtin
Creating directory /usr/local/lib/python3.8/test/test_importlib/data
Creating directory /usr/local/lib/python3.8/test/test_importlib/data01
/usr/bin/install -c -m 644 Modules/config.c /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/config.c
Creating directory /usr/local/lib/python3.8/test/test_importlib/data01/subdirectory
/usr/bin/install -c -m 644 Programs/python.o /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/python.o
/usr/bin/install -c -m 644 ./Modules/config.c.in /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/config.c.in
Creating directory /usr/local/lib/python3.8/test/test_importlib/data02
/usr/bin/install -c -m 644 Makefile /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/Makefile
Creating directory /usr/local/lib/python3.8/test/test_importlib/data02/one
/usr/bin/install -c -m 644 ./Modules/Setup /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/Setup
Creating directory /usr/local/lib/python3.8/test/test_importlib/data02/two
/usr/bin/install -c -m 644 Modules/Setup.local /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/Setup.local
/usr/bin/install -c -m 644 Misc/python.pc /usr/local/lib/pkgconfig/python-3.8.pc
Creating directory /usr/local/lib/python3.8/test/test_importlib/data03
/usr/bin/install -c -m 644 Misc/python-embed.pc /usr/local/lib/pkgconfig/python-3.8-embed.pc
Creating directory /usr/local/lib/python3.8/test/test_importlib/data03/namespace
/usr/bin/install -c ./Modules/makesetup /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/makesetup
Creating directory /usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1
/usr/bin/install -c ./install-sh /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/install-sh
Creating directory /usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2
/usr/bin/install -c python-config.py /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/python-config.py
/usr/bin/install -c python-config /usr/local/bin/python3.8-config
Creating directory /usr/local/lib/python3.8/test/test_importlib/extension
Creating directory /usr/local/lib/python3.8/test/test_importlib/frozen
Creating directory /usr/local/lib/python3.8/test/test_importlib/import_
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent
Creating directory /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child
Creating directory /usr/local/lib/python3.8/test/test_importlib/source
Creating directory /usr/local/lib/python3.8/test/test_importlib/zipdata01
Creating directory /usr/local/lib/python3.8/test/test_importlib/zipdata02
Creating directory /usr/local/lib/python3.8/test/ziptestdata
Creating directory /usr/local/lib/python3.8/asyncio
Creating directory /usr/local/lib/python3.8/test/test_asyncio
Creating directory /usr/local/lib/python3.8/collections
Creating directory /usr/local/lib/python3.8/concurrent
Creating directory /usr/local/lib/python3.8/concurrent/futures
Creating directory /usr/local/lib/python3.8/encodings
Creating directory /usr/local/lib/python3.8/email
Creating directory /usr/local/lib/python3.8/email/mime
Creating directory /usr/local/lib/python3.8/test/test_email
Creating directory /usr/local/lib/python3.8/test/test_email/data
Creating directory /usr/local/lib/python3.8/ensurepip
Creating directory /usr/local/lib/python3.8/ensurepip/_bundled
Creating directory /usr/local/lib/python3.8/html
Creating directory /usr/local/lib/python3.8/json
Creating directory /usr/local/lib/python3.8/test/test_json
Creating directory /usr/local/lib/python3.8/http
Creating directory /usr/local/lib/python3.8/dbm
Creating directory /usr/local/lib/python3.8/xmlrpc
Creating directory /usr/local/lib/python3.8/sqlite3
Creating directory /usr/local/lib/python3.8/sqlite3/test
Creating directory /usr/local/lib/python3.8/logging
Creating directory /usr/local/lib/python3.8/wsgiref
Creating directory /usr/local/lib/python3.8/urllib
Creating directory /usr/local/lib/python3.8/lib2to3
Creating directory /usr/local/lib/python3.8/lib2to3/fixes
Creating directory /usr/local/lib/python3.8/lib2to3/pgen2
Creating directory /usr/local/lib/python3.8/lib2to3/tests
Creating directory /usr/local/lib/python3.8/lib2to3/tests/data
Creating directory /usr/local/lib/python3.8/lib2to3/tests/data/fixers
Creating directory /usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes
Creating directory /usr/local/lib/python3.8/ctypes
Creating directory /usr/local/lib/python3.8/ctypes/test
Creating directory /usr/local/lib/python3.8/ctypes/macholib
Creating directory /usr/local/lib/python3.8/idlelib
Creating directory /usr/local/lib/python3.8/idlelib/Icons
Creating directory /usr/local/lib/python3.8/idlelib/idle_test
Creating directory /usr/local/lib/python3.8/distutils
Creating directory /usr/local/lib/python3.8/distutils/command
Creating directory /usr/local/lib/python3.8/distutils/tests
Creating directory /usr/local/lib/python3.8/xml
Creating directory /usr/local/lib/python3.8/xml/dom
Creating directory /usr/local/lib/python3.8/xml/etree
Creating directory /usr/local/lib/python3.8/xml/parsers
Creating directory /usr/local/lib/python3.8/xml/sax
Creating directory /usr/local/lib/python3.8/test/test_tools
Creating directory /usr/local/lib/python3.8/test/test_warnings
Creating directory /usr/local/lib/python3.8/test/test_warnings/data
Creating directory /usr/local/lib/python3.8/turtledemo
Creating directory /usr/local/lib/python3.8/multiprocessing
Creating directory /usr/local/lib/python3.8/multiprocessing/dummy
Creating directory /usr/local/lib/python3.8/unittest
Creating directory /usr/local/lib/python3.8/unittest/test
Creating directory /usr/local/lib/python3.8/unittest/test/testmock
Creating directory /usr/local/lib/python3.8/venv
Creating directory /usr/local/lib/python3.8/venv/scripts
Creating directory /usr/local/lib/python3.8/venv/scripts/common
Creating directory /usr/local/lib/python3.8/venv/scripts/posix
Creating directory /usr/local/lib/python3.8/curses
Creating directory /usr/local/lib/python3.8/pydoc_data
/usr/bin/install -c ./Lib/__future__.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/__phello__.foo.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_bootlocale.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_collections_abc.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_compat_pickle.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_compression.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_dummy_thread.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_markupbase.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_osx_support.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_py_abc.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_pydecimal.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_pyio.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_sitebuiltins.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_strptime.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/_threading_local.py /usr/local/lib/python3.8
running install
/usr/bin/install -c ./Lib/_weakrefset.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/abc.py /usr/local/lib/python3.8
running build
running build_ext
/usr/bin/install -c ./Lib/aifc.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/antigravity.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/argparse.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/ast.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/asynchat.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/asyncore.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/base64.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/bdb.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/binhex.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/bisect.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/bz2.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/cProfile.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/calendar.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/cgi.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/cgitb.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/chunk.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/cmd.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/code.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/codecs.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/codeop.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/colorsys.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/compileall.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/configparser.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/contextlib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/contextvars.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/copy.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/copyreg.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/crypt.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/csv.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/dataclasses.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/datetime.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/decimal.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/difflib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/dis.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/doctest.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/dummy_threading.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/enum.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/filecmp.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/fileinput.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/fnmatch.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/formatter.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/fractions.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/ftplib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/functools.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/genericpath.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/getopt.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/getpass.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/gettext.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/glob.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/gzip.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/hashlib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/heapq.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/hmac.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/imaplib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/imghdr.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/imp.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/inspect.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/io.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/ipaddress.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/keyword.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/linecache.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/locale.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/lzma.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/mailbox.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/mailcap.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/mimetypes.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/modulefinder.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/netrc.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/nntplib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/ntpath.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/nturl2path.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/numbers.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/opcode.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/operator.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/optparse.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/os.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pathlib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pdb.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pickle.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pickletools.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pipes.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pkgutil.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/platform.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/plistlib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/poplib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/posixpath.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pprint.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/profile.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pstats.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pty.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/py_compile.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pyclbr.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/pydoc.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/queue.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/quopri.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/random.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/re.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/reprlib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/rlcompleter.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/runpy.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/sched.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/secrets.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/selectors.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/shelve.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/shlex.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/shutil.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/signal.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/site.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/smtpd.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/smtplib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/sndhdr.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/socket.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/socketserver.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/sre_compile.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/sre_constants.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/sre_parse.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/ssl.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/stat.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/statistics.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/string.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/stringprep.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/struct.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/subprocess.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/sunau.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/symbol.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/symtable.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/sysconfig.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/tabnanny.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/tarfile.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/telnetlib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/tempfile.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/textwrap.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/this.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/threading.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/timeit.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/token.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/tokenize.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/trace.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/traceback.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/tracemalloc.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/tty.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/turtle.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/types.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/typing.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/uu.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/uuid.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/warnings.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/wave.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/weakref.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/webbrowser.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/xdrlib.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/zipapp.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/zipfile.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/zipimport.py /usr/local/lib/python3.8
/usr/bin/install -c ./Lib/tkinter/__init__.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/__main__.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/colorchooser.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/commondialog.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/constants.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/dialog.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/dnd.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/filedialog.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/font.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/messagebox.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/scrolledtext.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/simpledialog.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/tix.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/ttk.py /usr/local/lib/python3.8/tkinter
/usr/bin/install -c ./Lib/tkinter/test/README /usr/local/lib/python3.8/tkinter/test
/usr/bin/install -c ./Lib/tkinter/test/__init__.py /usr/local/lib/python3.8/tkinter/test
/usr/bin/install -c ./Lib/tkinter/test/runtktests.py /usr/local/lib/python3.8/tkinter/test
/usr/bin/install -c ./Lib/tkinter/test/support.py /usr/local/lib/python3.8/tkinter/test
/usr/bin/install -c ./Lib/tkinter/test/widget_tests.py /usr/local/lib/python3.8/tkinter/test
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/__init__.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_font.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_geometry_managers.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_images.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_loadtk.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_misc.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_text.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_variables.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_tkinter/test_widgets.py /usr/local/lib/python3.8/tkinter/test/test_tkinter
/usr/bin/install -c ./Lib/tkinter/test/test_ttk/__init__.py /usr/local/lib/python3.8/tkinter/test/test_ttk
/usr/bin/install -c ./Lib/tkinter/test/test_ttk/test_extensions.py /usr/local/lib/python3.8/tkinter/test/test_ttk
/usr/bin/install -c ./Lib/tkinter/test/test_ttk/test_functions.py /usr/local/lib/python3.8/tkinter/test/test_ttk
/usr/bin/install -c ./Lib/tkinter/test/test_ttk/test_style.py /usr/local/lib/python3.8/tkinter/test/test_ttk
/usr/bin/install -c ./Lib/tkinter/test/test_ttk/test_widgets.py /usr/local/lib/python3.8/tkinter/test/test_ttk
/usr/bin/install -c ./Lib/site-packages/README.txt /usr/local/lib/python3.8/site-packages
/usr/bin/install -c ./Lib/test/Sine-1000Hz-300ms.aif /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/__init__.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/__main__.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/_test_multiprocessing.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/allsans.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ann_module.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ann_module2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ann_module3.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/audiotest.au /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/audiotests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/audit-tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/autotest.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/bad_coding.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/bad_coding2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/bad_getattr.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/bad_getattr2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/bad_getattr3.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badcert.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badkey.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_3131.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future10.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future3.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future4.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future5.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future6.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future7.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future8.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_future9.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/badsyntax_pep3120.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/bisect_cmd.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/bytecode_helper.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/cfgparser.1 /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/cfgparser.2 /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/cfgparser.3 /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/clinic.test /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/cmath_testcases.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/coding20731.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/curses_tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/dataclass_module_1.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/dataclass_module_1_str.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/dataclass_module_2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/dataclass_module_2_str.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/dataclass_textanno.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/datetimetester.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/dis_module.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/doctest_aliases.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/double_const.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/empty.vbs /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/exception_hierarchy.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ffdh3072.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/final_a.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/final_b.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/floating_points.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/fork_wait.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/formatfloat_testcases.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/future_test1.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/future_test2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/gdb_sample.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/good_getattr.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/idnsans.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ieee754.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/imp_dummy.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/inspect_fodder.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/inspect_fodder2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/keycert.passwd.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/keycert.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/keycert2.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/keycert3.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/keycert4.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/keycertecc.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/list_tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/lock_tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/mailcap.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/make_ssl_certs.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/mapping_tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/math_testcases.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/memory_watchdog.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/mime.types /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/mock_socket.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/mod_generics_cache.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/mp_fork_bomb.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/mp_preload.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/multibytecodec_support.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/nokia.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/nullbytecert.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/nullcert.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/outstanding_bugs.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pickletester.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/profilee.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pstats.pck /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pycacert.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pycakey.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pyclbr_input.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pydoc_mod.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pydocfodder.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/pythoninfo.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/randv2_32.pck /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/randv2_64.pck /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/randv3.pck /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/re_tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/recursion.tar /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/regrtest.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/relimport.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/reperf.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/revocation.crl /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/sample_doctest.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/sample_doctest_no_docstrings.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/sample_doctest_no_doctests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/secp384r1.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/selfsigned_pythontestdotnet.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/seq_tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/sgml_input.html /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/signalinterproctester.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/sortperf.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ssl_cert.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ssl_key.passwd.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ssl_key.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ssl_servers.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/ssltests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/string_tests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/talos-2019-0758.pem /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test___all__.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test___future__.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test__locale.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test__opcode.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test__osx_support.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test__xxsubinterpreters.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_abc.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_abstract_numbers.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_aifc.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_argparse.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_array.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_asdl_parser.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ast.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_asyncgen.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_asynchat.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_asyncore.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_atexit.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_audioop.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_audit.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_augassign.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_base64.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_baseexception.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bdb.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bigaddrspace.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bigmem.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_binascii.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_binhex.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_binop.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bisect.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bool.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_buffer.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bufio.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_builtin.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bytes.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_bz2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_c_locale_coercion.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_calendar.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_call.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_capi.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_cgi.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_cgitb.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_charmapcodec.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_class.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_clinic.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_cmath.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_cmd.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_cmd_line.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_cmd_line_script.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_code.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_code_module.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_codeccallbacks.py /usr/local/lib/python3.8/test

Python build finished successfully!
The necessary bits to build these optional modules were not found:
_bz2                  nis                                      
To find the necessary bits, look in setup.py in detect_modules() for the module's name.


The following modules found by detect_modules() in setup.py, have been
built by the Makefile instead, as configured by the Setup files:
_abc                  atexit                pwd                
time                                                           

running build_scripts
copying and adjusting /python/Tools/scripts/pydoc3 -> build/scripts-3.8
copying and adjusting /python/Tools/scripts/idle3 -> build/scripts-3.8
/usr/bin/install -c ./Lib/test/test_codecencodings_cn.py /usr/local/lib/python3.8/test
copying and adjusting /python/Tools/scripts/2to3 -> build/scripts-3.8
changing mode of build/scripts-3.8/pydoc3 from 644 to 755
changing mode of build/scripts-3.8/idle3 from 644 to 755
changing mode of build/scripts-3.8/2to3 from 644 to 755
renaming build/scripts-3.8/pydoc3 to build/scripts-3.8/pydoc3.8
renaming build/scripts-3.8/idle3 to build/scripts-3.8/idle3.8
renaming build/scripts-3.8/2to3 to build/scripts-3.8/2to3-3.8
running install_lib
/usr/bin/install -c ./Lib/test/test_codecencodings_hk.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_opcode.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecencodings_iso2022.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_md5.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_multibytecodec.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecencodings_jp.py /usr/local/lib/python3.8/test
creating /usr/local/lib/python3.8/lib-dynload/__pycache__
copying build/lib.linux-x86_64-3.8/__pycache__/_sysconfigdata__linux_x86_64-linux-gnu.cpython-38.pyc -> /usr/local/lib/python3.8/lib-dynload/__pycache__
/usr/bin/install -c ./Lib/test/test_codecencodings_kr.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_sqlite3.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecencodings_tw.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_hashlib.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecmaps_cn.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_codecmaps_hk.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_bisect.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecmaps_jp.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_curses_panel.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_ssl.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecmaps_kr.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/array.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecmaps_tw.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_socket.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codecs.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_crypt.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_multiprocessing.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_ctypes_test.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_elementtree.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_codeop.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_collections.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/grp.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_dbm.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_colorsys.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_codecs_hk.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_asyncio.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_compare.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_queue.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_compile.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_contextvars.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_gdbm.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_sha3.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_compileall.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_complex.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_codecs_iso2022.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_testimportmultiple.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_posixsubprocess.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_concurrent_futures.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/mmap.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_configparser.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/resource.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/unicodedata.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_contains.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_context.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/binascii.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_contextlib.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/readline.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_contextlib_async.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/ossaudiodev.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/cmath.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_copy.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_sha1.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_copyreg.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/zlib.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/audioop.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_coroutines.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_pickle.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_cprofile.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_csv.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_crashers.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/select.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/fcntl.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_crypt.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/parser.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_codecs_cn.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_csv.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_sha256.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/math.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_ctypes.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_curses.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/termios.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_heapq.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dataclasses.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_xxsubinterpreters.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_datetime.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_curses.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dbm.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_codecs_jp.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dbm_dumb.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_sha512.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dbm_gnu.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_testbuffer.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/xxlimited.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dbm_ndbm.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_codecs_tw.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_decimal.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_posixshmem.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_xxtestfuzz.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_codecs_kr.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_decorators.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_lzma.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_defaultdict.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/spwd.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_lsprof.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_deque.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_blake2.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_descr.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_tkinter.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_descrtut.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/syslog.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_statistics.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_devpoll.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_json.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_testinternalcapi.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_struct.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dict.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_testmultiphase.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dict_version.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_uuid.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_ctypes.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_dictcomps.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_dictviews.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_random.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
copying build/lib.linux-x86_64-3.8/_decimal.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_difflib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_difflib_expect.html /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_dis.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_distutils.py /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_datetime.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_doctest.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_doctest.txt /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_testcapi.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_doctest2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_doctest2.txt /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/pyexpat.cpython-38-x86_64-linux-gnu.so -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_doctest3.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_doctest4.txt /usr/local/lib/python3.8/test
copying build/lib.linux-x86_64-3.8/_sysconfigdata__linux_x86_64-linux-gnu.py -> /usr/local/lib/python3.8/lib-dynload
/usr/bin/install -c ./Lib/test/test_docxmlrpc.py /usr/local/lib/python3.8/test
changing mode of /usr/local/lib/python3.8/lib-dynload/_opcode.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_md5.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_multibytecodec.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/__pycache__/_sysconfigdata__linux_x86_64-linux-gnu.cpython-38.pyc to 644
changing mode of /usr/local/lib/python3.8/lib-dynload/_sqlite3.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_hashlib.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_bisect.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_curses_panel.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_ssl.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/array.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_socket.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_crypt.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_multiprocessing.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_ctypes_test.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_elementtree.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/grp.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_dbm.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_codecs_hk.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_asyncio.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_queue.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_contextvars.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_gdbm.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_sha3.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_codecs_iso2022.cpython-38-x86_64-linux-gnu.so to 755
/usr/bin/install -c ./Lib/test/test_dtrace.py /usr/local/lib/python3.8/test
changing mode of /usr/local/lib/python3.8/lib-dynload/_testimportmultiple.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_posixsubprocess.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/mmap.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/resource.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/unicodedata.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/binascii.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/readline.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/ossaudiodev.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/cmath.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_sha1.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/zlib.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/audioop.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_pickle.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_csv.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/select.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/fcntl.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/parser.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_codecs_cn.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_sha256.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/termios.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_heapq.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_xxsubinterpreters.cpython-38-x86_64-linux-gnu.so to 755
/usr/bin/install -c ./Lib/test/test_dummy_thread.py /usr/local/lib/python3.8/test
changing mode of /usr/local/lib/python3.8/lib-dynload/_curses.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_codecs_jp.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_sha512.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_testbuffer.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/xxlimited.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_codecs_tw.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_posixshmem.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_xxtestfuzz.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_codecs_kr.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_lzma.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/spwd.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_lsprof.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_blake2.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_tkinter.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/syslog.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_statistics.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_json.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_testinternalcapi.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_struct.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_testmultiphase.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_uuid.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_ctypes.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_random.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_decimal.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_datetime.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_testcapi.cpython-38-x86_64-linux-gnu.so to 755
/usr/bin/install -c ./Lib/test/test_dummy_threading.py /usr/local/lib/python3.8/test
changing mode of /usr/local/lib/python3.8/lib-dynload/pyexpat.cpython-38-x86_64-linux-gnu.so to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/_sysconfigdata__linux_x86_64-linux-gnu.py to 644
changing mode of /usr/local/lib/python3.8/lib-dynload/ to 755
changing mode of /usr/local/lib/python3.8/lib-dynload/__pycache__ to 755
running install_scripts
/usr/bin/install -c ./Lib/test/test_dynamic.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_dynamicclassattribute.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_eintr.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_embed.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ensurepip.py /usr/local/lib/python3.8/test
copying build/scripts-3.8/idle3.8 -> /usr/local/bin
/usr/bin/install -c ./Lib/test/test_enum.py /usr/local/lib/python3.8/test
copying build/scripts-3.8/2to3-3.8 -> /usr/local/bin
copying build/scripts-3.8/pydoc3.8 -> /usr/local/bin
changing mode of /usr/local/bin/idle3.8 to 755
changing mode of /usr/local/bin/2to3-3.8 to 755
changing mode of /usr/local/bin/pydoc3.8 to 755
/usr/bin/install -c ./Lib/test/test_enumerate.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_eof.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_epoll.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_errno.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_exception_hierarchy.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_exception_variations.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_exceptions.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_extcall.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_faulthandler.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_fcntl.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_file.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_file_eintr.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_filecmp.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_fileinput.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_fileio.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_finalization.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_float.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_flufl.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_fnmatch.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_fork1.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_format.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_fractions.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_frame.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_frozen.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_fstring.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ftplib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_funcattrs.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_functools.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_future.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_future3.py /usr/local/lib/python3.8/test
rm /usr/local/lib/python3.8/lib-dynload/_sysconfigdata__linux_x86_64-linux-gnu.py
/usr/bin/install -c ./Lib/test/test_future4.py /usr/local/lib/python3.8/test
rm -r /usr/local/lib/python3.8/lib-dynload/__pycache__
/usr/bin/install -c ./Lib/test/test_future5.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_gc.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_gdb.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_generator_stop.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_generators.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_genericclass.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_genericpath.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_genexps.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_getargs2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_getopt.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_getpass.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_gettext.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_glob.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_global.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_grammar.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_grp.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_gzip.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_hash.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_hashlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_heapq.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_hmac.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_html.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_htmlparser.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_http_cookiejar.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_http_cookies.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_httplib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_httpservers.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_idle.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_imaplib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_imghdr.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_imp.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_index.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_inspect.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_int.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_int_literal.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_io.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ioctl.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ipaddress.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_isinstance.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_iter.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_iterlen.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_itertools.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_keyword.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_keywordonlyarg.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_kqueue.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_largefile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_lib2to3.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_linecache.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_list.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_listcomps.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_lltrace.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_locale.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_logging.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_long.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_longexp.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_lzma.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_mailbox.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_mailcap.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_marshal.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_math.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_memoryio.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_memoryview.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_metaclass.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_mimetypes.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_minidom.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_mmap.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_module.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_modulefinder.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_msilib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_multibytecodec.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_multiprocessing_fork.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_multiprocessing_forkserver.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_multiprocessing_main_handling.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_multiprocessing_spawn.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_named_expressions.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_netrc.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_nis.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_nntplib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_normalization.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ntpath.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_numeric_tower.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_opcodes.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_openpty.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_operator.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_optparse.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ordered_dict.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_os.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ossaudiodev.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_osx_env.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_parser.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pathlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pdb.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_peepholer.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pickle.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_picklebuffer.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pickletools.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pipes.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pkg.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pkgimport.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pkgutil.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_platform.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_plistlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_poll.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_popen.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_poplib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_positional_only_arg.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_posix.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_posixpath.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pow.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pprint.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_print.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_profile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_property.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pstats.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pty.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pulldom.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pwd.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_py_compile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pyclbr.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pydoc.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_pyexpat.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_queue.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_quopri.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_raise.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_random.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_range.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_re.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_readline.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_regrtest.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_repl.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_reprlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_resource.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_richcmp.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_rlcompleter.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_robotparser.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_runpy.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sax.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sched.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_scope.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_script_helper.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_secrets.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_select.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_selectors.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_set.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_setcomps.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_shelve.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_shlex.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_shutil.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_signal.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_site.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_slice.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_smtpd.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_smtplib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_smtpnet.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sndhdr.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_socket.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_socketserver.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sort.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_source_encoding.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_spwd.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sqlite.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ssl.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_startfile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_stat.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_statistics.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_strftime.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_string.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_string_literals.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_stringprep.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_strptime.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_strtod.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_struct.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_structmembers.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_structseq.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_subclassinit.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_subprocess.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sunau.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sundry.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_super.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_support.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_symbol.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_symtable.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_syntax.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sys.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sys_setprofile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sys_settrace.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_sysconfig.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_syslog.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tabnanny.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tarfile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tcl.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_telnetlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tempfile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_textwrap.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_thread.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_threaded_import.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_threadedtempfile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_threading.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_threading_local.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_threadsignals.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_time.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_timeit.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_timeout.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tix.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tk.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tokenize.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_trace.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_traceback.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tracemalloc.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ttk_guionly.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ttk_textonly.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_tuple.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_turtle.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_type_comments.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_typechecks.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_types.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_typing.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_ucn.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unary.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unicode.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unicode_file.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unicode_file_functions.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unicode_identifiers.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unicodedata.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unittest.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_univnewlines.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unpack.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_unpack_ex.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_urllib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_urllib2.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_urllib2_localnet.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_urllib2net.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_urllib_response.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_urllibnet.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_urlparse.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_userdict.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_userlist.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_userstring.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_utf8_mode.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_utf8source.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_uu.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_uuid.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_venv.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_wait3.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_wait4.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_wave.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_weakref.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_weakset.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_webbrowser.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_winconsoleio.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_winreg.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_winsound.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_with.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_wsgiref.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_xdrlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_xml_dom_minicompat.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_xml_etree.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_xml_etree_c.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_xmlrpc.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_xmlrpc_net.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_xxtestfuzz.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_yield_from.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_zipapp.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_zipfile.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_zipfile64.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_zipimport.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_zipimport_support.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/test_zlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/testcodec.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/testtar.tar /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/tf_inherit_check.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/threaded_import_hangers.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/time_hashlib.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/tokenize_tests-latin1-coding-cookie-and-utf8-bom-sig.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/tokenize_tests-no-coding-cookie-and-utf8-bom-sig-only.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/tokenize_tests-utf8-coding-cookie-and-no-utf8-bom-sig.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/tokenize_tests-utf8-coding-cookie-and-utf8-bom-sig.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/tokenize_tests.txt /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/win_console_handler.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/xmltests.py /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/zip_cp437_header.zip /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/zipdir.zip /usr/local/lib/python3.8/test
/usr/bin/install -c ./Lib/test/audiodata/pluck-alaw.aifc /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm16.aiff /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm16.au /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm16.wav /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm24.aiff /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm24.au /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm24.wav /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm32.aiff /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm32.au /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm32.wav /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm8.aiff /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm8.au /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-pcm8.wav /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-ulaw.aifc /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/audiodata/pluck-ulaw.au /usr/local/lib/python3.8/test/audiodata
/usr/bin/install -c ./Lib/test/capath/4e1295a3.0 /usr/local/lib/python3.8/test/capath
/usr/bin/install -c ./Lib/test/capath/5ed36f99.0 /usr/local/lib/python3.8/test/capath
/usr/bin/install -c ./Lib/test/capath/6e88d7b8.0 /usr/local/lib/python3.8/test/capath
/usr/bin/install -c ./Lib/test/capath/99d0fa06.0 /usr/local/lib/python3.8/test/capath
/usr/bin/install -c ./Lib/test/capath/b1930218.0 /usr/local/lib/python3.8/test/capath
/usr/bin/install -c ./Lib/test/capath/ceff1710.0 /usr/local/lib/python3.8/test/capath
/usr/bin/install -c ./Lib/test/data/README /usr/local/lib/python3.8/test/data
/usr/bin/install -c ./Lib/test/cjkencodings/big5-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/big5.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/big5hkscs-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/big5hkscs.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/cp949-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/cp949.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/euc_jisx0213-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/euc_jisx0213.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/euc_jp-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/euc_jp.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/euc_kr-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/euc_kr.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/gb18030-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/gb18030.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/gb2312-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/gb2312.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/gbk-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/gbk.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/hz-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/hz.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/iso2022_jp-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/iso2022_jp.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/iso2022_kr-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/iso2022_kr.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/johab-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/johab.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/shift_jis-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/shift_jis.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/shift_jisx0213-utf8.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/cjkencodings/shift_jisx0213.txt /usr/local/lib/python3.8/test/cjkencodings
/usr/bin/install -c ./Lib/test/decimaltestdata/abs.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/add.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/and.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/base.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/clamp.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/class.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/compare.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/comparetotal.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/comparetotmag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/copy.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/copyabs.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/copynegate.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/copysign.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddAbs.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddAdd.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddAnd.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddBase.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCanonical.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddClass.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCompare.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCompareSig.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCompareTotal.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCompareTotalMag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCopy.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCopyAbs.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCopyNegate.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddCopySign.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddDivide.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddDivideInt.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddEncode.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddFMA.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddInvert.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddLogB.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddMax.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddMaxMag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddMin.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddMinMag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddMinus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddMultiply.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddNextMinus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddNextPlus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddNextToward.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddOr.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddPlus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddQuantize.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddReduce.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddRemainder.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddRemainderNear.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddRotate.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddSameQuantum.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddScaleB.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddShift.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddSubtract.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddToIntegral.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ddXor.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/decDouble.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/decQuad.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/decSingle.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/divide.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/divideint.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqAbs.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqAdd.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqAnd.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqBase.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCanonical.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqClass.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCompare.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCompareSig.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCompareTotal.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCompareTotalMag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCopy.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCopyAbs.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCopyNegate.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqCopySign.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqDivide.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqDivideInt.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqEncode.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqFMA.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqInvert.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqLogB.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqMax.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqMaxMag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqMin.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqMinMag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqMinus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqMultiply.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqNextMinus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqNextPlus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqNextToward.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqOr.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqPlus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqQuantize.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqReduce.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqRemainder.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqRemainderNear.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqRotate.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqSameQuantum.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqScaleB.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqShift.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqSubtract.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqToIntegral.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dqXor.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dsBase.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/dsEncode.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/exp.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/extra.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/fma.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/inexact.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/invert.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/ln.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/log10.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/logb.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/max.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/maxmag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/min.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/minmag.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/minus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/multiply.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/nextminus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/nextplus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/nexttoward.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/or.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/plus.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/power.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/powersqrt.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/quantize.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/randomBound32.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/randoms.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/reduce.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/remainder.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/remainderNear.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/rescale.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/rotate.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/rounding.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/samequantum.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/scaleb.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/shift.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/squareroot.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/subtract.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/testall.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/tointegral.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/tointegralx.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/decimaltestdata/xor.decTest /usr/local/lib/python3.8/test/decimaltestdata
/usr/bin/install -c ./Lib/test/xmltestdata/expat224_utf8_bug.xml /usr/local/lib/python3.8/test/xmltestdata
/usr/bin/install -c ./Lib/test/xmltestdata/simple-ns.xml /usr/local/lib/python3.8/test/xmltestdata
/usr/bin/install -c ./Lib/test/xmltestdata/simple.xml /usr/local/lib/python3.8/test/xmltestdata
/usr/bin/install -c ./Lib/test/xmltestdata/test.xml /usr/local/lib/python3.8/test/xmltestdata
/usr/bin/install -c ./Lib/test/xmltestdata/test.xml.out /usr/local/lib/python3.8/test/xmltestdata
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/README /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nComment.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nPrefixQname.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nPrefixQnameXpathElem.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nQname.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nQnameElem.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nQnameXpathElem.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/c14nTrim.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/doc.dtd /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/doc.xsl /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inC14N1.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inC14N2.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inC14N3.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inC14N4.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inC14N5.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inC14N6.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inNsContent.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inNsDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inNsPushdown.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inNsRedecl.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inNsSort.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inNsSuperfluous.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/inNsXml.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N1_c14nComment.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N1_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N2_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N2_c14nTrim.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N3_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N3_c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N3_c14nTrim.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N4_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N4_c14nTrim.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N5_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N5_c14nTrim.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inC14N6_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nPrefixQnameXpathElem.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nQnameElem.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsContent_c14nQnameXpathElem.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsDefault_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsDefault_c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsPushdown_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsPushdown_c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsRedecl_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsRedecl_c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsSort_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsSort_c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsSuperfluous_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsSuperfluous_c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nDefault.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nPrefix.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nPrefixQname.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/out_inNsXml_c14nQname.xml /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/xmltestdata/c14n-20/world.txt /usr/local/lib/python3.8/test/xmltestdata/c14n-20
/usr/bin/install -c ./Lib/test/dtracedata/assert_usable.d /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/assert_usable.stp /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/call_stack.d /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/call_stack.d.expected /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/call_stack.py /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/call_stack.stp /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/call_stack.stp.expected /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/gc.d /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/gc.d.expected /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/gc.py /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/gc.stp /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/gc.stp.expected /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/instance.py /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/line.d /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/line.d.expected /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/dtracedata/line.py /usr/local/lib/python3.8/test/dtracedata
/usr/bin/install -c ./Lib/test/eintrdata/eintr_tester.py /usr/local/lib/python3.8/test/eintrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.bmp /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.exr /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.gif /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.jpg /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.pbm /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.pgm /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.png /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.ppm /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.ras /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.sgi /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.tiff /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.webp /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/imghdrdata/python.xbm /usr/local/lib/python3.8/test/imghdrdata
/usr/bin/install -c ./Lib/test/libregrtest/__init__.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/cmdline.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/main.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/pgo.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/refleak.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/runtest.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/runtest_mp.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/save_env.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/setup.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/utils.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/libregrtest/win_utils.py /usr/local/lib/python3.8/test/libregrtest
/usr/bin/install -c ./Lib/test/subprocessdata/fd_status.py /usr/local/lib/python3.8/test/subprocessdata
/usr/bin/install -c ./Lib/test/subprocessdata/input_reader.py /usr/local/lib/python3.8/test/subprocessdata
/usr/bin/install -c ./Lib/test/subprocessdata/qcat.py /usr/local/lib/python3.8/test/subprocessdata
/usr/bin/install -c ./Lib/test/subprocessdata/qgrep.py /usr/local/lib/python3.8/test/subprocessdata
/usr/bin/install -c ./Lib/test/subprocessdata/sigchild_ignore.py /usr/local/lib/python3.8/test/subprocessdata
/usr/bin/install -c ./Lib/test/sndhdrdata/README /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.8svx /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.aifc /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.aiff /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.au /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.hcom /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.sndt /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.voc /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/sndhdrdata/sndhdr.wav /usr/local/lib/python3.8/test/sndhdrdata
/usr/bin/install -c ./Lib/test/support/__init__.py /usr/local/lib/python3.8/test/support
/usr/bin/install -c ./Lib/test/support/script_helper.py /usr/local/lib/python3.8/test/support
/usr/bin/install -c ./Lib/test/support/testresult.py /usr/local/lib/python3.8/test/support
/usr/bin/install -c ./Lib/test/tracedmodules/__init__.py /usr/local/lib/python3.8/test/tracedmodules
/usr/bin/install -c ./Lib/test/tracedmodules/testmod.py /usr/local/lib/python3.8/test/tracedmodules
/usr/bin/install -c ./Lib/test/encoded_modules/__init__.py /usr/local/lib/python3.8/test/encoded_modules
/usr/bin/install -c ./Lib/test/encoded_modules/module_iso_8859_1.py /usr/local/lib/python3.8/test/encoded_modules
/usr/bin/install -c ./Lib/test/encoded_modules/module_koi8_r.py /usr/local/lib/python3.8/test/encoded_modules
/usr/bin/install -c ./Lib/test/test_import/__init__.py /usr/local/lib/python3.8/test/test_import
/usr/bin/install -c ./Lib/test/test_import/__main__.py /usr/local/lib/python3.8/test/test_import
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/basic.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/basic2.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/binding.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/binding2.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/from_cycle1.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/from_cycle2.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/indirect.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/rebinding.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/rebinding2.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/source.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/subpackage.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/use.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/util.py /usr/local/lib/python3.8/test/test_import/data/circular_imports
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/subpkg/subpackage2.py /usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg
/usr/bin/install -c ./Lib/test/test_import/data/circular_imports/subpkg/util.py /usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg
/usr/bin/install -c ./Lib/test/test_import/data/package/__init__.py /usr/local/lib/python3.8/test/test_import/data/package
/usr/bin/install -c ./Lib/test/test_import/data/package/submodule.py /usr/local/lib/python3.8/test/test_import/data/package
/usr/bin/install -c ./Lib/test/test_import/data/package2/submodule1.py /usr/local/lib/python3.8/test/test_import/data/package2
/usr/bin/install -c ./Lib/test/test_import/data/package2/submodule2.py /usr/local/lib/python3.8/test/test_import/data/package2
/usr/bin/install -c ./Lib/importlib/__init__.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/importlib/_bootstrap.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/importlib/_bootstrap_external.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/importlib/abc.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/importlib/machinery.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/importlib/metadata.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/importlib/resources.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/importlib/util.py /usr/local/lib/python3.8/importlib
/usr/bin/install -c ./Lib/test/test_importlib/__init__.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/__main__.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/abc.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/fixtures.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/stubs.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_abc.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_api.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_lazy.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_locks.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_main.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_metadata_api.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_namespace_pkgs.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_open.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_path.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_read.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_resource.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_spec.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_util.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_windows.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/test_zip.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/util.py /usr/local/lib/python3.8/test/test_importlib
/usr/bin/install -c ./Lib/test/test_importlib/builtin/__init__.py /usr/local/lib/python3.8/test/test_importlib/builtin
/usr/bin/install -c ./Lib/test/test_importlib/builtin/__main__.py /usr/local/lib/python3.8/test/test_importlib/builtin
/usr/bin/install -c ./Lib/test/test_importlib/builtin/test_finder.py /usr/local/lib/python3.8/test/test_importlib/builtin
/usr/bin/install -c ./Lib/test/test_importlib/builtin/test_loader.py /usr/local/lib/python3.8/test/test_importlib/builtin
/usr/bin/install -c ./Lib/test/test_importlib/data/__init__.py /usr/local/lib/python3.8/test/test_importlib/data
/usr/bin/install -c ./Lib/test/test_importlib/data/example-21.12-py3-none-any.whl /usr/local/lib/python3.8/test/test_importlib/data
/usr/bin/install -c ./Lib/test/test_importlib/data/example-21.12-py3.6.egg /usr/local/lib/python3.8/test/test_importlib/data
/usr/bin/install -c ./Lib/test/test_importlib/data01/__init__.py /usr/local/lib/python3.8/test/test_importlib/data01
/usr/bin/install -c ./Lib/test/test_importlib/data01/binary.file /usr/local/lib/python3.8/test/test_importlib/data01
/usr/bin/install -c ./Lib/test/test_importlib/data01/utf-16.file /usr/local/lib/python3.8/test/test_importlib/data01
/usr/bin/install -c ./Lib/test/test_importlib/data01/utf-8.file /usr/local/lib/python3.8/test/test_importlib/data01
/usr/bin/install -c ./Lib/test/test_importlib/data01/subdirectory/__init__.py /usr/local/lib/python3.8/test/test_importlib/data01/subdirectory
/usr/bin/install -c ./Lib/test/test_importlib/data01/subdirectory/binary.file /usr/local/lib/python3.8/test/test_importlib/data01/subdirectory
/usr/bin/install -c ./Lib/test/test_importlib/data02/__init__.py /usr/local/lib/python3.8/test/test_importlib/data02
/usr/bin/install -c ./Lib/test/test_importlib/data02/one/__init__.py /usr/local/lib/python3.8/test/test_importlib/data02/one
/usr/bin/install -c ./Lib/test/test_importlib/data02/one/resource1.txt /usr/local/lib/python3.8/test/test_importlib/data02/one
/usr/bin/install -c ./Lib/test/test_importlib/data02/two/__init__.py /usr/local/lib/python3.8/test/test_importlib/data02/two
/usr/bin/install -c ./Lib/test/test_importlib/data02/two/resource2.txt /usr/local/lib/python3.8/test/test_importlib/data02/two
/usr/bin/install -c ./Lib/test/test_importlib/data03/__init__.py /usr/local/lib/python3.8/test/test_importlib/data03
/usr/bin/install -c ./Lib/test/test_importlib/data03/namespace/resource1.txt /usr/local/lib/python3.8/test/test_importlib/data03/namespace
/usr/bin/install -c ./Lib/test/test_importlib/data03/namespace/portion1/__init__.py /usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1
/usr/bin/install -c ./Lib/test/test_importlib/data03/namespace/portion2/__init__.py /usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2
/usr/bin/install -c ./Lib/test/test_importlib/extension/__init__.py /usr/local/lib/python3.8/test/test_importlib/extension
/usr/bin/install -c ./Lib/test/test_importlib/extension/__main__.py /usr/local/lib/python3.8/test/test_importlib/extension
/usr/bin/install -c ./Lib/test/test_importlib/extension/test_case_sensitivity.py /usr/local/lib/python3.8/test/test_importlib/extension
/usr/bin/install -c ./Lib/test/test_importlib/extension/test_finder.py /usr/local/lib/python3.8/test/test_importlib/extension
/usr/bin/install -c ./Lib/test/test_importlib/extension/test_loader.py /usr/local/lib/python3.8/test/test_importlib/extension
/usr/bin/install -c ./Lib/test/test_importlib/extension/test_path_hook.py /usr/local/lib/python3.8/test/test_importlib/extension
/usr/bin/install -c ./Lib/test/test_importlib/frozen/__init__.py /usr/local/lib/python3.8/test/test_importlib/frozen
/usr/bin/install -c ./Lib/test/test_importlib/frozen/__main__.py /usr/local/lib/python3.8/test/test_importlib/frozen
/usr/bin/install -c ./Lib/test/test_importlib/frozen/test_finder.py /usr/local/lib/python3.8/test/test_importlib/frozen
/usr/bin/install -c ./Lib/test/test_importlib/frozen/test_loader.py /usr/local/lib/python3.8/test/test_importlib/frozen
/usr/bin/install -c ./Lib/test/test_importlib/import_/__init__.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/__main__.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test___loader__.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test___package__.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test_api.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test_caching.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test_fromlist.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test_meta_path.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test_packages.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test_path.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/import_/test_relative_imports.py /usr/local/lib/python3.8/test/test_importlib/import_
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/missing_directory.zip /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/nested_portion1.zip /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/top_level_portion1.zip /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/both_portions/foo/one.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/both_portions/foo/two.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test/empty /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/__init__.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/one.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/portion1/foo/one.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/portion2/foo/two.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/project1/parent/child/one.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/project2/parent/child/two.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child
/usr/bin/install -c ./Lib/test/test_importlib/namespace_pkgs/project3/parent/child/three.py /usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child
/usr/bin/install -c ./Lib/test/test_importlib/source/__init__.py /usr/local/lib/python3.8/test/test_importlib/source
/usr/bin/install -c ./Lib/test/test_importlib/source/__main__.py /usr/local/lib/python3.8/test/test_importlib/source
/usr/bin/install -c ./Lib/test/test_importlib/source/test_case_sensitivity.py /usr/local/lib/python3.8/test/test_importlib/source
/usr/bin/install -c ./Lib/test/test_importlib/source/test_file_loader.py /usr/local/lib/python3.8/test/test_importlib/source
/usr/bin/install -c ./Lib/test/test_importlib/source/test_finder.py /usr/local/lib/python3.8/test/test_importlib/source
/usr/bin/install -c ./Lib/test/test_importlib/source/test_path_hook.py /usr/local/lib/python3.8/test/test_importlib/source
/usr/bin/install -c ./Lib/test/test_importlib/source/test_source_encoding.py /usr/local/lib/python3.8/test/test_importlib/source
/usr/bin/install -c ./Lib/test/test_importlib/zipdata01/__init__.py /usr/local/lib/python3.8/test/test_importlib/zipdata01
/usr/bin/install -c ./Lib/test/test_importlib/zipdata01/ziptestdata.zip /usr/local/lib/python3.8/test/test_importlib/zipdata01
/usr/bin/install -c ./Lib/test/test_importlib/zipdata02/__init__.py /usr/local/lib/python3.8/test/test_importlib/zipdata02
/usr/bin/install -c ./Lib/test/test_importlib/zipdata02/ziptestdata.zip /usr/local/lib/python3.8/test/test_importlib/zipdata02
/usr/bin/install -c ./Lib/test/ziptestdata/README.md /usr/local/lib/python3.8/test/ziptestdata
/usr/bin/install -c ./Lib/test/ziptestdata/exe_with_z64 /usr/local/lib/python3.8/test/ziptestdata
/usr/bin/install -c ./Lib/test/ziptestdata/exe_with_zip /usr/local/lib/python3.8/test/ziptestdata
/usr/bin/install -c ./Lib/test/ziptestdata/header.sh /usr/local/lib/python3.8/test/ziptestdata
/usr/bin/install -c ./Lib/test/ziptestdata/testdata_module_inside_zip.py /usr/local/lib/python3.8/test/ziptestdata
/usr/bin/install -c ./Lib/asyncio/__init__.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/__main__.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/base_events.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/base_futures.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/base_subprocess.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/base_tasks.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/constants.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/coroutines.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/events.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/exceptions.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/format_helpers.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/futures.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/locks.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/log.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/proactor_events.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/protocols.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/queues.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/runners.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/selector_events.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/sslproto.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/staggered.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/streams.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/subprocess.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/tasks.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/transports.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/trsock.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/unix_events.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/windows_events.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/asyncio/windows_utils.py /usr/local/lib/python3.8/asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/__init__.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/__main__.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/echo.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/echo2.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/echo3.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/functional.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_base_events.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_buffered_proto.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_context.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_events.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_futures.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_locks.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_pep492.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_proactor_events.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_protocols.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_queues.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_runners.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_selector_events.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_sendfile.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_server.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_sock_lowlevel.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_sslproto.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_streams.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_subprocess.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_tasks.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_transports.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_unix_events.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_windows_events.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/test_windows_utils.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/test/test_asyncio/utils.py /usr/local/lib/python3.8/test/test_asyncio
/usr/bin/install -c ./Lib/collections/__init__.py /usr/local/lib/python3.8/collections
/usr/bin/install -c ./Lib/collections/abc.py /usr/local/lib/python3.8/collections
/usr/bin/install -c ./Lib/concurrent/__init__.py /usr/local/lib/python3.8/concurrent
/usr/bin/install -c ./Lib/concurrent/futures/__init__.py /usr/local/lib/python3.8/concurrent/futures
/usr/bin/install -c ./Lib/concurrent/futures/_base.py /usr/local/lib/python3.8/concurrent/futures
/usr/bin/install -c ./Lib/concurrent/futures/process.py /usr/local/lib/python3.8/concurrent/futures
/usr/bin/install -c ./Lib/concurrent/futures/thread.py /usr/local/lib/python3.8/concurrent/futures
/usr/bin/install -c ./Lib/encodings/__init__.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/aliases.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/ascii.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/base64_codec.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/big5.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/big5hkscs.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/bz2_codec.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/charmap.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp037.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1006.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1026.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1125.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1140.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1250.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1251.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1252.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1253.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1254.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1255.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1256.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1257.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp1258.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp273.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp424.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp437.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp500.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp720.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp737.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp775.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp850.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp852.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp855.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp856.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp857.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp858.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp860.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp861.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp862.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp863.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp864.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp865.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp866.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp869.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp874.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp875.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp932.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp949.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/cp950.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/euc_jis_2004.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/euc_jisx0213.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/euc_jp.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/euc_kr.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/gb18030.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/gb2312.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/gbk.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/hex_codec.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/hp_roman8.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/hz.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/idna.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso2022_jp.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso2022_jp_1.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso2022_jp_2.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso2022_jp_2004.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso2022_jp_3.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso2022_jp_ext.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso2022_kr.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_1.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_10.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_11.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_13.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_14.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_15.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_16.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_2.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_3.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_4.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_5.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_6.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_7.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_8.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/iso8859_9.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/johab.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/koi8_r.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/koi8_t.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/koi8_u.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/kz1048.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/latin_1.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_arabic.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_centeuro.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_croatian.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_cyrillic.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_farsi.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_greek.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_iceland.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_latin2.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_roman.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_romanian.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mac_turkish.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/mbcs.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/oem.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/palmos.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/ptcp154.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/punycode.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/quopri_codec.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/raw_unicode_escape.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/rot_13.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/shift_jis.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/shift_jis_2004.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/shift_jisx0213.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/tis_620.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/undefined.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/unicode_escape.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_16.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_16_be.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_16_le.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_32.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_32_be.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_32_le.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_7.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_8.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/utf_8_sig.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/uu_codec.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/encodings/zlib_codec.py /usr/local/lib/python3.8/encodings
/usr/bin/install -c ./Lib/email/__init__.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/_encoded_words.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/_header_value_parser.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/_parseaddr.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/_policybase.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/architecture.rst /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/base64mime.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/charset.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/contentmanager.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/encoders.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/errors.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/feedparser.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/generator.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/header.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/headerregistry.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/iterators.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/message.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/parser.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/policy.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/quoprimime.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/utils.py /usr/local/lib/python3.8/email
/usr/bin/install -c ./Lib/email/mime/__init__.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/application.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/audio.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/base.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/image.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/message.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/multipart.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/nonmultipart.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/email/mime/text.py /usr/local/lib/python3.8/email/mime
/usr/bin/install -c ./Lib/test/test_email/__init__.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/__main__.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test__encoded_words.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test__header_value_parser.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_asian_codecs.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_contentmanager.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_defect_handling.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_email.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_generator.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_headerregistry.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_inversion.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_message.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_parser.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_pickleable.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_policy.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/test_utils.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/torture_test.py /usr/local/lib/python3.8/test/test_email
/usr/bin/install -c ./Lib/test/test_email/data/PyBanner048.gif /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/audiotest.au /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_01.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_02.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_03.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_04.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_05.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_06.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_07.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_08.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_09.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_10.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_11.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_12.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_12a.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_13.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_14.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_15.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_16.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_17.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_18.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_19.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_20.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_21.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_22.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_23.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_24.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_25.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_26.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_27.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_28.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_29.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_30.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_31.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_32.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_33.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_34.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_35.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_36.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_37.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_38.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_39.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_40.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_41.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_42.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_43.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_44.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_45.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/test/test_email/data/msg_46.txt /usr/local/lib/python3.8/test/test_email/data
/usr/bin/install -c ./Lib/ensurepip/__init__.py /usr/local/lib/python3.8/ensurepip
/usr/bin/install -c ./Lib/ensurepip/__main__.py /usr/local/lib/python3.8/ensurepip
/usr/bin/install -c ./Lib/ensurepip/_uninstall.py /usr/local/lib/python3.8/ensurepip
/usr/bin/install -c ./Lib/ensurepip/_bundled/pip-20.1.1-py2.py3-none-any.whl /usr/local/lib/python3.8/ensurepip/_bundled
/usr/bin/install -c ./Lib/ensurepip/_bundled/setuptools-47.1.0-py3-none-any.whl /usr/local/lib/python3.8/ensurepip/_bundled
/usr/bin/install -c ./Lib/html/__init__.py /usr/local/lib/python3.8/html
/usr/bin/install -c ./Lib/html/entities.py /usr/local/lib/python3.8/html
/usr/bin/install -c ./Lib/html/parser.py /usr/local/lib/python3.8/html
/usr/bin/install -c ./Lib/json/__init__.py /usr/local/lib/python3.8/json
/usr/bin/install -c ./Lib/json/decoder.py /usr/local/lib/python3.8/json
/usr/bin/install -c ./Lib/json/encoder.py /usr/local/lib/python3.8/json
/usr/bin/install -c ./Lib/json/scanner.py /usr/local/lib/python3.8/json
/usr/bin/install -c ./Lib/json/tool.py /usr/local/lib/python3.8/json
/usr/bin/install -c ./Lib/test/test_json/__init__.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/__main__.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_decode.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_default.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_dump.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_encode_basestring_ascii.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_enum.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_fail.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_float.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_indent.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_pass1.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_pass2.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_pass3.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_recursion.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_scanstring.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_separators.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_speedups.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_tool.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/test/test_json/test_unicode.py /usr/local/lib/python3.8/test/test_json
/usr/bin/install -c ./Lib/http/__init__.py /usr/local/lib/python3.8/http
/usr/bin/install -c ./Lib/http/client.py /usr/local/lib/python3.8/http
/usr/bin/install -c ./Lib/http/cookiejar.py /usr/local/lib/python3.8/http
/usr/bin/install -c ./Lib/http/cookies.py /usr/local/lib/python3.8/http
/usr/bin/install -c ./Lib/http/server.py /usr/local/lib/python3.8/http
/usr/bin/install -c ./Lib/dbm/__init__.py /usr/local/lib/python3.8/dbm
/usr/bin/install -c ./Lib/dbm/dumb.py /usr/local/lib/python3.8/dbm
/usr/bin/install -c ./Lib/dbm/gnu.py /usr/local/lib/python3.8/dbm
/usr/bin/install -c ./Lib/dbm/ndbm.py /usr/local/lib/python3.8/dbm
/usr/bin/install -c ./Lib/xmlrpc/__init__.py /usr/local/lib/python3.8/xmlrpc
/usr/bin/install -c ./Lib/xmlrpc/client.py /usr/local/lib/python3.8/xmlrpc
/usr/bin/install -c ./Lib/xmlrpc/server.py /usr/local/lib/python3.8/xmlrpc
/usr/bin/install -c ./Lib/sqlite3/__init__.py /usr/local/lib/python3.8/sqlite3
/usr/bin/install -c ./Lib/sqlite3/dbapi2.py /usr/local/lib/python3.8/sqlite3
/usr/bin/install -c ./Lib/sqlite3/dump.py /usr/local/lib/python3.8/sqlite3
/usr/bin/install -c ./Lib/sqlite3/test/__init__.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/backup.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/dbapi.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/dump.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/factory.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/hooks.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/regression.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/transactions.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/types.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/sqlite3/test/userfunctions.py /usr/local/lib/python3.8/sqlite3/test
/usr/bin/install -c ./Lib/logging/__init__.py /usr/local/lib/python3.8/logging
/usr/bin/install -c ./Lib/logging/config.py /usr/local/lib/python3.8/logging
/usr/bin/install -c ./Lib/logging/handlers.py /usr/local/lib/python3.8/logging
/usr/bin/install -c ./Lib/wsgiref/__init__.py /usr/local/lib/python3.8/wsgiref
/usr/bin/install -c ./Lib/wsgiref/handlers.py /usr/local/lib/python3.8/wsgiref
/usr/bin/install -c ./Lib/wsgiref/headers.py /usr/local/lib/python3.8/wsgiref
/usr/bin/install -c ./Lib/wsgiref/simple_server.py /usr/local/lib/python3.8/wsgiref
/usr/bin/install -c ./Lib/wsgiref/util.py /usr/local/lib/python3.8/wsgiref
/usr/bin/install -c ./Lib/wsgiref/validate.py /usr/local/lib/python3.8/wsgiref
/usr/bin/install -c ./Lib/urllib/__init__.py /usr/local/lib/python3.8/urllib
/usr/bin/install -c ./Lib/urllib/error.py /usr/local/lib/python3.8/urllib
/usr/bin/install -c ./Lib/urllib/parse.py /usr/local/lib/python3.8/urllib
/usr/bin/install -c ./Lib/urllib/request.py /usr/local/lib/python3.8/urllib
/usr/bin/install -c ./Lib/urllib/response.py /usr/local/lib/python3.8/urllib
/usr/bin/install -c ./Lib/urllib/robotparser.py /usr/local/lib/python3.8/urllib
/usr/bin/install -c ./Lib/lib2to3/Grammar.txt /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/PatternGrammar.txt /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/__init__.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/__main__.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/btm_matcher.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/btm_utils.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/fixer_base.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/fixer_util.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/main.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/patcomp.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/pygram.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/pytree.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/refactor.py /usr/local/lib/python3.8/lib2to3
/usr/bin/install -c ./Lib/lib2to3/fixes/__init__.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_apply.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_asserts.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_basestring.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_buffer.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_dict.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_except.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_exec.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_execfile.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_exitfunc.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_filter.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_funcattrs.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_future.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_getcwdu.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_has_key.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_idioms.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_import.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_imports.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_imports2.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_input.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_intern.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_isinstance.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_itertools.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_itertools_imports.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_long.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_map.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_metaclass.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_methodattrs.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_ne.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_next.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_nonzero.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_numliterals.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_operator.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_paren.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_print.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_raise.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_raw_input.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_reduce.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_reload.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_renames.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_repr.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_set_literal.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_standarderror.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_sys_exc.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_throw.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_tuple_params.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_types.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_unicode.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_urllib.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_ws_comma.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_xrange.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_xreadlines.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/fixes/fix_zip.py /usr/local/lib/python3.8/lib2to3/fixes
/usr/bin/install -c ./Lib/lib2to3/pgen2/__init__.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/conv.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/driver.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/grammar.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/literals.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/parse.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/pgen.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/token.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/pgen2/tokenize.py /usr/local/lib/python3.8/lib2to3/pgen2
/usr/bin/install -c ./Lib/lib2to3/tests/__init__.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/__main__.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/pytree_idempotency.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/support.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/test_all_fixers.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/test_fixers.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/test_main.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/test_parser.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/test_pytree.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/test_refactor.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/test_util.py /usr/local/lib/python3.8/lib2to3/tests
/usr/bin/install -c ./Lib/lib2to3/tests/data/README /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/bom.py /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/crlf.py /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/different_encoding.py /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/false_encoding.py /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/infinite_recursion.py /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/py2_test_grammar.py /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/py3_test_grammar.py /usr/local/lib/python3.8/lib2to3/tests/data
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/bad_order.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/no_fixer_cls.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/parrot_example.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/myfixes/__init__.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/myfixes/fix_explicit.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/myfixes/fix_first.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/myfixes/fix_last.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/myfixes/fix_parrot.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes
/usr/bin/install -c ./Lib/lib2to3/tests/data/fixers/myfixes/fix_preorder.py /usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes
/usr/bin/install -c ./Lib/ctypes/__init__.py /usr/local/lib/python3.8/ctypes
/usr/bin/install -c ./Lib/ctypes/_aix.py /usr/local/lib/python3.8/ctypes
/usr/bin/install -c ./Lib/ctypes/_endian.py /usr/local/lib/python3.8/ctypes
/usr/bin/install -c ./Lib/ctypes/util.py /usr/local/lib/python3.8/ctypes
/usr/bin/install -c ./Lib/ctypes/wintypes.py /usr/local/lib/python3.8/ctypes
/usr/bin/install -c ./Lib/ctypes/test/__init__.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/__main__.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_anon.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_array_in_pointer.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_arrays.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_as_parameter.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_bitfields.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_buffers.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_bytes.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_byteswap.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_callbacks.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_cast.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_cfuncs.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_checkretval.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_delattr.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_errno.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_find.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_frombuffer.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_funcptr.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_functions.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_incomplete.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_init.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_internals.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_keeprefs.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_libc.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_loading.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_macholib.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_memfunctions.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_numbers.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_objects.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_parameters.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_pep3118.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_pickling.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_pointers.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_prototypes.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_python_api.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_random_things.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_refcounts.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_repr.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_returnfuncptrs.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_simplesubclasses.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_sizes.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_slicing.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_stringptr.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_strings.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_struct_fields.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_structures.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_unaligned_structures.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_unicode.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_values.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_varsize_struct.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_win32.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/test/test_wintypes.py /usr/local/lib/python3.8/ctypes/test
/usr/bin/install -c ./Lib/ctypes/macholib/README.ctypes /usr/local/lib/python3.8/ctypes/macholib
/usr/bin/install -c ./Lib/ctypes/macholib/__init__.py /usr/local/lib/python3.8/ctypes/macholib
/usr/bin/install -c ./Lib/ctypes/macholib/dyld.py /usr/local/lib/python3.8/ctypes/macholib
/usr/bin/install -c ./Lib/ctypes/macholib/dylib.py /usr/local/lib/python3.8/ctypes/macholib
/usr/bin/install -c ./Lib/ctypes/macholib/fetch_macholib /usr/local/lib/python3.8/ctypes/macholib
/usr/bin/install -c ./Lib/ctypes/macholib/fetch_macholib.bat /usr/local/lib/python3.8/ctypes/macholib
/usr/bin/install -c ./Lib/ctypes/macholib/framework.py /usr/local/lib/python3.8/ctypes/macholib
/usr/bin/install -c ./Lib/idlelib/CREDITS.txt /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/ChangeLog /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/HISTORY.txt /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/NEWS.txt /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/NEWS2x.txt /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/README.txt /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/TODO.txt /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/__init__.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/__main__.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/autocomplete.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/autocomplete_w.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/autoexpand.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/browser.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/calltip.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/calltip_w.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/codecontext.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/colorizer.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/config-extensions.def /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/config-highlight.def /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/config-keys.def /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/config-main.def /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/config.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/config_key.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/configdialog.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/debugger.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/debugger_r.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/debugobj.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/debugobj_r.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/delegator.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/dynoption.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/editor.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/extend.txt /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/filelist.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/format.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/grep.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/help.html /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/help.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/help_about.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/history.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/hyperparser.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/idle.bat /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/idle.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/idle.pyw /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/iomenu.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/macosx.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/mainmenu.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/multicall.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/outwin.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/parenmatch.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/pathbrowser.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/percolator.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/pyparse.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/pyshell.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/query.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/redirector.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/replace.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/rpc.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/run.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/runscript.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/scrolledlist.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/search.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/searchbase.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/searchengine.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/sidebar.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/squeezer.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/stackviewer.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/statusbar.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/textview.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/tooltip.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/tree.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/undo.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/window.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/zoomheight.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/zzdummy.py /usr/local/lib/python3.8/idlelib
/usr/bin/install -c ./Lib/idlelib/Icons/README.txt /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/folder.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle.ico /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle_16.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle_16.png /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle_256.png /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle_32.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle_32.png /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle_48.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/idle_48.png /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/minusnode.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/openfolder.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/plusnode.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/python.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/Icons/tk.gif /usr/local/lib/python3.8/idlelib/Icons
/usr/bin/install -c ./Lib/idlelib/idle_test/README.txt /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/__init__.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/htest.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/mock_idle.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/mock_tk.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/template.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_autocomplete.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_autocomplete_w.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_autoexpand.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_browser.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_calltip.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_calltip_w.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_codecontext.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_colorizer.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_config.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_config_key.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_configdialog.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_debugger.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_debugger_r.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_debugobj.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_debugobj_r.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_delegator.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_editmenu.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_editor.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_filelist.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_format.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_grep.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_help.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_help_about.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_history.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_hyperparser.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_iomenu.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_macosx.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_mainmenu.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_multicall.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_outwin.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_parenmatch.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_pathbrowser.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_percolator.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_pyparse.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_pyshell.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_query.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_redirector.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_replace.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_rpc.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_run.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_runscript.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_scrolledlist.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_search.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_searchbase.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_searchengine.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_sidebar.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_squeezer.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_stackviewer.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_statusbar.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_text.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_textview.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_tooltip.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_tree.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_undo.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_warning.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_window.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/idlelib/idle_test/test_zoomheight.py /usr/local/lib/python3.8/idlelib/idle_test
/usr/bin/install -c ./Lib/distutils/README /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/__init__.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/_msvccompiler.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/archive_util.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/bcppcompiler.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/ccompiler.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/cmd.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/config.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/core.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/cygwinccompiler.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/debug.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/dep_util.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/dir_util.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/dist.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/errors.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/extension.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/fancy_getopt.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/file_util.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/filelist.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/log.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/msvc9compiler.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/msvccompiler.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/spawn.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/sysconfig.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/text_file.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/unixccompiler.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/util.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/version.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/versionpredicate.py /usr/local/lib/python3.8/distutils
/usr/bin/install -c ./Lib/distutils/command/__init__.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/bdist.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/bdist_dumb.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/bdist_msi.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/bdist_rpm.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/bdist_wininst.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/build.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/build_clib.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/build_ext.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/build_py.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/build_scripts.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/check.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/clean.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/command_template /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/config.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/install.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/install_data.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/install_egg_info.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/install_headers.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/install_lib.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/install_scripts.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/register.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/sdist.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/upload.py /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-10.0-amd64.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-10.0.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-14.0-amd64.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-14.0.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-6.0.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-7.1.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-8.0.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-9.0-amd64.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/command/wininst-9.0.exe /usr/local/lib/python3.8/distutils/command
/usr/bin/install -c ./Lib/distutils/tests/Setup.sample /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/__init__.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/includetest.rst /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/support.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_archive_util.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_bdist.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_bdist_dumb.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_bdist_msi.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_bdist_rpm.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_bdist_wininst.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_build.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_build_clib.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_build_ext.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_build_py.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_build_scripts.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_check.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_clean.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_cmd.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_config.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_config_cmd.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_core.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_cygwinccompiler.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_dep_util.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_dir_util.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_dist.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_extension.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_file_util.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_filelist.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_install.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_install_data.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_install_headers.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_install_lib.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_install_scripts.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_log.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_msvc9compiler.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_msvccompiler.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_register.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_sdist.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_spawn.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_sysconfig.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_text_file.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_unixccompiler.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_upload.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_util.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_version.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/distutils/tests/test_versionpredicate.py /usr/local/lib/python3.8/distutils/tests
/usr/bin/install -c ./Lib/xml/__init__.py /usr/local/lib/python3.8/xml
/usr/bin/install -c ./Lib/xml/dom/NodeFilter.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/dom/__init__.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/dom/domreg.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/dom/expatbuilder.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/dom/minicompat.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/dom/minidom.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/dom/pulldom.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/dom/xmlbuilder.py /usr/local/lib/python3.8/xml/dom
/usr/bin/install -c ./Lib/xml/etree/ElementInclude.py /usr/local/lib/python3.8/xml/etree
/usr/bin/install -c ./Lib/xml/etree/ElementPath.py /usr/local/lib/python3.8/xml/etree
/usr/bin/install -c ./Lib/xml/etree/ElementTree.py /usr/local/lib/python3.8/xml/etree
/usr/bin/install -c ./Lib/xml/etree/__init__.py /usr/local/lib/python3.8/xml/etree
/usr/bin/install -c ./Lib/xml/etree/cElementTree.py /usr/local/lib/python3.8/xml/etree
/usr/bin/install -c ./Lib/xml/parsers/__init__.py /usr/local/lib/python3.8/xml/parsers
/usr/bin/install -c ./Lib/xml/parsers/expat.py /usr/local/lib/python3.8/xml/parsers
/usr/bin/install -c ./Lib/xml/sax/__init__.py /usr/local/lib/python3.8/xml/sax
/usr/bin/install -c ./Lib/xml/sax/_exceptions.py /usr/local/lib/python3.8/xml/sax
/usr/bin/install -c ./Lib/xml/sax/expatreader.py /usr/local/lib/python3.8/xml/sax
/usr/bin/install -c ./Lib/xml/sax/handler.py /usr/local/lib/python3.8/xml/sax
/usr/bin/install -c ./Lib/xml/sax/saxutils.py /usr/local/lib/python3.8/xml/sax
/usr/bin/install -c ./Lib/xml/sax/xmlreader.py /usr/local/lib/python3.8/xml/sax
/usr/bin/install -c ./Lib/test/test_tools/__init__.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/__main__.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_fixcid.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_gprof2html.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_i18n.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_lll.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_md5sum.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_pathfix.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_pdeps.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_pindent.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_reindent.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_sundry.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_tools/test_unparse.py /usr/local/lib/python3.8/test/test_tools
/usr/bin/install -c ./Lib/test/test_warnings/__init__.py /usr/local/lib/python3.8/test/test_warnings
/usr/bin/install -c ./Lib/test/test_warnings/__main__.py /usr/local/lib/python3.8/test/test_warnings
/usr/bin/install -c ./Lib/test/test_warnings/data/import_warning.py /usr/local/lib/python3.8/test/test_warnings/data
/usr/bin/install -c ./Lib/test/test_warnings/data/stacklevel.py /usr/local/lib/python3.8/test/test_warnings/data
/usr/bin/install -c ./Lib/turtledemo/__init__.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/__main__.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/bytedesign.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/chaos.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/clock.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/colormixer.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/forest.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/fractalcurves.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/lindenmayer.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/minimal_hanoi.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/nim.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/paint.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/peace.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/penrose.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/planet_and_moon.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/rosette.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/round_dance.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/sorting_animate.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/tree.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/turtle.cfg /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/two_canvases.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/turtledemo/yinyang.py /usr/local/lib/python3.8/turtledemo
/usr/bin/install -c ./Lib/multiprocessing/__init__.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/connection.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/context.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/forkserver.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/heap.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/managers.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/pool.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/popen_fork.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/popen_forkserver.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/popen_spawn_posix.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/popen_spawn_win32.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/process.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/queues.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/reduction.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/resource_sharer.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/resource_tracker.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/shared_memory.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/sharedctypes.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/spawn.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/synchronize.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/util.py /usr/local/lib/python3.8/multiprocessing
/usr/bin/install -c ./Lib/multiprocessing/dummy/__init__.py /usr/local/lib/python3.8/multiprocessing/dummy
/usr/bin/install -c ./Lib/multiprocessing/dummy/connection.py /usr/local/lib/python3.8/multiprocessing/dummy
/usr/bin/install -c ./Lib/unittest/__init__.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/__main__.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/async_case.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/case.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/loader.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/main.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/mock.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/result.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/runner.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/signals.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/suite.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/util.py /usr/local/lib/python3.8/unittest
/usr/bin/install -c ./Lib/unittest/test/__init__.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/__main__.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/_test_warnings.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/dummy.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/support.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_assertions.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_async_case.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_break.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_case.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_discovery.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_functiontestcase.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_loader.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_program.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_result.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_runner.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_setups.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_skipping.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/test_suite.py /usr/local/lib/python3.8/unittest/test
/usr/bin/install -c ./Lib/unittest/test/testmock/__init__.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/__main__.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/support.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testasync.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testcallable.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testhelpers.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testmagicmethods.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testmock.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testpatch.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testsealable.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testsentinel.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/unittest/test/testmock/testwith.py /usr/local/lib/python3.8/unittest/test/testmock
/usr/bin/install -c ./Lib/venv/__init__.py /usr/local/lib/python3.8/venv
/usr/bin/install -c ./Lib/venv/__main__.py /usr/local/lib/python3.8/venv
/usr/bin/install -c ./Lib/venv/scripts/common/Activate.ps1 /usr/local/lib/python3.8/venv/scripts/common
/usr/bin/install -c ./Lib/venv/scripts/common/activate /usr/local/lib/python3.8/venv/scripts/common
/usr/bin/install -c ./Lib/venv/scripts/posix/activate.csh /usr/local/lib/python3.8/venv/scripts/posix
/usr/bin/install -c ./Lib/venv/scripts/posix/activate.fish /usr/local/lib/python3.8/venv/scripts/posix
/usr/bin/install -c ./Lib/curses/__init__.py /usr/local/lib/python3.8/curses
/usr/bin/install -c ./Lib/curses/ascii.py /usr/local/lib/python3.8/curses
/usr/bin/install -c ./Lib/curses/has_key.py /usr/local/lib/python3.8/curses
/usr/bin/install -c ./Lib/curses/panel.py /usr/local/lib/python3.8/curses
/usr/bin/install -c ./Lib/curses/textpad.py /usr/local/lib/python3.8/curses
/usr/bin/install -c ./Lib/pydoc_data/__init__.py /usr/local/lib/python3.8/pydoc_data
/usr/bin/install -c ./Lib/pydoc_data/_pydoc.css /usr/local/lib/python3.8/pydoc_data
/usr/bin/install -c ./Lib/pydoc_data/topics.py /usr/local/lib/python3.8/pydoc_data
/usr/bin/install -c -m 644 `cat pybuilddir.txt`/_sysconfigdata__linux_x86_64-linux-gnu.py \
	/usr/local/lib/python3.8; \
/usr/bin/install -c -m 644 ./LICENSE /usr/local/lib/python3.8/LICENSE.txt
if test -d /usr/local/lib/python3.8/distutils/tests; then \
	/usr/bin/install -c -m 644 ./Modules/xxmodule.c \
		/usr/local/lib/python3.8/distutils/tests ; \
fi
PYTHONPATH=/usr/local/lib/python3.8   \
	./python -E -Wi /usr/local/lib/python3.8/compileall.py \
	-j0 -d /usr/local/lib/python3.8 -f \
	-x 'bad_coding|badsyntax|site-packages|lib2to3/tests/data' \
	/usr/local/lib/python3.8
Listing '/usr/local/lib/python3.8'...
Compiling '/usr/local/lib/python3.8/_dummy_thread.py'...
Compiling '/usr/local/lib/python3.8/_strptime.py'...
Compiling '/usr/local/lib/python3.8/antigravity.py'...
Compiling '/usr/local/lib/python3.8/argparse.py'...
Compiling '/usr/local/lib/python3.8/asyncio/log.py'...
Compiling '/usr/local/lib/python3.8/asyncio/proactor_events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/sslproto.py'...
Compiling '/usr/local/lib/python3.8/asyncio/subprocess.py'...
Compiling '/usr/local/lib/python3.8/asyncio/unix_events.py'...
Compiling '/usr/local/lib/python3.8/cgi.py'...
Compiling '/usr/local/lib/python3.8/codeop.py'...
Compiling '/usr/local/lib/python3.8/collections/abc.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/_base.py'...
Compiling '/usr/local/lib/python3.8/ctypes/_endian.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/framework.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_as_parameter.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_callbacks.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_parameters.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_stringptr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_unaligned_structures.py'...
Compiling '/usr/local/lib/python3.8/distutils/_msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/clean.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_data.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/register.py'...
Compiling '/usr/local/lib/python3.8/distutils/cygwinccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/filelist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/support.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_rpm.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_clib.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_extension.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_data.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_log.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_sdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/version.py'...
Compiling '/usr/local/lib/python3.8/email/_parseaddr.py'...
Compiling '/usr/local/lib/python3.8/email/errors.py'...
Compiling '/usr/local/lib/python3.8/email/headerregistry.py'...
Compiling '/usr/local/lib/python3.8/email/mime/message.py'...
Compiling '/usr/local/lib/python3.8/email/mime/multipart.py'...
Compiling '/usr/local/lib/python3.8/email/parser.py'...
Compiling '/usr/local/lib/python3.8/encodings/__init__.py'...
Compiling '/usr/local/lib/python3.8/encodings/big5.py'...
Compiling '/usr/local/lib/python3.8/encodings/bz2_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1026.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1252.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1258.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp850.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp860.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp865.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp950.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_kr.py'...
Compiling '/usr/local/lib/python3.8/encodings/hp_roman8.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_10.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_16.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_3.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_cyrillic.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_latin2.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16.py'...
Compiling '/usr/local/lib/python3.8/encodings/uu_codec.py'...
Compiling '/usr/local/lib/python3.8/formatter.py'...
Compiling '/usr/local/lib/python3.8/gettext.py'...
Compiling '/usr/local/lib/python3.8/html/__init__.py'...
Compiling '/usr/local/lib/python3.8/http/__init__.py'...
Compiling '/usr/local/lib/python3.8/http/server.py'...
Compiling '/usr/local/lib/python3.8/idlelib/calltip_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/help.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_filelist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_grep.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_mainmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_outwin.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_redirector.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_scrolledlist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_searchbase.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_statusbar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_tooltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/multicall.py'...
Compiling '/usr/local/lib/python3.8/idlelib/rpc.py'...
Compiling '/usr/local/lib/python3.8/idlelib/sidebar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/zzdummy.py'...
Compiling '/usr/local/lib/python3.8/importlib/_bootstrap.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixer_base.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_imports.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_nonzero.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_raw_input.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_repr.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_ws_comma.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/grammar.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/parse.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/__main__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_pytree.py'...
Compiling '/usr/local/lib/python3.8/mailcap.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/context.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_forkserver.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/process.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/spawn.py'...
Compiling '/usr/local/lib/python3.8/pdb.py'...
Compiling '/usr/local/lib/python3.8/pyclbr.py'...
Compiling '/usr/local/lib/python3.8/rlcompleter.py'...
Compiling '/usr/local/lib/python3.8/shlex.py'...
Compiling '/usr/local/lib/python3.8/smtplib.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/backup.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/transactions.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/userfunctions.py'...
Compiling '/usr/local/lib/python3.8/stringprep.py'...
Compiling '/usr/local/lib/python3.8/sysconfig.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module.py'...
Compiling '/usr/local/lib/python3.8/test/autotest.py'...
Compiling '/usr/local/lib/python3.8/test/coding20731.py'...
Compiling '/usr/local/lib/python3.8/test/datetimetester.py'...
Compiling '/usr/local/lib/python3.8/test/test_abstract_numbers.py'...
Compiling '/usr/local/lib/python3.8/test/test_aifc.py'...
Compiling '/usr/local/lib/python3.8/test/test_array.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_context.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sock_lowlevel.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_atexit.py'...
Compiling '/usr/local/lib/python3.8/test/test_audit.py'...
Compiling '/usr/local/lib/python3.8/test/test_base64.py'...
Compiling '/usr/local/lib/python3.8/test/test_binhex.py'...
Compiling '/usr/local/lib/python3.8/test/test_binop.py'...Compiling '/usr/local/lib/python3.8/__phello__.foo.py'...
Compiling '/usr/local/lib/python3.8/_compat_pickle.py'...
Compiling '/usr/local/lib/python3.8/_pyio.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_futures.py'...
Compiling '/usr/local/lib/python3.8/asyncio/constants.py'...
Compiling '/usr/local/lib/python3.8/asyncio/coroutines.py'...
Compiling '/usr/local/lib/python3.8/asyncio/runners.py'...
Compiling '/usr/local/lib/python3.8/asyncio/selector_events.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/__init__.py'...
Compiling '/usr/local/lib/python3.8/contextvars.py'...
Compiling '/usr/local/lib/python3.8/copyreg.py'...
Compiling '/usr/local/lib/python3.8/csv.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/dylib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_array_in_pointer.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_frombuffer.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_memfunctions.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pointers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_returnfuncptrs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_structures.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_rpm.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/debug.py'...
Compiling '/usr/local/lib/python3.8/distutils/file_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_config_cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dep_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_spawn.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_upload.py'...
Compiling '/usr/local/lib/python3.8/dummy_threading.py'...
Compiling '/usr/local/lib/python3.8/email/_encoded_words.py'...
Compiling '/usr/local/lib/python3.8/email/charset.py'...
Compiling '/usr/local/lib/python3.8/email/iterators.py'...
Compiling '/usr/local/lib/python3.8/email/mime/__init__.py'...
Compiling '/usr/local/lib/python3.8/email/mime/application.py'...
Compiling '/usr/local/lib/python3.8/email/mime/base.py'...
Compiling '/usr/local/lib/python3.8/email/mime/text.py'...
Compiling '/usr/local/lib/python3.8/email/quoprimime.py'...
Compiling '/usr/local/lib/python3.8/encodings/big5hkscs.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1006.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1140.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1255.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp437.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp857.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp863.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jis_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/gb18030.py'...
Compiling '/usr/local/lib/python3.8/encodings/hz.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_2.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_9.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_centeuro.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_iceland.py'...
Compiling '/usr/local/lib/python3.8/encodings/oem.py'...
Compiling '/usr/local/lib/python3.8/encodings/raw_unicode_escape.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jis_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/undefined.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32.py'...
Compiling '/usr/local/lib/python3.8/genericpath.py'...
Compiling '/usr/local/lib/python3.8/glob.py'...
Compiling '/usr/local/lib/python3.8/hashlib.py'...
Compiling '/usr/local/lib/python3.8/http/cookies.py'...
Compiling '/usr/local/lib/python3.8/idlelib/__main__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autocomplete.py'...
Compiling '/usr/local/lib/python3.8/idlelib/codecontext.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugger.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autocomplete.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_codecontext.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pyparse.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_tree.py'...
Compiling '/usr/local/lib/python3.8/idlelib/macosx.py'...
Compiling '/usr/local/lib/python3.8/idlelib/parenmatch.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pyparse.py'...
Compiling '/usr/local/lib/python3.8/idlelib/tooltip.py'...
Compiling '/usr/local/lib/python3.8/imaplib.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/btm_matcher.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_exitfunc.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_has_key.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_isinstance.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_methodattrs.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_print.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_sys_exc.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_xreadlines.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/driver.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/token.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/refactor.py'...
Compiling '/usr/local/lib/python3.8/lzma.py'...
Compiling '/usr/local/lib/python3.8/mailbox.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/resource_tracker.py'...
Compiling '/usr/local/lib/python3.8/optparse.py'...
Compiling '/usr/local/lib/python3.8/queue.py'...
Compiling '/usr/local/lib/python3.8/reprlib.py'...
Compiling '/usr/local/lib/python3.8/signal.py'...
Compiling '/usr/local/lib/python3.8/socket.py'...
Compiling '/usr/local/lib/python3.8/stat.py'...
Compiling '/usr/local/lib/python3.8/statistics.py'...
Compiling '/usr/local/lib/python3.8/tempfile.py'...
Compiling '/usr/local/lib/python3.8/test/bisect_cmd.py'...
Compiling '/usr/local/lib/python3.8/test/curses_tests.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_2.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/module_iso_8859_1.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/module_koi8_r.py'...
Compiling '/usr/local/lib/python3.8/test/good_getattr.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/save_env.py'...
Compiling '/usr/local/lib/python3.8/test/list_tests.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest_no_docstrings.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest_no_doctests.py'...
Compiling '/usr/local/lib/python3.8/test/seq_tests.py'...
Compiling '/usr/local/lib/python3.8/test/test___future__.py'...
Compiling '/usr/local/lib/python3.8/test/test__locale.py'...
Compiling '/usr/local/lib/python3.8/test/test__xxsubinterpreters.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo2.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo3.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/functional.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_buffered_proto.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_futures.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_queues.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sendfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_transports.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_windows_utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncore.py'...
Compiling '/usr/local/lib/python3.8/test/test_bool.py'...
Compiling '/usr/local/lib/python3.8/test/test_bz2.py'...
Compiling '/usr/local/lib/python3.8/test/test_charmapcodec.py'...
Compiling '/usr/local/lib/python3.8/test/test_clinic.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_tw.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_kr.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecs.py'...
Compiling '/usr/local/lib/python3.8/test/test_dataclasses.py'...Compiling '/usr/local/lib/python3.8/__future__.py'...
Compiling '/usr/local/lib/python3.8/_py_abc.py'...
Compiling '/usr/local/lib/python3.8/abc.py'...
Compiling '/usr/local/lib/python3.8/ast.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_tasks.py'...
Compiling '/usr/local/lib/python3.8/asyncio/events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/streams.py'...
Compiling '/usr/local/lib/python3.8/bz2.py'...
Compiling '/usr/local/lib/python3.8/cmd.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/thread.py'...
Compiling '/usr/local/lib/python3.8/copy.py'...
Compiling '/usr/local/lib/python3.8/ctypes/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_anon.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_buffers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_byteswap.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_libc.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_repr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_slicing.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_win32.py'...
Compiling '/usr/local/lib/python3.8/dbm/dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_clib.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/config.py'...
Compiling '/usr/local/lib/python3.8/distutils/dir_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/msvc9compiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_check.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_core.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_sysconfig.py'...
Compiling '/usr/local/lib/python3.8/doctest.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1250.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1256.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp720.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp852.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp874.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp932.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_3.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_11.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_15.py'...
Compiling '/usr/local/lib/python3.8/encodings/latin_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_greek.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_romanian.py'...
Compiling '/usr/local/lib/python3.8/encodings/rot_13.py'...
Compiling '/usr/local/lib/python3.8/encodings/unicode_escape.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32_be.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_8.py'...
Compiling '/usr/local/lib/python3.8/enum.py'...
Compiling '/usr/local/lib/python3.8/http/cookiejar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/config_key.py'...
Compiling '/usr/local/lib/python3.8/idlelib/delegator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/dynoption.py'...
Compiling '/usr/local/lib/python3.8/idlelib/filelist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/help_about.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/mock_idle.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/mock_tk.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_calltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_config_key.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugger_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_delegator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_help.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_help_about.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_iomenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_percolator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_stackviewer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_text.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_undo.py'...
Compiling '/usr/local/lib/python3.8/idlelib/redirector.py'...
Compiling '/usr/local/lib/python3.8/idlelib/run.py'...
Compiling '/usr/local/lib/python3.8/idlelib/squeezer.py'...
Compiling '/usr/local/lib/python3.8/importlib/util.py'...
Compiling '/usr/local/lib/python3.8/ipaddress.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixer_util.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_input.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_long.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_next.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_reduce.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_throw.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_xrange.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/literals.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/pgen.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/support.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_util.py'...
Compiling '/usr/local/lib/python3.8/modulefinder.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/managers.py'...
Compiling '/usr/local/lib/python3.8/ntpath.py'...
Compiling '/usr/local/lib/python3.8/pipes.py'...
Compiling '/usr/local/lib/python3.8/pkgutil.py'...
Compiling '/usr/local/lib/python3.8/profile.py'...
Compiling '/usr/local/lib/python3.8/runpy.py'...
Compiling '/usr/local/lib/python3.8/site.py'...
Compiling '/usr/local/lib/python3.8/sndhdr.py'...
Compiling '/usr/local/lib/python3.8/sre_constants.py'...
Compiling '/usr/local/lib/python3.8/ssl.py'...
Compiling '/usr/local/lib/python3.8/test/audiotests.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_1.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/gc.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/line.py'...
Compiling '/usr/local/lib/python3.8/test/future_test2.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/main.py'...
Compiling '/usr/local/lib/python3.8/test/outstanding_bugs.py'...
Compiling '/usr/local/lib/python3.8/test/pickletester.py'...
Compiling '/usr/local/lib/python3.8/test/test_asynchat.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_base_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_unix_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_bigaddrspace.py'...
Compiling '/usr/local/lib/python3.8/test/test_binascii.py'...
Compiling '/usr/local/lib/python3.8/test/test_bisect.py'...
Compiling '/usr/local/lib/python3.8/test/test_bufio.py'...
Compiling '/usr/local/lib/python3.8/test/test_builtin.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmath.py'...
Compiling '/usr/local/lib/python3.8/test/test_code_module.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_cn.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_kr.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_jp.py'...
Compiling '/usr/local/lib/python3.8/test/test_codeop.py'...
Compiling '/usr/local/lib/python3.8/test/test_compare.py'...
Compiling '/usr/local/lib/python3.8/test/test_compile.py'...
Compiling '/usr/local/lib/python3.8/test/test_context.py'...
Compiling '/usr/local/lib/python3.8/test/test_copyreg.py'...
Compiling '/usr/local/lib/python3.8/test/test_coroutines.py'...
Compiling '/usr/local/lib/python3.8/test/test_dictviews.py'...
Compiling '/usr/local/lib/python3.8/test/test_doctest2.py'...
Compiling '/usr/local/lib/python3.8/test/test_docxmlrpc.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_asian_codecs.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_contentmanager.py'...Compiling '/usr/local/lib/python3.8/_osx_support.py'...
Compiling '/usr/local/lib/python3.8/_sitebuiltins.py'...
Compiling '/usr/local/lib/python3.8/_threading_local.py'...
Compiling '/usr/local/lib/python3.8/_weakrefset.py'...
Compiling '/usr/local/lib/python3.8/asynchat.py'...
Compiling '/usr/local/lib/python3.8/asyncio/__init__.py'...
Compiling '/usr/local/lib/python3.8/asyncio/__main__.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_events.py'...
Compiling '/usr/local/lib/python3.8/binhex.py'...
Compiling '/usr/local/lib/python3.8/cgitb.py'...
Compiling '/usr/local/lib/python3.8/chunk.py'...
Compiling '/usr/local/lib/python3.8/code.py'...
Compiling '/usr/local/lib/python3.8/colorsys.py'...
Compiling '/usr/local/lib/python3.8/concurrent/__init__.py'...
Compiling '/usr/local/lib/python3.8/configparser.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_cfuncs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_incomplete.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_internals.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_random_things.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_sizes.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_values.py'...
Compiling '/usr/local/lib/python3.8/curses/panel.py'...
Compiling '/usr/local/lib/python3.8/curses/textpad.py'...
Compiling '/usr/local/lib/python3.8/dbm/gnu.py'...
Compiling '/usr/local/lib/python3.8/decimal.py'...
Compiling '/usr/local/lib/python3.8/difflib.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_msi.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_py.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_lib.py'...
Compiling '/usr/local/lib/python3.8/distutils/dist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_file_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_lib.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_register.py'...
Compiling '/usr/local/lib/python3.8/distutils/util.py'...
Compiling '/usr/local/lib/python3.8/email/feedparser.py'...
Compiling '/usr/local/lib/python3.8/email/mime/audio.py'...
Compiling '/usr/local/lib/python3.8/email/utils.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp500.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp855.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp861.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_kr.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_13.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_8.py'...
Compiling '/usr/local/lib/python3.8/encodings/johab.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_arabic.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16_be.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32_le.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_8_sig.py'...
Compiling '/usr/local/lib/python3.8/functools.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autocomplete_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/config.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/htest.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autoexpand.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_calltip_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_colorizer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugger.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugobj_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_editmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_format.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_macosx.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_parenmatch.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_query.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_sidebar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_window.py'...
Compiling '/usr/local/lib/python3.8/idlelib/iomenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pyshell.py'...
Compiling '/usr/local/lib/python3.8/importlib/__init__.py'...
Compiling '/usr/local/lib/python3.8/importlib/machinery.py'...
Compiling '/usr/local/lib/python3.8/importlib/resources.py'...
Compiling '/usr/local/lib/python3.8/io.py'...
Compiling '/usr/local/lib/python3.8/json/decoder.py'...
Compiling '/usr/local/lib/python3.8/json/scanner.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/__main__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_basestring.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_dict.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_funcattrs.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_idioms.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_itertools.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_metaclass.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_reload.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_tuple_params.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_fixers.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/shared_memory.py'...
Compiling '/usr/local/lib/python3.8/netrc.py'...
Compiling '/usr/local/lib/python3.8/opcode.py'...
Compiling '/usr/local/lib/python3.8/pathlib.py'...
Compiling '/usr/local/lib/python3.8/plistlib.py'...
Compiling '/usr/local/lib/python3.8/pstats.py'...
Compiling '/usr/local/lib/python3.8/re.py'...
Compiling '/usr/local/lib/python3.8/selectors.py'...
Compiling '/usr/local/lib/python3.8/smtpd.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/__init__.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/dbapi2.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/dump.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/hooks.py'...
Compiling '/usr/local/lib/python3.8/sre_compile.py'...
Compiling '/usr/local/lib/python3.8/sunau.py'...
Compiling '/usr/local/lib/python3.8/tabnanny.py'...
Compiling '/usr/local/lib/python3.8/test/_test_multiprocessing.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/pgo.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/refleak.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/runtest_mp.py'...
Compiling '/usr/local/lib/python3.8/test/profilee.py'...
Compiling '/usr/local/lib/python3.8/test/pyclbr_input.py'...
Compiling '/usr/local/lib/python3.8/test/re_tests.py'...
Compiling '/usr/local/lib/python3.8/test/test__osx_support.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncgen.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_pep492.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_proactor_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_streams.py'...
Compiling '/usr/local/lib/python3.8/test/test_baseexception.py'...
Compiling '/usr/local/lib/python3.8/test/test_bdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_c_locale_coercion.py'...
Compiling '/usr/local/lib/python3.8/test/test_calendar.py'...
Compiling '/usr/local/lib/python3.8/test/test_capi.py'...
Compiling '/usr/local/lib/python3.8/test/test_complex.py'...
Compiling '/usr/local/lib/python3.8/test/test_csv.py'...
Compiling '/usr/local/lib/python3.8/test/test_difflib.py'...
Compiling '/usr/local/lib/python3.8/test/test_dummy_threading.py'...
Compiling '/usr/local/lib/python3.8/test/test_dynamicclassattribute.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test__encoded_words.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_generator.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_message.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_policy.py'...
Compiling '/usr/local/lib/python3.8/test/test_embed.py'...
Compiling '/usr/local/lib/python3.8/test/test_eof.py'...Compiling '/usr/local/lib/python3.8/_collections_abc.py'...
Compiling '/usr/local/lib/python3.8/asyncio/futures.py'...
Compiling '/usr/local/lib/python3.8/asyncio/trsock.py'...
Compiling '/usr/local/lib/python3.8/asyncio/windows_events.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/process.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_bitfields.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_init.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_loading.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pep3118.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_refcounts.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_strings.py'...
Compiling '/usr/local/lib/python3.8/ctypes/util.py'...
Compiling '/usr/local/lib/python3.8/curses/has_key.py'...
Compiling '/usr/local/lib/python3.8/datetime.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/dep_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/fancy_getopt.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_py.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_text_file.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_util.py'...
Compiling '/usr/local/lib/python3.8/email/_policybase.py'...
Compiling '/usr/local/lib/python3.8/email/header.py'...
Compiling '/usr/local/lib/python3.8/encodings/aliases.py'...
Compiling '/usr/local/lib/python3.8/encodings/charmap.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1125.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1254.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp424.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp737.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp869.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jisx0213.py'...
Compiling '/usr/local/lib/python3.8/encodings/gb2312.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_ext.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_5.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_t.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_croatian.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_roman.py'...
Compiling '/usr/local/lib/python3.8/encodings/ptcp154.py'...
Compiling '/usr/local/lib/python3.8/encodings/zlib_codec.py'...
Compiling '/usr/local/lib/python3.8/fnmatch.py'...
Compiling '/usr/local/lib/python3.8/ftplib.py'...
Compiling '/usr/local/lib/python3.8/idlelib/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autoexpand.py'...
Compiling '/usr/local/lib/python3.8/idlelib/colorizer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugger_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/grep.py'...
Compiling '/usr/local/lib/python3.8/idlelib/history.py'...
Compiling '/usr/local/lib/python3.8/idlelib/hyperparser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/template.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autocomplete_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_browser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_config.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_history.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_multicall.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pyshell.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_replace.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_squeezer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/statusbar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/tree.py'...
Compiling '/usr/local/lib/python3.8/importlib/abc.py'...
Compiling '/usr/local/lib/python3.8/json/encoder.py'...
Compiling '/usr/local/lib/python3.8/json/tool.py'...
Compiling '/usr/local/lib/python3.8/keyword.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/btm_utils.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_exec.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_filter.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_itertools_imports.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_numliterals.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_renames.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/patcomp.py'...
Compiling '/usr/local/lib/python3.8/logging/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/forkserver.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/pool.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/reduction.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/synchronize.py'...
Compiling '/usr/local/lib/python3.8/nturl2path.py'...
Compiling '/usr/local/lib/python3.8/operator.py'...
Compiling '/usr/local/lib/python3.8/pickle.py'...
Compiling '/usr/local/lib/python3.8/posixpath.py'...
Compiling '/usr/local/lib/python3.8/random.py'...
Compiling '/usr/local/lib/python3.8/socketserver.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/factory.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/types.py'...
Compiling '/usr/local/lib/python3.8/tarfile.py'...
Compiling '/usr/local/lib/python3.8/test/dis_module.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/call_stack.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/instance.py'...
Compiling '/usr/local/lib/python3.8/test/future_test1.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/cmdline.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/setup.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/utils.py'...
Compiling '/usr/local/lib/python3.8/test/lock_tests.py'...
Compiling '/usr/local/lib/python3.8/test/sortperf.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/input_reader.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/qgrep.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/sigchild_ignore.py'...
Compiling '/usr/local/lib/python3.8/test/support/testresult.py'...
Compiling '/usr/local/lib/python3.8/test/test__opcode.py'...
Compiling '/usr/local/lib/python3.8/test/test_abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_asdl_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_ast.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sslproto.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_windows_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_audioop.py'...
Compiling '/usr/local/lib/python3.8/test/test_bytes.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd_line.py'...
Compiling '/usr/local/lib/python3.8/test/test_codeccallbacks.py'...
Compiling '/usr/local/lib/python3.8/test/test_compileall.py'...
Compiling '/usr/local/lib/python3.8/test/test_configparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_curses.py'...
Compiling '/usr/local/lib/python3.8/test/test_devpoll.py'...
Compiling '/usr/local/lib/python3.8/test/test_dict.py'...
Compiling '/usr/local/lib/python3.8/test/test_dynamic.py'...
Compiling '/usr/local/lib/python3.8/test/test_eintr.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test__header_value_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_fcntl.py'...
Compiling '/usr/local/lib/python3.8/test/test_filecmp.py'...
Compiling '/usr/local/lib/python3.8/test/test_finalization.py'...
Compiling '/usr/local/lib/python3.8/test/test_flufl.py'...
Compiling '/usr/local/lib/python3.8/test/test_fork1.py'...
Compiling '/usr/local/lib/python3.8/test/test_format.py'...
Compiling '/usr/local/lib/python3.8/test/test_frame.py'...
Compiling '/usr/local/lib/python3.8/test/test_ftplib.py'...Compiling '/usr/local/lib/python3.8/_markupbase.py'...
Compiling '/usr/local/lib/python3.8/aifc.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_subprocess.py'...
Compiling '/usr/local/lib/python3.8/asyncio/protocols.py'...
Compiling '/usr/local/lib/python3.8/asyncio/queues.py'...
Compiling '/usr/local/lib/python3.8/asyncio/staggered.py'...
Compiling '/usr/local/lib/python3.8/asyncio/transports.py'...
Compiling '/usr/local/lib/python3.8/bdb.py'...
Compiling '/usr/local/lib/python3.8/codecs.py'...
Compiling '/usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/python-config.py'...
Compiling '/usr/local/lib/python3.8/crypt.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/dyld.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_arrays.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_bytes.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_checkretval.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_funcptr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_macholib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_numbers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_wintypes.py'...
Compiling '/usr/local/lib/python3.8/curses/__init__.py'...
Compiling '/usr/local/lib/python3.8/curses/ascii.py'...
Compiling '/usr/local/lib/python3.8/dataclasses.py'...
Compiling '/usr/local/lib/python3.8/distutils/ccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/check.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_headers.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/sdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/core.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_msi.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_wininst.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_clean.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_config.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_cygwinccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_filelist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_versionpredicate.py'...
Compiling '/usr/local/lib/python3.8/distutils/unixccompiler.py'...
Compiling '/usr/local/lib/python3.8/email/base64mime.py'...
Compiling '/usr/local/lib/python3.8/email/encoders.py'...
Compiling '/usr/local/lib/python3.8/email/generator.py'...
Compiling '/usr/local/lib/python3.8/email/message.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1253.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp273.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp775.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp862.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp875.py'...
Compiling '/usr/local/lib/python3.8/encodings/gbk.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_2.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_14.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_6.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_r.py'...
Compiling '/usr/local/lib/python3.8/encodings/mbcs.py'...
Compiling '/usr/local/lib/python3.8/encodings/quopri_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jisx0213.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/__main__.py'...
Compiling '/usr/local/lib/python3.8/filecmp.py'...
Compiling '/usr/local/lib/python3.8/getpass.py'...
Compiling '/usr/local/lib/python3.8/heapq.py'...
Compiling '/usr/local/lib/python3.8/html/parser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/browser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugobj.py'...
Compiling '/usr/local/lib/python3.8/idlelib/format.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_configdialog.py'...
Compiling '/usr/local/lib/python3.8/idlelib/runscript.py'...
Compiling '/usr/local/lib/python3.8/idlelib/scrolledlist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/searchengine.py'...
Compiling '/usr/local/lib/python3.8/idlelib/zoomheight.py'...
Compiling '/usr/local/lib/python3.8/imp.py'...
Compiling '/usr/local/lib/python3.8/inspect.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_ne.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_raise.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_standarderror.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_types.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_zip.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pytree.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_all_fixers.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_main.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_refactor.py'...
Compiling '/usr/local/lib/python3.8/logging/handlers.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/dummy/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/dummy/connection.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/heap.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/queues.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/util.py'...
Compiling '/usr/local/lib/python3.8/numbers.py'...
Compiling '/usr/local/lib/python3.8/platform.py'...
Compiling '/usr/local/lib/python3.8/pprint.py'...
Compiling '/usr/local/lib/python3.8/pydoc_data/__init__.py'...
Compiling '/usr/local/lib/python3.8/pydoc_data/topics.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/regression.py'...
Compiling '/usr/local/lib/python3.8/sre_parse.py'...
Compiling '/usr/local/lib/python3.8/symbol.py'...
Compiling '/usr/local/lib/python3.8/symtable.py'...
Compiling '/usr/local/lib/python3.8/telnetlib.py'...
Compiling '/usr/local/lib/python3.8/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module3.py'...
Compiling '/usr/local/lib/python3.8/test/bytecode_helper.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_2_str.py'...
Compiling '/usr/local/lib/python3.8/test/final_b.py'...
Compiling '/usr/local/lib/python3.8/test/fork_wait.py'...
Compiling '/usr/local/lib/python3.8/test/inspect_fodder2.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/runtest.py'...
Compiling '/usr/local/lib/python3.8/test/mapping_tests.py'...
Compiling '/usr/local/lib/python3.8/test/pydoc_mod.py'...
Compiling '/usr/local/lib/python3.8/test/pydocfodder.py'...
Compiling '/usr/local/lib/python3.8/test/reperf.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest.py'...
Compiling '/usr/local/lib/python3.8/test/ssltests.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/fd_status.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/qcat.py'...
Compiling '/usr/local/lib/python3.8/test/support/script_helper.py'...
Compiling '/usr/local/lib/python3.8/test/test___all__.py'...
Compiling '/usr/local/lib/python3.8/test/test_argparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_call.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd_line_script.py'...
Compiling '/usr/local/lib/python3.8/test/test_contextlib_async.py'...
Compiling '/usr/local/lib/python3.8/test/test_cprofile.py'...
Compiling '/usr/local/lib/python3.8/test/test_crashers.py'...
Compiling '/usr/local/lib/python3.8/test/test_ctypes.py'...
Compiling '/usr/local/lib/python3.8/test/test_datetime.py'...
Compiling '/usr/local/lib/python3.8/test/test_decorators.py'...
Compiling '/usr/local/lib/python3.8/test/test_deque.py'...
Compiling '/usr/local/lib/python3.8/test/test_distutils.py'...
Compiling '/usr/local/lib/python3.8/test/test_doctest.py'...
Compiling '/usr/local/lib/python3.8/test/test_dummy_thread.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_email.py'...
Compiling '/usr/local/lib/python3.8/test/test_future3.py'...Compiling '/usr/local/lib/python3.8/_compression.py'...
Compiling '/usr/local/lib/python3.8/_sysconfigdata__linux_x86_64-linux-gnu.py'...
Compiling '/usr/local/lib/python3.8/asyncio/exceptions.py'...
Compiling '/usr/local/lib/python3.8/asyncio/format_helpers.py'...
Compiling '/usr/local/lib/python3.8/asyncio/locks.py'...
Compiling '/usr/local/lib/python3.8/asyncore.py'...
Compiling '/usr/local/lib/python3.8/bisect.py'...
Compiling '/usr/local/lib/python3.8/cProfile.py'...
Compiling '/usr/local/lib/python3.8/collections/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_delattr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_errno.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_functions.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_prototypes.py'...
Compiling '/usr/local/lib/python3.8/dbm/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/archive_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/bcppcompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_ext.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install.py'...
Compiling '/usr/local/lib/python3.8/distutils/config.py'...
Compiling '/usr/local/lib/python3.8/distutils/extension.py'...
Compiling '/usr/local/lib/python3.8/distutils/sysconfig.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_ext.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dir_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_headers.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_msvc9compiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_unixccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_version.py'...
Compiling '/usr/local/lib/python3.8/distutils/versionpredicate.py'...
Compiling '/usr/local/lib/python3.8/email/_header_value_parser.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp856.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp858.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp864.py'...
Compiling '/usr/local/lib/python3.8/encodings/idna.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_4.py'...
Compiling '/usr/local/lib/python3.8/encodings/kz1048.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_farsi.py'...
Compiling '/usr/local/lib/python3.8/encodings/palmos.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jis.py'...
Compiling '/usr/local/lib/python3.8/encodings/tis_620.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16_le.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_7.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/_uninstall.py'...
Compiling '/usr/local/lib/python3.8/fileinput.py'...
Compiling '/usr/local/lib/python3.8/getopt.py'...
Compiling '/usr/local/lib/python3.8/gzip.py'...
Compiling '/usr/local/lib/python3.8/http/client.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugobj_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/editor.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugobj.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_editor.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_hyperparser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pathbrowser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_rpc.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_run.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_textview.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_zoomheight.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pathbrowser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/query.py'...
Compiling '/usr/local/lib/python3.8/idlelib/search.py'...
Compiling '/usr/local/lib/python3.8/idlelib/stackviewer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/undo.py'...
Compiling '/usr/local/lib/python3.8/importlib/metadata.py'...
Compiling '/usr/local/lib/python3.8/json/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_asserts.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_buffer.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_execfile.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_future.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_import.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_imports2.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_operator.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_unicode.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/main.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pygram.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_parser.py'...
Compiling '/usr/local/lib/python3.8/linecache.py'...
Compiling '/usr/local/lib/python3.8/locale.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_spawn_win32.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/sharedctypes.py'...
Compiling '/usr/local/lib/python3.8/nntplib.py'...
Compiling '/usr/local/lib/python3.8/pickletools.py'...
Compiling '/usr/local/lib/python3.8/py_compile.py'...
Compiling '/usr/local/lib/python3.8/quopri.py'...
Compiling '/usr/local/lib/python3.8/sched.py'...
Compiling '/usr/local/lib/python3.8/secrets.py'...
Compiling '/usr/local/lib/python3.8/shelve.py'...
Compiling '/usr/local/lib/python3.8/shutil.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/dump.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/dbapi.py'...
Compiling '/usr/local/lib/python3.8/string.py'...
Compiling '/usr/local/lib/python3.8/struct.py'...
Compiling '/usr/local/lib/python3.8/subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module2.py'...
Compiling '/usr/local/lib/python3.8/test/audit-tests.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr2.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr3.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_1_str.py'...
Compiling '/usr/local/lib/python3.8/test/double_const.py'...
Compiling '/usr/local/lib/python3.8/test/eintrdata/eintr_tester.py'...
Compiling '/usr/local/lib/python3.8/test/mock_socket.py'...
Compiling '/usr/local/lib/python3.8/test/mp_preload.py'...
Compiling '/usr/local/lib/python3.8/test/pythoninfo.py'...
Compiling '/usr/local/lib/python3.8/test/ssl_servers.py'...
Compiling '/usr/local/lib/python3.8/test/support/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_locks.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_server.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_tasks.py'...
Compiling '/usr/local/lib/python3.8/test/test_cgi.py'...
Compiling '/usr/local/lib/python3.8/test/test_code.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_hk.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_iso2022.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_cn.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_hk.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_tw.py'...
Compiling '/usr/local/lib/python3.8/test/test_collections.py'...
Compiling '/usr/local/lib/python3.8/test/test_crypt.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_gnu.py'...
Compiling '/usr/local/lib/python3.8/test/test_descr.py'...
Compiling '/usr/local/lib/python3.8/test/test_fileio.py'...
Compiling '/usr/local/lib/python3.8/test/test_frozen.py'...
Compiling '/usr/local/lib/python3.8/test/test_fstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_genexps.py'...
Compiling '/usr/local/lib/python3.8/test/test_getargs2.py'...
Compiling '/usr/local/lib/python3.8/test/test_idle.py'...
Compiling '/usr/local/lib/python3.8/test/test_imaplib.py'...Compiling '/usr/local/lib/python3.8/_bootlocale.py'...
Compiling '/usr/local/lib/python3.8/_pydecimal.py'...
Compiling '/usr/local/lib/python3.8/asyncio/tasks.py'...
Compiling '/usr/local/lib/python3.8/asyncio/windows_utils.py'...
Compiling '/usr/local/lib/python3.8/base64.py'...
Compiling '/usr/local/lib/python3.8/calendar.py'...
Compiling '/usr/local/lib/python3.8/compileall.py'...
Compiling '/usr/local/lib/python3.8/contextlib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/_aix.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_cast.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_find.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_keeprefs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_objects.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pickling.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_python_api.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_simplesubclasses.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_struct_fields.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_varsize_struct.py'...
Compiling '/usr/local/lib/python3.8/ctypes/wintypes.py'...
Compiling '/usr/local/lib/python3.8/dbm/ndbm.py'...
Compiling '/usr/local/lib/python3.8/dis.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_wininst.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_egg_info.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/upload.py'...
Compiling '/usr/local/lib/python3.8/distutils/errors.py'...
Compiling '/usr/local/lib/python3.8/distutils/log.py'...
Compiling '/usr/local/lib/python3.8/distutils/spawn.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_archive_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/text_file.py'...
Compiling '/usr/local/lib/python3.8/email/__init__.py'...
Compiling '/usr/local/lib/python3.8/email/contentmanager.py'...
Compiling '/usr/local/lib/python3.8/email/mime/image.py'...
Compiling '/usr/local/lib/python3.8/email/mime/nonmultipart.py'...
Compiling '/usr/local/lib/python3.8/email/policy.py'...
Compiling '/usr/local/lib/python3.8/encodings/ascii.py'...
Compiling '/usr/local/lib/python3.8/encodings/base64_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp037.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1251.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1257.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp866.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp949.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jp.py'...
Compiling '/usr/local/lib/python3.8/encodings/hex_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_7.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_u.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_turkish.py'...
Compiling '/usr/local/lib/python3.8/encodings/punycode.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/__init__.py'...
Compiling '/usr/local/lib/python3.8/fractions.py'...
Compiling '/usr/local/lib/python3.8/hmac.py'...
Compiling '/usr/local/lib/python3.8/html/entities.py'...
Compiling '/usr/local/lib/python3.8/idlelib/calltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/configdialog.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_runscript.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_search.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_searchengine.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_warning.py'...
Compiling '/usr/local/lib/python3.8/idlelib/mainmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/outwin.py'...
Compiling '/usr/local/lib/python3.8/idlelib/percolator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/replace.py'...
Compiling '/usr/local/lib/python3.8/idlelib/searchbase.py'...
Compiling '/usr/local/lib/python3.8/idlelib/textview.py'...
Compiling '/usr/local/lib/python3.8/idlelib/window.py'...
Compiling '/usr/local/lib/python3.8/imghdr.py'...
Compiling '/usr/local/lib/python3.8/importlib/_bootstrap_external.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_apply.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_except.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_getcwdu.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_intern.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_map.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_paren.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_set_literal.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_urllib.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/conv.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/tokenize.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/pytree_idempotency.py'...
Compiling '/usr/local/lib/python3.8/logging/config.py'...
Compiling '/usr/local/lib/python3.8/mimetypes.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/connection.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_fork.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_spawn_posix.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/resource_sharer.py'...
Compiling '/usr/local/lib/python3.8/os.py'...
Compiling '/usr/local/lib/python3.8/poplib.py'...
Compiling '/usr/local/lib/python3.8/pty.py'...
Compiling '/usr/local/lib/python3.8/pydoc.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_textanno.py'...
Compiling '/usr/local/lib/python3.8/test/doctest_aliases.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/final_a.py'...
Compiling '/usr/local/lib/python3.8/test/gdb_sample.py'...
Compiling '/usr/local/lib/python3.8/test/imp_dummy.py'...
Compiling '/usr/local/lib/python3.8/test/inspect_fodder.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/win_utils.py'...
Compiling '/usr/local/lib/python3.8/test/make_ssl_certs.py'...
Compiling '/usr/local/lib/python3.8/test/memory_watchdog.py'...
Compiling '/usr/local/lib/python3.8/test/mod_generics_cache.py'...
Compiling '/usr/local/lib/python3.8/test/mp_fork_bomb.py'...
Compiling '/usr/local/lib/python3.8/test/multibytecodec_support.py'...
Compiling '/usr/local/lib/python3.8/test/regrtest.py'...
Compiling '/usr/local/lib/python3.8/test/relimport.py'...
Compiling '/usr/local/lib/python3.8/test/signalinterproctester.py'...
Compiling '/usr/local/lib/python3.8/test/string_tests.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_protocols.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_runners.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_selector_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_augassign.py'...
Compiling '/usr/local/lib/python3.8/test/test_bigmem.py'...
Compiling '/usr/local/lib/python3.8/test/test_cgitb.py'...
Compiling '/usr/local/lib/python3.8/test/test_class.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_jp.py'...
Compiling '/usr/local/lib/python3.8/test/test_colorsys.py'...
Compiling '/usr/local/lib/python3.8/test/test_concurrent_futures.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_ndbm.py'...
Compiling '/usr/local/lib/python3.8/test/test_defaultdict.py'...
Compiling '/usr/local/lib/python3.8/test/test_descrtut.py'...
Compiling '/usr/local/lib/python3.8/test/test_dict_version.py'...
Compiling '/usr/local/lib/python3.8/test/test_dictcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_dis.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_defect_handling.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_inversion.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_enum.py'...
Compiling '/usr/local/lib/python3.8/test/test_glob.py'...
Compiling '/usr/local/lib/python3.8/test/test_http_cookiejar.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/from_cycle1.py'...
Compiling '/usr/local/lib/python3.8/test/test_dtrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_headerregistry.py'...
Compiling '/usr/local/lib/python3.8/test/test_epoll.py'...
Compiling '/usr/local/lib/python3.8/test/test_errno.py'...
Compiling '/usr/local/lib/python3.8/test/test_exceptions.py'...
Compiling '/usr/local/lib/python3.8/test/test_funcattrs.py'...
Compiling '/usr/local/lib/python3.8/test/test_functools.py'...
Compiling '/usr/local/lib/python3.8/test/test_hash.py'...
Compiling '/usr/local/lib/python3.8/test/test_hmac.py'...
Compiling '/usr/local/lib/python3.8/test/test_http_cookies.py'...
Compiling '/usr/local/lib/python3.8/test/test_imghdr.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data01/subdirectory/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/two/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/fixtures.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_caching.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_relative_imports.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_namespace_pkgs.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_util.py'...
Compiling '/usr/local/lib/python3.8/test/test_ipaddress.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/test/test_largefile.py'...
Compiling '/usr/local/lib/python3.8/test/test_list.py'...
Compiling '/usr/local/lib/python3.8/test/test_long.py'...
Compiling '/usr/local/lib/python3.8/test/test_marshal.py'...
Compiling '/usr/local/lib/python3.8/test/test_memoryio.py'...
Compiling '/usr/local/lib/python3.8/test/test_metaclass.py'...
Compiling '/usr/local/lib/python3.8/test/test_mimetypes.py'...
Compiling '/usr/local/lib/python3.8/test/test_minidom.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_forkserver.py'...
Compiling '/usr/local/lib/python3.8/test/test_nis.py'...
Compiling '/usr/local/lib/python3.8/test/test_normalization.py'...
Compiling '/usr/local/lib/python3.8/test/test_opcodes.py'...
Compiling '/usr/local/lib/python3.8/test/test_optparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkg.py'...
Compiling '/usr/local/lib/python3.8/test/test_poll.py'...
Compiling '/usr/local/lib/python3.8/test/test_pow.py'...
Compiling '/usr/local/lib/python3.8/test/test_property.py'...
Compiling '/usr/local/lib/python3.8/test/test_pwd.py'...
Compiling '/usr/local/lib/python3.8/test/test_pydoc.py'...
Compiling '/usr/local/lib/python3.8/test/test_resource.py'...
Compiling '/usr/local/lib/python3.8/test/test_rlcompleter.py'...
Compiling '/usr/local/lib/python3.8/test/test_sched.py'...
Compiling '/usr/local/lib/python3.8/test/test_select.py'...
Compiling '/usr/local/lib/python3.8/test/test_setcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_shlex.py'...
Compiling '/usr/local/lib/python3.8/test/test_site.py'...
Compiling '/usr/local/lib/python3.8/test/test_sndhdr.py'...
Compiling '/usr/local/lib/python3.8/test/test_source_encoding.py'...
Compiling '/usr/local/lib/python3.8/test/test_startfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_statistics.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys_settrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_textwrap.py'...
Compiling '/usr/local/lib/python3.8/test/test_threading_local.py'...
Compiling '/usr/local/lib/python3.8/test/test_timeit.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_gprof2html.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_md5sum.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pathfix.py'...
Compiling '/usr/local/lib/python3.8/test/test_type_comments.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_file.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicodedata.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib_response.py'...
Compiling '/usr/local/lib/python3.8/test/test_userdict.py'...
Compiling '/usr/local/lib/python3.8/test/test_uu.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/data/import_warning.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/data/stacklevel.py'...
Compiling '/usr/local/lib/python3.8/test/test_wave.py'...
Compiling '/usr/local/lib/python3.8/test/test_weakref.py'...
Compiling '/usr/local/lib/python3.8/test/test_zlib.py'...
Compiling '/usr/local/lib/python3.8/threading.py'...
Compiling '/usr/local/lib/python3.8/tkinter/tix.py'...
Compiling '/usr/local/lib/python3.8/unittest/mock.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testasync.py'...
Compiling '/usr/local/lib/python3.8/urllib/robotparser.py'...
Compiling '/usr/local/lib/python3.8/wave.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/__init__.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/handlers.py'...
Compiling '/usr/local/lib/python3.8/xml/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/pulldom.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/parsers/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/handler.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/xmlreader.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/server.py'...

Compiling '/usr/local/lib/python3.8/test/test_gdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_grp.py'...
Compiling '/usr/local/lib/python3.8/test/test_heapq.py'...
Compiling '/usr/local/lib/python3.8/test/test_imp.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/binding2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpackage.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package/submodule.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package2/submodule2.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_path_hook.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/stubs.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_spec.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_default.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_enum.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_recursion.py'...
Compiling '/usr/local/lib/python3.8/test/test_kqueue.py'...
Compiling '/usr/local/lib/python3.8/test/test_listcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_lltrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_logging.py'...
Compiling '/usr/local/lib/python3.8/test/test_multibytecodec.py'...
Compiling '/usr/local/lib/python3.8/test/test_openpty.py'...
Compiling '/usr/local/lib/python3.8/test/test_os.py'...
Compiling '/usr/local/lib/python3.8/test/test_readline.py'...
Compiling '/usr/local/lib/python3.8/test/test_regrtest.py'...
Compiling '/usr/local/lib/python3.8/test/test_secrets.py'...
Compiling '/usr/local/lib/python3.8/test/test_set.py'...
Compiling '/usr/local/lib/python3.8/test/test_sqlite.py'...
Compiling '/usr/local/lib/python3.8/test/test_ssl.py'...
Compiling '/usr/local/lib/python3.8/test/test_thread.py'...
Compiling '/usr/local/lib/python3.8/test/test_threadedtempfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_threading.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_i18n.py'...
Compiling '/usr/local/lib/python3.8/test/test_ttk_textonly.py'...
Compiling '/usr/local/lib/python3.8/test/test_typing.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_dom_minicompat.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipfile64.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipimport.py'...
Compiling '/usr/local/lib/python3.8/test/xmltests.py'...
Compiling '/usr/local/lib/python3.8/test/ziptestdata/testdata_module_inside_zip.py'...
Compiling '/usr/local/lib/python3.8/tkinter/scrolledtext.py'...
Compiling '/usr/local/lib/python3.8/tkinter/simpledialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_functions.py'...
Compiling '/usr/local/lib/python3.8/traceback.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/lindenmayer.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/paint.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/two_canvases.py'...
Compiling '/usr/local/lib/python3.8/unittest/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/result.py'...
Compiling '/usr/local/lib/python3.8/unittest/signals.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/dummy.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_async_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_loader.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testsealable.py'...
Compiling '/usr/local/lib/python3.8/unittest/util.py'...
Compiling '/usr/local/lib/python3.8/uu.py'...
Compiling '/usr/local/lib/python3.8/venv/__init__.py'...
Compiling '/usr/local/lib/python3.8/weakref.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/domreg.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/minicompat.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/xmlbuilder.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/_exceptions.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/saxutils.py'...

Compiling '/usr/local/lib/python3.8/test/test_buffer.py'...
Compiling '/usr/local/lib/python3.8/test/test_contains.py'...
Compiling '/usr/local/lib/python3.8/test/test_contextlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_copy.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_dumb.py'...
Compiling '/usr/local/lib/python3.8/test/test_decimal.py'...
Compiling '/usr/local/lib/python3.8/test/test_exception_hierarchy.py'...
Compiling '/usr/local/lib/python3.8/test/test_extcall.py'...
Compiling '/usr/local/lib/python3.8/test/test_faulthandler.py'...
Compiling '/usr/local/lib/python3.8/test/test_fnmatch.py'...
Compiling '/usr/local/lib/python3.8/test/test_fractions.py'...
Compiling '/usr/local/lib/python3.8/test/test_generators.py'...
Compiling '/usr/local/lib/python3.8/test/test_getpass.py'...
Compiling '/usr/local/lib/python3.8/test/test_global.py'...
Compiling '/usr/local/lib/python3.8/test/test_hashlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_httpservers.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_case_sensitivity.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_fromlist.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_file_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_iterlen.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_decode.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_dump.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_fail.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass3.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_scanstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_linecache.py'...
Compiling '/usr/local/lib/python3.8/test/test_longexp.py'...
Compiling '/usr/local/lib/python3.8/test/test_lzma.py'...
Compiling '/usr/local/lib/python3.8/test/test_module.py'...
Compiling '/usr/local/lib/python3.8/test/test_modulefinder.py'...
Compiling '/usr/local/lib/python3.8/test/test_named_expressions.py'...
Compiling '/usr/local/lib/python3.8/test/test_ordered_dict.py'...
Compiling '/usr/local/lib/python3.8/test/test_pickle.py'...
Compiling '/usr/local/lib/python3.8/test/test_positional_only_arg.py'...
Compiling '/usr/local/lib/python3.8/test/test_pprint.py'...
Compiling '/usr/local/lib/python3.8/test/test_pyclbr.py'...
Compiling '/usr/local/lib/python3.8/test/test_quopri.py'...
Compiling '/usr/local/lib/python3.8/test/test_random.py'...
Compiling '/usr/local/lib/python3.8/test/test_richcmp.py'...
Compiling '/usr/local/lib/python3.8/test/test_scope.py'...
Compiling '/usr/local/lib/python3.8/test/test_shelve.py'...
Compiling '/usr/local/lib/python3.8/test/test_shutil.py'...
Compiling '/usr/local/lib/python3.8/test/test_strptime.py'...
Compiling '/usr/local/lib/python3.8/test/test_structseq.py'...
Compiling '/usr/local/lib/python3.8/test/test_subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/test_tempfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_timeout.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_fixcid.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_lll.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_sundry.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_unparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_tracemalloc.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2.py'...
Compiling '/usr/local/lib/python3.8/test/test_winreg.py'...
Compiling '/usr/local/lib/python3.8/test/test_xdrlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_etree_c.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipimport_support.py'...
Compiling '/usr/local/lib/python3.8/tkinter/__init__.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/round_dance.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/tree.py'...
Compiling '/usr/local/lib/python3.8/unittest/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testpatch.py'...
Compiling '/usr/local/lib/python3.8/webbrowser.py'...
Compiling '/usr/local/lib/python3.8/xdrlib.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/expatbuilder.py'...

Compiling '/usr/local/lib/python3.8/test/test_future4.py'...
Compiling '/usr/local/lib/python3.8/test/test_future5.py'...
Compiling '/usr/local/lib/python3.8/test/test_generator_stop.py'...
Compiling '/usr/local/lib/python3.8/test/test_genericpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_gzip.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/basic.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/basic2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/binding.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/indirect.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/rebinding2.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data01/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_main.py'...
Compiling '/usr/local/lib/python3.8/test/test_int_literal.py'...
Compiling '/usr/local/lib/python3.8/test/test_ioctl.py'...
Compiling '/usr/local/lib/python3.8/test/test_isinstance.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_encode_basestring_ascii.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_float.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass1.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass2.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_tool.py'...
Compiling '/usr/local/lib/python3.8/test/test_lib2to3.py'...
Compiling '/usr/local/lib/python3.8/test/test_locale.py'...
Compiling '/usr/local/lib/python3.8/test/test_mailcap.py'...
Compiling '/usr/local/lib/python3.8/test/test_math.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_spawn.py'...
Compiling '/usr/local/lib/python3.8/test/test_netrc.py'...
Compiling '/usr/local/lib/python3.8/test/test_numeric_tower.py'...
Compiling '/usr/local/lib/python3.8/test/test_ossaudiodev.py'...
Compiling '/usr/local/lib/python3.8/test/test_pathlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_slice.py'...
Compiling '/usr/local/lib/python3.8/test/test_sort.py'...
Compiling '/usr/local/lib/python3.8/test/test_strftime.py'...
Compiling '/usr/local/lib/python3.8/test/test_sunau.py'...
Compiling '/usr/local/lib/python3.8/test/test_support.py'...
Compiling '/usr/local/lib/python3.8/test/test_syslog.py'...
Compiling '/usr/local/lib/python3.8/test/test_tabnanny.py'...
Compiling '/usr/local/lib/python3.8/test/test_time.py'...
Compiling '/usr/local/lib/python3.8/test/test_trace.py'...
Compiling '/usr/local/lib/python3.8/test/test_turtle.py'...
Compiling '/usr/local/lib/python3.8/test/test_unpack.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib.py'...
Compiling '/usr/local/lib/python3.8/test/test_utf8source.py'...
Compiling '/usr/local/lib/python3.8/test/test_wait3.py'...
Compiling '/usr/local/lib/python3.8/test/test_wait4.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_xmlrpc_net.py'...
Compiling '/usr/local/lib/python3.8/test/test_xxtestfuzz.py'...
Compiling '/usr/local/lib/python3.8/test/test_yield_from.py'...
Compiling '/usr/local/lib/python3.8/test/threaded_import_hangers.py'...
Compiling '/usr/local/lib/python3.8/test/tracedmodules/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/tracedmodules/testmod.py'...
Compiling '/usr/local/lib/python3.8/test/win_console_handler.py'...
Compiling '/usr/local/lib/python3.8/textwrap.py'...
Compiling '/usr/local/lib/python3.8/tkinter/dnd.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_images.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_extensions.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_widgets.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/peace.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/rosette.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/yinyang.py'...
Compiling '/usr/local/lib/python3.8/typing.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_runner.py'...
Compiling '/usr/local/lib/python3.8/urllib/error.py'...
Compiling '/usr/local/lib/python3.8/urllib/response.py'...
Compiling '/usr/local/lib/python3.8/uuid.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/simple_server.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/validate.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/minidom.py'...

Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child/three.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_locks.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_open.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_resource.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/zipdata01/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/zipdata02/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_int.py'...
Compiling '/usr/local/lib/python3.8/test/test_iter.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_indent.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_separators.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_speedups.py'...
Compiling '/usr/local/lib/python3.8/test/test_keyword.py'...
Compiling '/usr/local/lib/python3.8/test/test_keywordonlyarg.py'...
Compiling '/usr/local/lib/python3.8/test/test_mailbox.py'...
Compiling '/usr/local/lib/python3.8/test/test_ntpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_pickletools.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkgutil.py'...
Compiling '/usr/local/lib/python3.8/test/test_profile.py'...
Compiling '/usr/local/lib/python3.8/test/test_pty.py'...
Compiling '/usr/local/lib/python3.8/test/test_queue.py'...
Compiling '/usr/local/lib/python3.8/test/test_runpy.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_string_literals.py'...
Compiling '/usr/local/lib/python3.8/test/test_stringprep.py'...
Compiling '/usr/local/lib/python3.8/test/test_struct.py'...
Compiling '/usr/local/lib/python3.8/test/test_symbol.py'...
Compiling '/usr/local/lib/python3.8/test/test_syntax.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys.py'...
Compiling '/usr/local/lib/python3.8/test/test_telnetlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_threaded_import.py'...
Compiling '/usr/local/lib/python3.8/test/test_threadsignals.py'...
Compiling '/usr/local/lib/python3.8/test/test_tix.py'...
Compiling '/usr/local/lib/python3.8/test/test_tk.py'...
Compiling '/usr/local/lib/python3.8/test/test_tokenize.py'...
Compiling '/usr/local/lib/python3.8/test/test_typechecks.py'...
Compiling '/usr/local/lib/python3.8/test/test_unary.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_file_functions.py'...
Compiling '/usr/local/lib/python3.8/test/test_unpack_ex.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2net.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllibnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_userlist.py'...
Compiling '/usr/local/lib/python3.8/test/test_venv.py'...
Compiling '/usr/local/lib/python3.8/test/test_webbrowser.py'...
Compiling '/usr/local/lib/python3.8/test/test_xmlrpc.py'...
Compiling '/usr/local/lib/python3.8/this.py'...
Compiling '/usr/local/lib/python3.8/timeit.py'...
Compiling '/usr/local/lib/python3.8/tkinter/colorchooser.py'...
Compiling '/usr/local/lib/python3.8/tkinter/constants.py'...
Compiling '/usr/local/lib/python3.8/tkinter/messagebox.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/runtktests.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_font.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_loadtk.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_misc.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_widgets.py'...
Compiling '/usr/local/lib/python3.8/tracemalloc.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/bytedesign.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/colormixer.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/forest.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/planet_and_moon.py'...
Compiling '/usr/local/lib/python3.8/unittest/async_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/support.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_discovery.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testmagicmethods.py'...
Compiling '/usr/local/lib/python3.8/urllib/__init__.py'...
Compiling '/usr/local/lib/python3.8/urllib/parse.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementInclude.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementTree.py'...

Compiling '/usr/local/lib/python3.8/test/test_file.py'...
Compiling '/usr/local/lib/python3.8/test/test_fileinput.py'...
Compiling '/usr/local/lib/python3.8/test/test_future.py'...
Compiling '/usr/local/lib/python3.8/test/test_gc.py'...
Compiling '/usr/local/lib/python3.8/test/test_gettext.py'...
Compiling '/usr/local/lib/python3.8/test/test_html.py'...
Compiling '/usr/local/lib/python3.8/test/test_htmlparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_httplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/from_cycle2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/rebinding.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_meta_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_case_sensitivity.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_lazy.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_read.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_windows.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_itertools.py'...
Compiling '/usr/local/lib/python3.8/test/test_msilib.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_main_handling.py'...
Compiling '/usr/local/lib/python3.8/test/test_operator.py'...
Compiling '/usr/local/lib/python3.8/test/test_pdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_picklebuffer.py'...
Compiling '/usr/local/lib/python3.8/test/test_pipes.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkgimport.py'...
Compiling '/usr/local/lib/python3.8/test/test_plistlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_posixpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_py_compile.py'...
Compiling '/usr/local/lib/python3.8/test/test_raise.py'...
Compiling '/usr/local/lib/python3.8/test/test_range.py'...
Compiling '/usr/local/lib/python3.8/test/test_robotparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_script_helper.py'...
Compiling '/usr/local/lib/python3.8/test/test_selectors.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtpd.py'...
Compiling '/usr/local/lib/python3.8/test/test_spwd.py'...
Compiling '/usr/local/lib/python3.8/test/test_stat.py'...
Compiling '/usr/local/lib/python3.8/test/test_structmembers.py'...
Compiling '/usr/local/lib/python3.8/test/test_subclassinit.py'...
Compiling '/usr/local/lib/python3.8/test/test_symtable.py'...
Compiling '/usr/local/lib/python3.8/test/test_sysconfig.py'...
Compiling '/usr/local/lib/python3.8/test/test_tcl.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_reindent.py'...
Compiling '/usr/local/lib/python3.8/test/test_ttk_guionly.py'...
Compiling '/usr/local/lib/python3.8/test/test_tuple.py'...
Compiling '/usr/local/lib/python3.8/test/test_ucn.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_identifiers.py'...
Compiling '/usr/local/lib/python3.8/test/test_unittest.py'...
Compiling '/usr/local/lib/python3.8/test/test_univnewlines.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2_localnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_urlparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_etree.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_text.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_variables.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_style.py'...
Compiling '/usr/local/lib/python3.8/tkinter/ttk.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/__init__.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/__main__.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/chaos.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/clock.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/minimal_hanoi.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/penrose.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/sorting_animate.py'...
Compiling '/usr/local/lib/python3.8/types.py'...
Compiling '/usr/local/lib/python3.8/unittest/loader.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/_test_warnings.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_break.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_functiontestcase.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_program.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_setups.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_suite.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testmock.py'...
Compiling '/usr/local/lib/python3.8/zipimport.py'...

Compiling '/usr/local/lib/python3.8/test/test_email/test_pickleable.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/torture_test.py'...
Compiling '/usr/local/lib/python3.8/test/test_ensurepip.py'...
Compiling '/usr/local/lib/python3.8/test/test_enumerate.py'...
Compiling '/usr/local/lib/python3.8/test/test_exception_variations.py'...
Compiling '/usr/local/lib/python3.8/test/test_file_eintr.py'...
Compiling '/usr/local/lib/python3.8/test/test_float.py'...
Compiling '/usr/local/lib/python3.8/test/test_genericclass.py'...
Compiling '/usr/local/lib/python3.8/test/test_getopt.py'...
Compiling '/usr/local/lib/python3.8/test/test_grammar.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg/subpackage2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/use.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package2/submodule1.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test___loader__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_packages.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_path_hook.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_index.py'...
Compiling '/usr/local/lib/python3.8/test/test_io.py'...
Compiling '/usr/local/lib/python3.8/test/test_memoryview.py'...
Compiling '/usr/local/lib/python3.8/test/test_mmap.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_fork.py'...
Compiling '/usr/local/lib/python3.8/test/test_nntplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_posix.py'...
Compiling '/usr/local/lib/python3.8/test/test_repl.py'...
Compiling '/usr/local/lib/python3.8/test/test_reprlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_sax.py'...
Compiling '/usr/local/lib/python3.8/test/test_signal.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtpnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_socketserver.py'...
Compiling '/usr/local/lib/python3.8/test/test_string.py'...
Compiling '/usr/local/lib/python3.8/test/test_strtod.py'...
Compiling '/usr/local/lib/python3.8/test/test_sundry.py'...
Compiling '/usr/local/lib/python3.8/test/test_super.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys_setprofile.py'...
Compiling '/usr/local/lib/python3.8/test/test_tarfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_types.py'...
Compiling '/usr/local/lib/python3.8/test/test_userstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_utf8_mode.py'...
Compiling '/usr/local/lib/python3.8/test/test_uuid.py'...
Compiling '/usr/local/lib/python3.8/test/test_weakset.py'...
Compiling '/usr/local/lib/python3.8/test/test_winconsoleio.py'...
Compiling '/usr/local/lib/python3.8/test/test_winsound.py'...
Compiling '/usr/local/lib/python3.8/test/test_with.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipapp.py'...
Compiling '/usr/local/lib/python3.8/test/testcodec.py'...
Compiling '/usr/local/lib/python3.8/test/tf_inherit_check.py'...
Compiling '/usr/local/lib/python3.8/test/time_hashlib.py'...
Compiling '/usr/local/lib/python3.8/tkinter/__main__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/commondialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/filedialog.py'...
Compiling '/usr/local/lib/python3.8/token.py'...
Compiling '/usr/local/lib/python3.8/tokenize.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/fractalcurves.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/nim.py'...
Compiling '/usr/local/lib/python3.8/unittest/runner.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_assertions.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_result.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_skipping.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/support.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testhelpers.py'...
Compiling '/usr/local/lib/python3.8/venv/__main__.py'...
Compiling '/usr/local/lib/python3.8/warnings.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/headers.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/util.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/NodeFilter.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementPath.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/client.py'...

Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/source.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/one/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test___package__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_source_encoding.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_metadata_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_zip.py'...
Compiling '/usr/local/lib/python3.8/test/test_inspect.py'...
Compiling '/usr/local/lib/python3.8/test/test_osx_env.py'...
Compiling '/usr/local/lib/python3.8/test/test_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_peepholer.py'...
Compiling '/usr/local/lib/python3.8/test/test_platform.py'...
Compiling '/usr/local/lib/python3.8/test/test_popen.py'...
Compiling '/usr/local/lib/python3.8/test/test_poplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_print.py'...
Compiling '/usr/local/lib/python3.8/test/test_pstats.py'...
Compiling '/usr/local/lib/python3.8/test/test_pulldom.py'...
Compiling '/usr/local/lib/python3.8/test/test_pyexpat.py'...
Compiling '/usr/local/lib/python3.8/test/test_re.py'...
Compiling '/usr/local/lib/python3.8/test/test_socket.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pdeps.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pindent.py'...
Compiling '/usr/local/lib/python3.8/test/test_traceback.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/test/test_wsgiref.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipfile.py'...
Compiling '/usr/local/lib/python3.8/tkinter/dialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/font.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/support.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_geometry_managers.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/widget_tests.py'...
Compiling '/usr/local/lib/python3.8/trace.py'...
Compiling '/usr/local/lib/python3.8/tty.py'...
Compiling '/usr/local/lib/python3.8/turtle.py'...
Compiling '/usr/local/lib/python3.8/unittest/main.py'...
Compiling '/usr/local/lib/python3.8/unittest/suite.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testcallable.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testsentinel.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testwith.py'...
Compiling '/usr/local/lib/python3.8/urllib/request.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/cElementTree.py'...
Compiling '/usr/local/lib/python3.8/xml/parsers/expat.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/expatreader.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/__init__.py'...
Compiling '/usr/local/lib/python3.8/zipapp.py'...
Compiling '/usr/local/lib/python3.8/zipfile.py'...
Listing '/usr/local/lib/python3.8/asyncio'...
Listing '/usr/local/lib/python3.8/collections'...
Listing '/usr/local/lib/python3.8/concurrent'...
Listing '/usr/local/lib/python3.8/concurrent/futures'...
Listing '/usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu'...
Listing '/usr/local/lib/python3.8/ctypes'...
Listing '/usr/local/lib/python3.8/ctypes/macholib'...
Listing '/usr/local/lib/python3.8/ctypes/test'...
Listing '/usr/local/lib/python3.8/curses'...
Listing '/usr/local/lib/python3.8/dbm'...
Listing '/usr/local/lib/python3.8/distutils'...
Listing '/usr/local/lib/python3.8/distutils/command'...
Listing '/usr/local/lib/python3.8/distutils/tests'...
Listing '/usr/local/lib/python3.8/email'...
Listing '/usr/local/lib/python3.8/email/mime'...
Listing '/usr/local/lib/python3.8/encodings'...
Listing '/usr/local/lib/python3.8/ensurepip'...
Listing '/usr/local/lib/python3.8/ensurepip/_bundled'...
Listing '/usr/local/lib/python3.8/html'...
Listing '/usr/local/lib/python3.8/http'...
Listing '/usr/local/lib/python3.8/idlelib'...
Listing '/usr/local/lib/python3.8/idlelib/Icons'...
Listing '/usr/local/lib/python3.8/idlelib/idle_test'...
Listing '/usr/local/lib/python3.8/importlib'...
Listing '/usr/local/lib/python3.8/json'...
Listing '/usr/local/lib/python3.8/lib-dynload'...
Listing '/usr/local/lib/python3.8/lib2to3'...
Listing '/usr/local/lib/python3.8/lib2to3/fixes'...
Listing '/usr/local/lib/python3.8/lib2to3/pgen2'...
Listing '/usr/local/lib/python3.8/lib2to3/tests'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data/fixers'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes'...
Listing '/usr/local/lib/python3.8/logging'...
Listing '/usr/local/lib/python3.8/multiprocessing'...
Listing '/usr/local/lib/python3.8/multiprocessing/dummy'...
Listing '/usr/local/lib/python3.8/pydoc_data'...
Listing '/usr/local/lib/python3.8/site-packages'...
Listing '/usr/local/lib/python3.8/sqlite3'...
Listing '/usr/local/lib/python3.8/sqlite3/test'...
Listing '/usr/local/lib/python3.8/test'...
Listing '/usr/local/lib/python3.8/test/audiodata'...
Listing '/usr/local/lib/python3.8/test/capath'...
Listing '/usr/local/lib/python3.8/test/cjkencodings'...
Listing '/usr/local/lib/python3.8/test/data'...
Listing '/usr/local/lib/python3.8/test/decimaltestdata'...
Listing '/usr/local/lib/python3.8/test/dtracedata'...
Listing '/usr/local/lib/python3.8/test/eintrdata'...
Listing '/usr/local/lib/python3.8/test/encoded_modules'...
Listing '/usr/local/lib/python3.8/test/imghdrdata'...
Listing '/usr/local/lib/python3.8/test/libregrtest'...
Listing '/usr/local/lib/python3.8/test/sndhdrdata'...
Listing '/usr/local/lib/python3.8/test/subprocessdata'...
Listing '/usr/local/lib/python3.8/test/support'...
Listing '/usr/local/lib/python3.8/test/test_asyncio'...
Listing '/usr/local/lib/python3.8/test/test_email'...
Listing '/usr/local/lib/python3.8/test/test_email/data'...
Listing '/usr/local/lib/python3.8/test/test_import'...
Listing '/usr/local/lib/python3.8/test/test_import/data'...
Listing '/usr/local/lib/python3.8/test/test_import/data/circular_imports'...
Listing '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg'...
Listing '/usr/local/lib/python3.8/test/test_import/data/package'...
Listing '/usr/local/lib/python3.8/test/test_import/data/package2'...
Listing '/usr/local/lib/python3.8/test/test_importlib'...
Listing '/usr/local/lib/python3.8/test/test_importlib/builtin'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data01'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data01/subdirectory'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02/one'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02/two'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/extension'...
Listing '/usr/local/lib/python3.8/test/test_importlib/frozen'...
Listing '/usr/local/lib/python3.8/test/test_importlib/import_'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/source'...
Listing '/usr/local/lib/python3.8/test/test_importlib/zipdata01'...
Listing '/usr/local/lib/python3.8/test/test_importlib/zipdata02'...
Listing '/usr/local/lib/python3.8/test/test_json'...
Listing '/usr/local/lib/python3.8/test/test_tools'...
Listing '/usr/local/lib/python3.8/test/test_warnings'...
Listing '/usr/local/lib/python3.8/test/test_warnings/data'...
Listing '/usr/local/lib/python3.8/test/tracedmodules'...
Listing '/usr/local/lib/python3.8/test/xmltestdata'...
Listing '/usr/local/lib/python3.8/test/xmltestdata/c14n-20'...
Listing '/usr/local/lib/python3.8/test/ziptestdata'...
Listing '/usr/local/lib/python3.8/tkinter'...
Listing '/usr/local/lib/python3.8/tkinter/test'...
Listing '/usr/local/lib/python3.8/tkinter/test/test_tkinter'...
Listing '/usr/local/lib/python3.8/tkinter/test/test_ttk'...
Listing '/usr/local/lib/python3.8/turtledemo'...
Listing '/usr/local/lib/python3.8/unittest'...
Listing '/usr/local/lib/python3.8/unittest/test'...
Listing '/usr/local/lib/python3.8/unittest/test/testmock'...
Listing '/usr/local/lib/python3.8/urllib'...
Listing '/usr/local/lib/python3.8/venv'...
Listing '/usr/local/lib/python3.8/venv/scripts'...
Listing '/usr/local/lib/python3.8/venv/scripts/common'...
Listing '/usr/local/lib/python3.8/venv/scripts/posix'...
Listing '/usr/local/lib/python3.8/wsgiref'...
Listing '/usr/local/lib/python3.8/xml'...
Listing '/usr/local/lib/python3.8/xml/dom'...
Listing '/usr/local/lib/python3.8/xml/etree'...
Listing '/usr/local/lib/python3.8/xml/parsers'...
Listing '/usr/local/lib/python3.8/xml/sax'...
Listing '/usr/local/lib/python3.8/xmlrpc'...
PYTHONPATH=/usr/local/lib/python3.8  \
	./python -E -Wi -O /usr/local/lib/python3.8/compileall.py \
	-j0 -d /usr/local/lib/python3.8 -f \
	-x 'bad_coding|badsyntax|site-packages|lib2to3/tests/data' \
	/usr/local/lib/python3.8
Listing '/usr/local/lib/python3.8'...
Compiling '/usr/local/lib/python3.8/_bootlocale.py'...
Compiling '/usr/local/lib/python3.8/_pydecimal.py'...
Compiling '/usr/local/lib/python3.8/asyncio/transports.py'...
Compiling '/usr/local/lib/python3.8/asyncio/trsock.py'...
Compiling '/usr/local/lib/python3.8/asyncio/windows_utils.py'...
Compiling '/usr/local/lib/python3.8/asyncore.py'...
Compiling '/usr/local/lib/python3.8/bisect.py'...
Compiling '/usr/local/lib/python3.8/cProfile.py'...
Compiling '/usr/local/lib/python3.8/cgi.py'...
Compiling '/usr/local/lib/python3.8/collections/__init__.py'...
Compiling '/usr/local/lib/python3.8/copy.py'...
Compiling '/usr/local/lib/python3.8/ctypes/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_array_in_pointer.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_cfuncs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_frombuffer.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_prototypes.py'...
Compiling '/usr/local/lib/python3.8/ctypes/util.py'...
Compiling '/usr/local/lib/python3.8/dataclasses.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_ext.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/register.py'...
Compiling '/usr/local/lib/python3.8/distutils/errors.py'...
Compiling '/usr/local/lib/python3.8/distutils/msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_rpm.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dir_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_data.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_text_file.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_util.py'...
Compiling '/usr/local/lib/python3.8/email/feedparser.py'...
Compiling '/usr/local/lib/python3.8/email/mime/__init__.py'...
Compiling '/usr/local/lib/python3.8/email/mime/audio.py'...
Compiling '/usr/local/lib/python3.8/email/mime/nonmultipart.py'...
Compiling '/usr/local/lib/python3.8/encodings/aliases.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp037.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1250.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp273.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp737.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp860.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp875.py'...
Compiling '/usr/local/lib/python3.8/encodings/gbk.py'...
Compiling '/usr/local/lib/python3.8/encodings/idna.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_t.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_cyrillic.py'...
Compiling '/usr/local/lib/python3.8/encodings/ptcp154.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32_le.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_8_sig.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/_uninstall.py'...
Compiling '/usr/local/lib/python3.8/fileinput.py'...
Compiling '/usr/local/lib/python3.8/html/__init__.py'...
Compiling '/usr/local/lib/python3.8/html/entities.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugger.py'...
Compiling '/usr/local/lib/python3.8/idlelib/dynoption.py'...
Compiling '/usr/local/lib/python3.8/idlelib/grep.py'...
Compiling '/usr/local/lib/python3.8/idlelib/help_about.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/mock_idle.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/template.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autocomplete_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_browser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_config.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_format.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pyparse.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_searchbase.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_sidebar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_tree.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_undo.py'...
Compiling '/usr/local/lib/python3.8/idlelib/mainmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/outwin.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pyshell.py'...
Compiling '/usr/local/lib/python3.8/imp.py'...
Compiling '/usr/local/lib/python3.8/importlib/abc.py'...
Compiling '/usr/local/lib/python3.8/inspect.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_exitfunc.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_getcwdu.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_imports.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_isinstance.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_methodattrs.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_next.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_renames.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_types.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_zip.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/patcomp.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/driver.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/refactor.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_main.py'...
Compiling '/usr/local/lib/python3.8/linecache.py'...
Compiling '/usr/local/lib/python3.8/logging/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/connection.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_fork.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_spawn_posix.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/queues.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/synchronize.py'...
Compiling '/usr/local/lib/python3.8/numbers.py'...
Compiling '/usr/local/lib/python3.8/pdb.py'...
Compiling '/usr/local/lib/python3.8/profile.py'...
Compiling '/usr/local/lib/python3.8/py_compile.py'...
Compiling '/usr/local/lib/python3.8/pydoc_data/__init__.py'...
Compiling '/usr/local/lib/python3.8/pydoc_data/topics.py'...
Compiling '/usr/local/lib/python3.8/socketserver.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/dbapi.py'...
Compiling '/usr/local/lib/python3.8/statistics.py'...
Compiling '/usr/local/lib/python3.8/symtable.py'...
Compiling '/usr/local/lib/python3.8/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module3.py'...
Compiling '/usr/local/lib/python3.8/test/audiotests.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_2.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/cmdline.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/save_env.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/win_utils.py'...
Compiling '/usr/local/lib/python3.8/test/lock_tests.py'...
Compiling '/usr/local/lib/python3.8/test/profilee.py'...
Compiling '/usr/local/lib/python3.8/test/pydocfodder.py'...
Compiling '/usr/local/lib/python3.8/test/pythoninfo.py'...
Compiling '/usr/local/lib/python3.8/test/test__xxsubinterpreters.py'...
Compiling '/usr/local/lib/python3.8/test/test_asynchat.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo2.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo3.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/functional.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_context.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_futures.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_pep492.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_protocols.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_queues.py'...Compiling '/usr/local/lib/python3.8/_markupbase.py'...
Compiling '/usr/local/lib/python3.8/_pyio.py'...
Compiling '/usr/local/lib/python3.8/asyncio/queues.py'...
Compiling '/usr/local/lib/python3.8/asyncio/selector_events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/windows_events.py'...
Compiling '/usr/local/lib/python3.8/bz2.py'...
Compiling '/usr/local/lib/python3.8/calendar.py'...
Compiling '/usr/local/lib/python3.8/collections/abc.py'...
Compiling '/usr/local/lib/python3.8/colorsys.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/__init__.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/process.py'...
Compiling '/usr/local/lib/python3.8/ctypes/_aix.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_bytes.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_callbacks.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_internals.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pep3118.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_slicing.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_wintypes.py'...
Compiling '/usr/local/lib/python3.8/curses/has_key.py'...
Compiling '/usr/local/lib/python3.8/dbm/dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/bcppcompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_wininst.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_clib.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_py.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/config.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/upload.py'...
Compiling '/usr/local/lib/python3.8/distutils/sysconfig.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_py.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_cygwinccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_msvc9compiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_upload.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_version.py'...
Compiling '/usr/local/lib/python3.8/email/_encoded_words.py'...
Compiling '/usr/local/lib/python3.8/email/base64mime.py'...
Compiling '/usr/local/lib/python3.8/email/header.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1006.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp855.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp869.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_r.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_arabic.py'...
Compiling '/usr/local/lib/python3.8/encodings/rot_13.py'...
Compiling '/usr/local/lib/python3.8/encodings/tis_620.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32_be.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_8.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/__init__.py'...
Compiling '/usr/local/lib/python3.8/fnmatch.py'...
Compiling '/usr/local/lib/python3.8/getopt.py'...
Compiling '/usr/local/lib/python3.8/gettext.py'...
Compiling '/usr/local/lib/python3.8/idlelib/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autocomplete.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autoexpand.py'...
Compiling '/usr/local/lib/python3.8/idlelib/browser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/codecontext.py'...
Compiling '/usr/local/lib/python3.8/idlelib/config_key.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugobj_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/htest.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_codecontext.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_iomenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_mainmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_parenmatch.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_rpc.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_run.py'...
Compiling '/usr/local/lib/python3.8/idlelib/multicall.py'...
Compiling '/usr/local/lib/python3.8/idlelib/stackviewer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/window.py'...
Compiling '/usr/local/lib/python3.8/importlib/metadata.py'...
Compiling '/usr/local/lib/python3.8/json/decoder.py'...
Compiling '/usr/local/lib/python3.8/json/scanner.py'...
Compiling '/usr/local/lib/python3.8/keyword.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/btm_utils.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_exec.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_filter.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_import.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_intern.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_long.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_metaclass.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_reduce.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_standarderror.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_urllib.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/conv.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/parse.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_all_fixers.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_refactor.py'...
Compiling '/usr/local/lib/python3.8/logging/config.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/dummy/connection.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/forkserver.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_spawn_win32.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/resource_tracker.py'...
Compiling '/usr/local/lib/python3.8/optparse.py'...
Compiling '/usr/local/lib/python3.8/quopri.py'...
Compiling '/usr/local/lib/python3.8/secrets.py'...
Compiling '/usr/local/lib/python3.8/shelve.py'...
Compiling '/usr/local/lib/python3.8/smtpd.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module2.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr3.py'...
Compiling '/usr/local/lib/python3.8/test/bytecode_helper.py'...
Compiling '/usr/local/lib/python3.8/test/curses_tests.py'...
Compiling '/usr/local/lib/python3.8/test/dis_module.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/line.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/module_iso_8859_1.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/module_koi8_r.py'...
Compiling '/usr/local/lib/python3.8/test/final_b.py'...
Compiling '/usr/local/lib/python3.8/test/future_test1.py'...
Compiling '/usr/local/lib/python3.8/test/gdb_sample.py'...
Compiling '/usr/local/lib/python3.8/test/imp_dummy.py'...
Compiling '/usr/local/lib/python3.8/test/inspect_fodder2.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/runtest_mp.py'...
Compiling '/usr/local/lib/python3.8/test/mod_generics_cache.py'...
Compiling '/usr/local/lib/python3.8/test/mp_preload.py'...
Compiling '/usr/local/lib/python3.8/test/pydoc_mod.py'...
Compiling '/usr/local/lib/python3.8/test/relimport.py'...
Compiling '/usr/local/lib/python3.8/test/reperf.py'...
Compiling '/usr/local/lib/python3.8/test/seq_tests.py'...
Compiling '/usr/local/lib/python3.8/test/test__osx_support.py'...
Compiling '/usr/local/lib/python3.8/test/test_abstract_numbers.py'...
Compiling '/usr/local/lib/python3.8/test/test_aifc.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncgen.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_locks.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_runners.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sendfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_windows_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_audioop.py'...
Compiling '/usr/local/lib/python3.8/test/test_bufio.py'...
Compiling '/usr/local/lib/python3.8/test/test_bz2.py'...
Compiling '/usr/local/lib/python3.8/test/test_code.py'...Compiling '/usr/local/lib/python3.8/__phello__.foo.py'...
Compiling '/usr/local/lib/python3.8/_strptime.py'...
Compiling '/usr/local/lib/python3.8/asyncio/constants.py'...
Compiling '/usr/local/lib/python3.8/asyncio/coroutines.py'...
Compiling '/usr/local/lib/python3.8/asyncio/log.py'...
Compiling '/usr/local/lib/python3.8/asyncio/proactor_events.py'...
Compiling '/usr/local/lib/python3.8/bdb.py'...
Compiling '/usr/local/lib/python3.8/contextlib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_cast.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_checkretval.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_init.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_macholib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_random_things.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_returnfuncptrs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_struct_fields.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/curses/ascii.py'...
Compiling '/usr/local/lib/python3.8/dbm/__init__.py'...
Compiling '/usr/local/lib/python3.8/difflib.py'...
Compiling '/usr/local/lib/python3.8/distutils/dist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_msi.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_check.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dep_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_filelist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_headers.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_log.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_spawn.py'...
Compiling '/usr/local/lib/python3.8/distutils/unixccompiler.py'...
Compiling '/usr/local/lib/python3.8/dummy_threading.py'...
Compiling '/usr/local/lib/python3.8/email/__init__.py'...
Compiling '/usr/local/lib/python3.8/email/_parseaddr.py'...
Compiling '/usr/local/lib/python3.8/email/charset.py'...
Compiling '/usr/local/lib/python3.8/email/message.py'...
Compiling '/usr/local/lib/python3.8/email/policy.py'...
Compiling '/usr/local/lib/python3.8/encodings/ascii.py'...
Compiling '/usr/local/lib/python3.8/encodings/big5hkscs.py'...
Compiling '/usr/local/lib/python3.8/encodings/bz2_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/charmap.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1140.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1253.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp500.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp852.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp862.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp866.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp950.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_kr.py'...
Compiling '/usr/local/lib/python3.8/encodings/hex_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_14.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_2.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_6.py'...
Compiling '/usr/local/lib/python3.8/encodings/johab.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_latin2.py'...
Compiling '/usr/local/lib/python3.8/encodings/oem.py'...
Compiling '/usr/local/lib/python3.8/encodings/unicode_escape.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/__main__.py'...
Compiling '/usr/local/lib/python3.8/filecmp.py'...
Compiling '/usr/local/lib/python3.8/genericpath.py'...
Compiling '/usr/local/lib/python3.8/getpass.py'...
Compiling '/usr/local/lib/python3.8/gzip.py'...
Compiling '/usr/local/lib/python3.8/http/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/__main__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autocomplete_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugger_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_colorizer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_outwin.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_squeezer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/parenmatch.py'...
Compiling '/usr/local/lib/python3.8/idlelib/redirector.py'...
Compiling '/usr/local/lib/python3.8/idlelib/rpc.py'...
Compiling '/usr/local/lib/python3.8/idlelib/squeezer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/tree.py'...
Compiling '/usr/local/lib/python3.8/importlib/machinery.py'...
Compiling '/usr/local/lib/python3.8/importlib/util.py'...
Compiling '/usr/local/lib/python3.8/ipaddress.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_idioms.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_input.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_nonzero.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_print.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_sys_exc.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_xrange.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/pgen.py'...
Compiling '/usr/local/lib/python3.8/locale.py'...
Compiling '/usr/local/lib/python3.8/mailcap.py'...
Compiling '/usr/local/lib/python3.8/mimetypes.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/dummy/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/heap.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/pool.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/spawn.py'...
Compiling '/usr/local/lib/python3.8/nntplib.py'...
Compiling '/usr/local/lib/python3.8/pipes.py'...
Compiling '/usr/local/lib/python3.8/platform.py'...
Compiling '/usr/local/lib/python3.8/pprint.py'...
Compiling '/usr/local/lib/python3.8/runpy.py'...
Compiling '/usr/local/lib/python3.8/shutil.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/userfunctions.py'...
Compiling '/usr/local/lib/python3.8/subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr.py'...
Compiling '/usr/local/lib/python3.8/test/bisect_cmd.py'...
Compiling '/usr/local/lib/python3.8/test/coding20731.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_2_str.py'...
Compiling '/usr/local/lib/python3.8/test/final_a.py'...
Compiling '/usr/local/lib/python3.8/test/fork_wait.py'...
Compiling '/usr/local/lib/python3.8/test/future_test2.py'...
Compiling '/usr/local/lib/python3.8/test/good_getattr.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/setup.py'...
Compiling '/usr/local/lib/python3.8/test/list_tests.py'...
Compiling '/usr/local/lib/python3.8/test/pyclbr_input.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest_no_doctests.py'...
Compiling '/usr/local/lib/python3.8/test/ssltests.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/fd_status.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/sigchild_ignore.py'...
Compiling '/usr/local/lib/python3.8/test/support/script_helper.py'...
Compiling '/usr/local/lib/python3.8/test/test___all__.py'...
Compiling '/usr/local/lib/python3.8/test/test__locale.py'...
Compiling '/usr/local/lib/python3.8/test/test_abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_argparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_transports.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_augassign.py'...
Compiling '/usr/local/lib/python3.8/test/test_baseexception.py'...
Compiling '/usr/local/lib/python3.8/test/test_bigaddrspace.py'...
Compiling '/usr/local/lib/python3.8/test/test_bigmem.py'...
Compiling '/usr/local/lib/python3.8/test/test_builtin.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd_line.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_cn.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_jp.py'...Compiling '/usr/local/lib/python3.8/_collections_abc.py'...
Compiling '/usr/local/lib/python3.8/_sysconfigdata__linux_x86_64-linux-gnu.py'...
Compiling '/usr/local/lib/python3.8/antigravity.py'...
Compiling '/usr/local/lib/python3.8/asynchat.py'...
Compiling '/usr/local/lib/python3.8/asyncio/__init__.py'...
Compiling '/usr/local/lib/python3.8/asyncio/__main__.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_subprocess.py'...
Compiling '/usr/local/lib/python3.8/asyncio/exceptions.py'...
Compiling '/usr/local/lib/python3.8/asyncio/locks.py'...
Compiling '/usr/local/lib/python3.8/asyncio/runners.py'...
Compiling '/usr/local/lib/python3.8/asyncio/subprocess.py'...
Compiling '/usr/local/lib/python3.8/base64.py'...
Compiling '/usr/local/lib/python3.8/code.py'...
Compiling '/usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/python-config.py'...
Compiling '/usr/local/lib/python3.8/crypt.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/dyld.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_anon.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_bitfields.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_delattr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_find.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_libc.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_numbers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_refcounts.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_sizes.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_structures.py'...
Compiling '/usr/local/lib/python3.8/distutils/_msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_msi.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/clean.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/config.py'...
Compiling '/usr/local/lib/python3.8/distutils/debug.py'...
Compiling '/usr/local/lib/python3.8/distutils/file_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dist.py'...
Compiling '/usr/local/lib/python3.8/distutils/version.py'...
Compiling '/usr/local/lib/python3.8/distutils/versionpredicate.py'...
Compiling '/usr/local/lib/python3.8/email/errors.py'...
Compiling '/usr/local/lib/python3.8/email/iterators.py'...
Compiling '/usr/local/lib/python3.8/email/utils.py'...
Compiling '/usr/local/lib/python3.8/encodings/base64_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1026.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1252.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1256.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp424.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp850.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp863.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_kr.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_11.py'...
Compiling '/usr/local/lib/python3.8/encodings/kz1048.py'...
Compiling '/usr/local/lib/python3.8/encodings/latin_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_iceland.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_romanian.py'...
Compiling '/usr/local/lib/python3.8/encodings/quopri_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16_be.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_7.py'...
Compiling '/usr/local/lib/python3.8/encodings/uu_codec.py'...
Compiling '/usr/local/lib/python3.8/enum.py'...
Compiling '/usr/local/lib/python3.8/glob.py'...
Compiling '/usr/local/lib/python3.8/hashlib.py'...
Compiling '/usr/local/lib/python3.8/hmac.py'...
Compiling '/usr/local/lib/python3.8/html/parser.py'...
Compiling '/usr/local/lib/python3.8/http/server.py'...
Compiling '/usr/local/lib/python3.8/idlelib/calltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/calltip_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/colorizer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/config.py'...
Compiling '/usr/local/lib/python3.8/idlelib/delegator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/filelist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/help.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autocomplete.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugger.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugger_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_editor.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_hyperparser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_runscript.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_scrolledlist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_search.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_tooltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/scrolledlist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/sidebar.py'...
Compiling '/usr/local/lib/python3.8/json/encoder.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixer_base.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_basestring.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_dict.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_future.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_imports2.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_itertools_imports.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_ne.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_numliterals.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_raise.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_throw.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_xreadlines.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/main.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/literals.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/tokenize.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_parser.py'...
Compiling '/usr/local/lib/python3.8/lzma.py'...
Compiling '/usr/local/lib/python3.8/mailbox.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/reduction.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/sharedctypes.py'...
Compiling '/usr/local/lib/python3.8/ntpath.py'...
Compiling '/usr/local/lib/python3.8/plistlib.py'...
Compiling '/usr/local/lib/python3.8/pydoc.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/transactions.py'...
Compiling '/usr/local/lib/python3.8/sre_constants.py'...
Compiling '/usr/local/lib/python3.8/sre_parse.py'...
Compiling '/usr/local/lib/python3.8/tempfile.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_1_str.py'...
Compiling '/usr/local/lib/python3.8/test/doctest_aliases.py'...
Compiling '/usr/local/lib/python3.8/test/double_const.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/call_stack.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/gc.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/main.py'...
Compiling '/usr/local/lib/python3.8/test/make_ssl_certs.py'...
Compiling '/usr/local/lib/python3.8/test/mock_socket.py'...
Compiling '/usr/local/lib/python3.8/test/outstanding_bugs.py'...
Compiling '/usr/local/lib/python3.8/test/pickletester.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_buffered_proto.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_unix_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_buffer.py'...
Compiling '/usr/local/lib/python3.8/test/test_copy.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm.py'...
Compiling '/usr/local/lib/python3.8/test/test_decimal.py'...
Compiling '/usr/local/lib/python3.8/test/test_faulthandler.py'...
Compiling '/usr/local/lib/python3.8/test/test_flufl.py'...Compiling '/usr/local/lib/python3.8/_compat_pickle.py'...
Compiling '/usr/local/lib/python3.8/_py_abc.py'...
Compiling '/usr/local/lib/python3.8/_weakrefset.py'...
Compiling '/usr/local/lib/python3.8/aifc.py'...
Compiling '/usr/local/lib/python3.8/asyncio/format_helpers.py'...
Compiling '/usr/local/lib/python3.8/asyncio/futures.py'...
Compiling '/usr/local/lib/python3.8/asyncio/sslproto.py'...
Compiling '/usr/local/lib/python3.8/binhex.py'...
Compiling '/usr/local/lib/python3.8/codecs.py'...
Compiling '/usr/local/lib/python3.8/csv.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_buffers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_incomplete.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_loading.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_memfunctions.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_python_api.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_repr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_simplesubclasses.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_stringptr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_varsize_struct.py'...
Compiling '/usr/local/lib/python3.8/ctypes/wintypes.py'...
Compiling '/usr/local/lib/python3.8/distutils/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/archive_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_rpm.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_headers.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_lib.py'...
Compiling '/usr/local/lib/python3.8/distutils/cygwinccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/fancy_getopt.py'...
Compiling '/usr/local/lib/python3.8/distutils/spawn.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_archive_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_clean.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_config.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_extension.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_sdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/text_file.py'...
Compiling '/usr/local/lib/python3.8/distutils/util.py'...
Compiling '/usr/local/lib/python3.8/email/encoders.py'...
Compiling '/usr/local/lib/python3.8/email/generator.py'...
Compiling '/usr/local/lib/python3.8/email/parser.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1251.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1255.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1258.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp720.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp864.py'...
Compiling '/usr/local/lib/python3.8/encodings/hp_roman8.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_2.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_10.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_13.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_15.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_3.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_7.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_9.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_centeuro.py'...
Compiling '/usr/local/lib/python3.8/encodings/mbcs.py'...
Compiling '/usr/local/lib/python3.8/encodings/punycode.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jisx0213.py'...
Compiling '/usr/local/lib/python3.8/ftplib.py'...
Compiling '/usr/local/lib/python3.8/http/client.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugobj.py'...
Compiling '/usr/local/lib/python3.8/idlelib/format.py'...
Compiling '/usr/local/lib/python3.8/idlelib/hyperparser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/mock_tk.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_calltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_config_key.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugobj_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_filelist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_help_about.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_macosx.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pyshell.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_redirector.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_stackviewer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_statusbar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_text.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_zoomheight.py'...
Compiling '/usr/local/lib/python3.8/idlelib/macosx.py'...
Compiling '/usr/local/lib/python3.8/idlelib/run.py'...
Compiling '/usr/local/lib/python3.8/importlib/__init__.py'...
Compiling '/usr/local/lib/python3.8/importlib/_bootstrap_external.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_execfile.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_has_key.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_map.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_operator.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/grammar.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/pytree_idempotency.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_util.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/context.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_forkserver.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/process.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/shared_memory.py'...
Compiling '/usr/local/lib/python3.8/os.py'...
Compiling '/usr/local/lib/python3.8/pkgutil.py'...
Compiling '/usr/local/lib/python3.8/posixpath.py'...
Compiling '/usr/local/lib/python3.8/reprlib.py'...
Compiling '/usr/local/lib/python3.8/smtplib.py'...
Compiling '/usr/local/lib/python3.8/stat.py'...
Compiling '/usr/local/lib/python3.8/string.py'...
Compiling '/usr/local/lib/python3.8/sysconfig.py'...
Compiling '/usr/local/lib/python3.8/test/audit-tests.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/instance.py'...
Compiling '/usr/local/lib/python3.8/test/eintrdata/eintr_tester.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/pgo.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/runtest.py'...
Compiling '/usr/local/lib/python3.8/test/memory_watchdog.py'...
Compiling '/usr/local/lib/python3.8/test/mp_fork_bomb.py'...
Compiling '/usr/local/lib/python3.8/test/multibytecodec_support.py'...
Compiling '/usr/local/lib/python3.8/test/support/testresult.py'...
Compiling '/usr/local/lib/python3.8/test/test___future__.py'...
Compiling '/usr/local/lib/python3.8/test/test__opcode.py'...
Compiling '/usr/local/lib/python3.8/test/test_array.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_selector_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_binascii.py'...
Compiling '/usr/local/lib/python3.8/test/test_bytes.py'...
Compiling '/usr/local/lib/python3.8/test/test_configparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_curses.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_ndbm.py'...
Compiling '/usr/local/lib/python3.8/test/test_defaultdict.py'...
Compiling '/usr/local/lib/python3.8/test/test_descr.py'...
Compiling '/usr/local/lib/python3.8/test/test_exception_variations.py'...
Compiling '/usr/local/lib/python3.8/test/test_exceptions.py'...
Compiling '/usr/local/lib/python3.8/test/test_fileinput.py'...
Compiling '/usr/local/lib/python3.8/test/test_fork1.py'...
Compiling '/usr/local/lib/python3.8/test/test_format.py'...
Compiling '/usr/local/lib/python3.8/test/test_frozen.py'...
Compiling '/usr/local/lib/python3.8/test/test_fstring.py'...Compiling '/usr/local/lib/python3.8/__future__.py'...
Compiling '/usr/local/lib/python3.8/_osx_support.py'...
Compiling '/usr/local/lib/python3.8/_sitebuiltins.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/tasks.py'...
Compiling '/usr/local/lib/python3.8/asyncio/unix_events.py'...
Compiling '/usr/local/lib/python3.8/chunk.py'...
Compiling '/usr/local/lib/python3.8/cmd.py'...
Compiling '/usr/local/lib/python3.8/codeop.py'...
Compiling '/usr/local/lib/python3.8/compileall.py'...
Compiling '/usr/local/lib/python3.8/configparser.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_as_parameter.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_errno.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_funcptr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_keeprefs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pickling.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_unaligned_structures.py'...
Compiling '/usr/local/lib/python3.8/curses/panel.py'...
Compiling '/usr/local/lib/python3.8/datetime.py'...
Compiling '/usr/local/lib/python3.8/distutils/extension.py'...
Compiling '/usr/local/lib/python3.8/distutils/log.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/support.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_clib.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_core.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_lib.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_register.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_versionpredicate.py'...
Compiling '/usr/local/lib/python3.8/doctest.py'...
Compiling '/usr/local/lib/python3.8/encodings/big5.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1125.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1257.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp437.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp856.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp857.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp932.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_ext.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_5.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_8.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_farsi.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_roman.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jis_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16_le.py'...
Compiling '/usr/local/lib/python3.8/fractions.py'...
Compiling '/usr/local/lib/python3.8/heapq.py'...
Compiling '/usr/local/lib/python3.8/http/cookiejar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/editor.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugobj.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_delegator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_editmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_grep.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_history.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pathbrowser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_query.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_searchengine.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_textview.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_window.py'...
Compiling '/usr/local/lib/python3.8/idlelib/iomenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/percolator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/replace.py'...
Compiling '/usr/local/lib/python3.8/idlelib/runscript.py'...
Compiling '/usr/local/lib/python3.8/idlelib/searchbase.py'...
Compiling '/usr/local/lib/python3.8/idlelib/statusbar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/tooltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/zzdummy.py'...
Compiling '/usr/local/lib/python3.8/imaplib.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/btm_matcher.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_asserts.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_except.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_funcattrs.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_paren.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_reload.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_tuple_params.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pygram.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pytree.py'...
Compiling '/usr/local/lib/python3.8/logging/handlers.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/managers.py'...
Compiling '/usr/local/lib/python3.8/opcode.py'...
Compiling '/usr/local/lib/python3.8/pathlib.py'...
Compiling '/usr/local/lib/python3.8/poplib.py'...
Compiling '/usr/local/lib/python3.8/pstats.py'...
Compiling '/usr/local/lib/python3.8/re.py'...
Compiling '/usr/local/lib/python3.8/rlcompleter.py'...
Compiling '/usr/local/lib/python3.8/sched.py'...
Compiling '/usr/local/lib/python3.8/shlex.py'...
Compiling '/usr/local/lib/python3.8/signal.py'...
Compiling '/usr/local/lib/python3.8/site.py'...
Compiling '/usr/local/lib/python3.8/socket.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/factory.py'...
Compiling '/usr/local/lib/python3.8/sre_compile.py'...
Compiling '/usr/local/lib/python3.8/struct.py'...
Compiling '/usr/local/lib/python3.8/sunau.py'...
Compiling '/usr/local/lib/python3.8/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/_test_multiprocessing.py'...
Compiling '/usr/local/lib/python3.8/test/regrtest.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest_no_docstrings.py'...
Compiling '/usr/local/lib/python3.8/test/signalinterproctester.py'...
Compiling '/usr/local/lib/python3.8/test/ssl_servers.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/input_reader.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/qcat.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/qgrep.py'...
Compiling '/usr/local/lib/python3.8/test/support/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_proactor_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_server.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sslproto.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncore.py'...
Compiling '/usr/local/lib/python3.8/test/test_binop.py'...
Compiling '/usr/local/lib/python3.8/test/test_capi.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd_line_script.py'...
Compiling '/usr/local/lib/python3.8/test/test_compile.py'...
Compiling '/usr/local/lib/python3.8/test/test_copyreg.py'...
Compiling '/usr/local/lib/python3.8/test/test_cprofile.py'...
Compiling '/usr/local/lib/python3.8/test/test_crashers.py'...
Compiling '/usr/local/lib/python3.8/test/test_crypt.py'...
Compiling '/usr/local/lib/python3.8/test/test_ctypes.py'...
Compiling '/usr/local/lib/python3.8/test/test_dataclasses.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_message.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_pickleable.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_policy.py'...
Compiling '/usr/local/lib/python3.8/test/test_embed.py'...
Compiling '/usr/local/lib/python3.8/test/test_errno.py'...
Compiling '/usr/local/lib/python3.8/test/test_exception_hierarchy.py'...
Compiling '/usr/local/lib/python3.8/test/test_extcall.py'...
Compiling '/usr/local/lib/python3.8/test/test_fcntl.py'...
Compiling '/usr/local/lib/python3.8/test/test_file_eintr.py'...
Compiling '/usr/local/lib/python3.8/test/test_filecmp.py'...
Compiling '/usr/local/lib/python3.8/test/test_float.py'...
Compiling '/usr/local/lib/python3.8/test/test_gc.py'...
Compiling '/usr/local/lib/python3.8/test/test_heapq.py'...
Compiling '/usr/local/lib/python3.8/test/test_httplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/rebinding.py'...Compiling '/usr/local/lib/python3.8/_dummy_thread.py'...
Compiling '/usr/local/lib/python3.8/_threading_local.py'...
Compiling '/usr/local/lib/python3.8/abc.py'...
Compiling '/usr/local/lib/python3.8/argparse.py'...
Compiling '/usr/local/lib/python3.8/concurrent/__init__.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/_base.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/thread.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/framework.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_byteswap.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_objects.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pointers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_values.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_win32.py'...
Compiling '/usr/local/lib/python3.8/curses/textpad.py'...
Compiling '/usr/local/lib/python3.8/distutils/ccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_egg_info.py'...
Compiling '/usr/local/lib/python3.8/distutils/core.py'...
Compiling '/usr/local/lib/python3.8/distutils/dep_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/msvc9compiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_ext.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_sysconfig.py'...
Compiling '/usr/local/lib/python3.8/email/_policybase.py'...
Compiling '/usr/local/lib/python3.8/email/contentmanager.py'...
Compiling '/usr/local/lib/python3.8/email/headerregistry.py'...
Compiling '/usr/local/lib/python3.8/email/mime/application.py'...
Compiling '/usr/local/lib/python3.8/email/mime/base.py'...
Compiling '/usr/local/lib/python3.8/email/mime/image.py'...
Compiling '/usr/local/lib/python3.8/email/mime/message.py'...
Compiling '/usr/local/lib/python3.8/email/mime/multipart.py'...
Compiling '/usr/local/lib/python3.8/email/mime/text.py'...
Compiling '/usr/local/lib/python3.8/email/quoprimime.py'...
Compiling '/usr/local/lib/python3.8/encodings/__init__.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1254.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp858.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jis_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jp.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_3.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_4.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_u.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_croatian.py'...
Compiling '/usr/local/lib/python3.8/encodings/palmos.py'...
Compiling '/usr/local/lib/python3.8/encodings/undefined.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16.py'...
Compiling '/usr/local/lib/python3.8/formatter.py'...
Compiling '/usr/local/lib/python3.8/http/cookies.py'...
Compiling '/usr/local/lib/python3.8/idlelib/history.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autoexpand.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_calltip_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_configdialog.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pathbrowser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/query.py'...
Compiling '/usr/local/lib/python3.8/idlelib/search.py'...
Compiling '/usr/local/lib/python3.8/idlelib/searchengine.py'...
Compiling '/usr/local/lib/python3.8/idlelib/textview.py'...
Compiling '/usr/local/lib/python3.8/idlelib/zoomheight.py'...
Compiling '/usr/local/lib/python3.8/imghdr.py'...
Compiling '/usr/local/lib/python3.8/importlib/_bootstrap.py'...
Compiling '/usr/local/lib/python3.8/json/tool.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/__main__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_apply.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_buffer.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_itertools.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_raw_input.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_repr.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_unicode.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/token.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_pytree.py'...
Compiling '/usr/local/lib/python3.8/modulefinder.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/resource_sharer.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/util.py'...
Compiling '/usr/local/lib/python3.8/pickletools.py'...
Compiling '/usr/local/lib/python3.8/queue.py'...
Compiling '/usr/local/lib/python3.8/selectors.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/__init__.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/dump.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/backup.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/regression.py'...
Compiling '/usr/local/lib/python3.8/ssl.py'...
Compiling '/usr/local/lib/python3.8/tarfile.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_textanno.py'...
Compiling '/usr/local/lib/python3.8/test/inspect_fodder.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/refleak.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/utils.py'...
Compiling '/usr/local/lib/python3.8/test/mapping_tests.py'...
Compiling '/usr/local/lib/python3.8/test/re_tests.py'...
Compiling '/usr/local/lib/python3.8/test/sortperf.py'...
Compiling '/usr/local/lib/python3.8/test/string_tests.py'...
Compiling '/usr/local/lib/python3.8/test/test_asdl_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_ast.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sock_lowlevel.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_streams.py'...
Compiling '/usr/local/lib/python3.8/test/test_audit.py'...
Compiling '/usr/local/lib/python3.8/test/test_base64.py'...
Compiling '/usr/local/lib/python3.8/test/test_binhex.py'...
Compiling '/usr/local/lib/python3.8/test/test_bisect.py'...
Compiling '/usr/local/lib/python3.8/test/test_c_locale_coercion.py'...
Compiling '/usr/local/lib/python3.8/test/test_call.py'...
Compiling '/usr/local/lib/python3.8/test/test_cgitb.py'...
Compiling '/usr/local/lib/python3.8/test/test_charmapcodec.py'...
Compiling '/usr/local/lib/python3.8/test/test_clinic.py'...
Compiling '/usr/local/lib/python3.8/test/test_codeccallbacks.py'...
Compiling '/usr/local/lib/python3.8/test/test_concurrent_futures.py'...
Compiling '/usr/local/lib/python3.8/test/test_contextlib_async.py'...
Compiling '/usr/local/lib/python3.8/test/test_csv.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test__encoded_words.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_inversion.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/torture_test.py'...
Compiling '/usr/local/lib/python3.8/test/test_eof.py'...
Compiling '/usr/local/lib/python3.8/test/test_epoll.py'...
Compiling '/usr/local/lib/python3.8/test/test_file.py'...
Compiling '/usr/local/lib/python3.8/test/test_finalization.py'...
Compiling '/usr/local/lib/python3.8/test/test_future.py'...
Compiling '/usr/local/lib/python3.8/test/test_future3.py'...
Compiling '/usr/local/lib/python3.8/test/test_generator_stop.py'...
Compiling '/usr/local/lib/python3.8/test/test_genericclass.py'...
Compiling '/usr/local/lib/python3.8/test/test_getargs2.py'...
Compiling '/usr/local/lib/python3.8/test/test_idle.py'...
Compiling '/usr/local/lib/python3.8/test/test_imghdr.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data01/subdirectory/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/one/__init__.py'...Compiling '/usr/local/lib/python3.8/_compression.py'...
Compiling '/usr/local/lib/python3.8/ast.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_futures.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_tasks.py'...
Compiling '/usr/local/lib/python3.8/asyncio/events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/protocols.py'...
Compiling '/usr/local/lib/python3.8/asyncio/staggered.py'...
Compiling '/usr/local/lib/python3.8/asyncio/streams.py'...
Compiling '/usr/local/lib/python3.8/cgitb.py'...
Compiling '/usr/local/lib/python3.8/contextvars.py'...
Compiling '/usr/local/lib/python3.8/copyreg.py'...
Compiling '/usr/local/lib/python3.8/ctypes/_endian.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/dylib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_arrays.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_functions.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_parameters.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_strings.py'...
Compiling '/usr/local/lib/python3.8/curses/__init__.py'...
Compiling '/usr/local/lib/python3.8/dbm/gnu.py'...
Compiling '/usr/local/lib/python3.8/dbm/ndbm.py'...
Compiling '/usr/local/lib/python3.8/decimal.py'...
Compiling '/usr/local/lib/python3.8/dis.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/check.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_data.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/sdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/dir_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/filelist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_wininst.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_config_cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_file_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_unixccompiler.py'...
Compiling '/usr/local/lib/python3.8/email/_header_value_parser.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp775.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp861.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp865.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp874.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp949.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jisx0213.py'...
Compiling '/usr/local/lib/python3.8/encodings/gb18030.py'...
Compiling '/usr/local/lib/python3.8/encodings/gb2312.py'...
Compiling '/usr/local/lib/python3.8/encodings/hz.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_16.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_greek.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_turkish.py'...
Compiling '/usr/local/lib/python3.8/encodings/raw_unicode_escape.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jis.py'...
Compiling '/usr/local/lib/python3.8/encodings/zlib_codec.py'...
Compiling '/usr/local/lib/python3.8/functools.py'...
Compiling '/usr/local/lib/python3.8/idlelib/configdialog.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_help.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_multicall.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_percolator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_replace.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_warning.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pyparse.py'...
Compiling '/usr/local/lib/python3.8/idlelib/undo.py'...
Compiling '/usr/local/lib/python3.8/importlib/resources.py'...
Compiling '/usr/local/lib/python3.8/io.py'...
Compiling '/usr/local/lib/python3.8/json/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixer_util.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_set_literal.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_ws_comma.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/__main__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/support.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_fixers.py'...
Compiling '/usr/local/lib/python3.8/netrc.py'...
Compiling '/usr/local/lib/python3.8/nturl2path.py'...
Compiling '/usr/local/lib/python3.8/operator.py'...
Compiling '/usr/local/lib/python3.8/pickle.py'...
Compiling '/usr/local/lib/python3.8/pty.py'...
Compiling '/usr/local/lib/python3.8/pyclbr.py'...
Compiling '/usr/local/lib/python3.8/random.py'...
Compiling '/usr/local/lib/python3.8/sndhdr.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/dbapi2.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/dump.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/hooks.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/types.py'...
Compiling '/usr/local/lib/python3.8/stringprep.py'...
Compiling '/usr/local/lib/python3.8/symbol.py'...
Compiling '/usr/local/lib/python3.8/tabnanny.py'...
Compiling '/usr/local/lib/python3.8/telnetlib.py'...
Compiling '/usr/local/lib/python3.8/test/autotest.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr2.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_1.py'...
Compiling '/usr/local/lib/python3.8/test/datetimetester.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_base_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_windows_utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_atexit.py'...
Compiling '/usr/local/lib/python3.8/test/test_bdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_bool.py'...
Compiling '/usr/local/lib/python3.8/test/test_calendar.py'...
Compiling '/usr/local/lib/python3.8/test/test_cgi.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd.py'...
Compiling '/usr/local/lib/python3.8/test/test_code_module.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_hk.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_tw.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecs.py'...
Compiling '/usr/local/lib/python3.8/test/test_distutils.py'...
Compiling '/usr/local/lib/python3.8/test/test_doctest2.py'...
Compiling '/usr/local/lib/python3.8/test/test_dtrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_dynamicclassattribute.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_contentmanager.py'...
Compiling '/usr/local/lib/python3.8/test/test_enum.py'...
Compiling '/usr/local/lib/python3.8/test/test_html.py'...
Compiling '/usr/local/lib/python3.8/test/test_htmlparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/basic.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/basic2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/binding.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg/subpackage2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/use.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_caching.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_relative_imports.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/stubs.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_spec.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package/submodule.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package2/submodule2.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_case_sensitivity.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_packages.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_main.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_resource.py'...
Compiling '/usr/local/lib/python3.8/test/test_inspect.py'...
Compiling '/usr/local/lib/python3.8/test/test_metaclass.py'...
Compiling '/usr/local/lib/python3.8/test/test_minidom.py'...
Compiling '/usr/local/lib/python3.8/test/test_openpty.py'...
Compiling '/usr/local/lib/python3.8/test/test_operator.py'...
Compiling '/usr/local/lib/python3.8/test/test_pathlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_script_helper.py'...
Compiling '/usr/local/lib/python3.8/test/test_selectors.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtpd.py'...
Compiling '/usr/local/lib/python3.8/test/test_statistics.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_reindent.py'...
Compiling '/usr/local/lib/python3.8/test/test_ttk_guionly.py'...
Compiling '/usr/local/lib/python3.8/test/test_ttk_textonly.py'...
Compiling '/usr/local/lib/python3.8/test/test_tuple.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/test/test_winreg.py'...
Compiling '/usr/local/lib/python3.8/test/test_xmlrpc.py'...
Compiling '/usr/local/lib/python3.8/test/ziptestdata/testdata_module_inside_zip.py'...
Compiling '/usr/local/lib/python3.8/this.py'...
Compiling '/usr/local/lib/python3.8/tkinter/font.py'...
Compiling '/usr/local/lib/python3.8/tkinter/tix.py'...
Compiling '/usr/local/lib/python3.8/typing.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_program.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_setups.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_suite.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testcallable.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testhelpers.py'...
Compiling '/usr/local/lib/python3.8/unittest/util.py'...
Compiling '/usr/local/lib/python3.8/urllib/request.py'...
Compiling '/usr/local/lib/python3.8/xml/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/expatbuilder.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/xmlreader.py'...

Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test___loader__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child/three.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_locks.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_open.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_zip.py'...
Compiling '/usr/local/lib/python3.8/test/test_int_literal.py'...
Compiling '/usr/local/lib/python3.8/test/test_itertools.py'...
Compiling '/usr/local/lib/python3.8/test/test_mimetypes.py'...
Compiling '/usr/local/lib/python3.8/test/test_modulefinder.py'...
Compiling '/usr/local/lib/python3.8/test/test_netrc.py'...
Compiling '/usr/local/lib/python3.8/test/test_numeric_tower.py'...
Compiling '/usr/local/lib/python3.8/test/test_ordered_dict.py'...
Compiling '/usr/local/lib/python3.8/test/test_picklebuffer.py'...
Compiling '/usr/local/lib/python3.8/test/test_pickletools.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkg.py'...
Compiling '/usr/local/lib/python3.8/test/test_poplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_print.py'...
Compiling '/usr/local/lib/python3.8/test/test_py_compile.py'...
Compiling '/usr/local/lib/python3.8/test/test_pydoc.py'...
Compiling '/usr/local/lib/python3.8/test/test_shutil.py'...
Compiling '/usr/local/lib/python3.8/test/test_symbol.py'...
Compiling '/usr/local/lib/python3.8/test/test_symtable.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys.py'...
Compiling '/usr/local/lib/python3.8/test/test_threaded_import.py'...
Compiling '/usr/local/lib/python3.8/test/test_threadsignals.py'...
Compiling '/usr/local/lib/python3.8/test/test_tix.py'...
Compiling '/usr/local/lib/python3.8/test/test_tk.py'...
Compiling '/usr/local/lib/python3.8/test/test_tokenize.py'...
Compiling '/usr/local/lib/python3.8/test/test_turtle.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_file.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_file_functions.py'...
Compiling '/usr/local/lib/python3.8/test/test_univnewlines.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib.py'...
Compiling '/usr/local/lib/python3.8/test/test_venv.py'...
Compiling '/usr/local/lib/python3.8/test/test_weakset.py'...
Compiling '/usr/local/lib/python3.8/test/test_webbrowser.py'...
Compiling '/usr/local/lib/python3.8/test/test_xdrlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_etree_c.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipfile64.py'...
Compiling '/usr/local/lib/python3.8/test/test_zlib.py'...
Compiling '/usr/local/lib/python3.8/tkinter/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_extensions.py'...
Compiling '/usr/local/lib/python3.8/token.py'...
Compiling '/usr/local/lib/python3.8/tokenize.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/colormixer.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/fractalcurves.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/nim.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/round_dance.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/yinyang.py'...
Compiling '/usr/local/lib/python3.8/unittest/signals.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/dummy.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/support.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_async_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_case.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/headers.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/simple_server.py'...
Compiling '/usr/local/lib/python3.8/xdrlib.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/pulldom.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/cElementTree.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/_exceptions.py'...

Compiling '/usr/local/lib/python3.8/test/test_frame.py'...
Compiling '/usr/local/lib/python3.8/test/test_ftplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_future5.py'...
Compiling '/usr/local/lib/python3.8/test/test_generators.py'...
Compiling '/usr/local/lib/python3.8/test/test_genexps.py'...
Compiling '/usr/local/lib/python3.8/test/test_getpass.py'...
Compiling '/usr/local/lib/python3.8/test/test_glob.py'...
Compiling '/usr/local/lib/python3.8/test/test_hmac.py'...
Compiling '/usr/local/lib/python3.8/test/test_imaplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/fixtures.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_fromlist.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_case_sensitivity.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_ioctl.py'...
Compiling '/usr/local/lib/python3.8/test/test_isinstance.py'...
Compiling '/usr/local/lib/python3.8/test/test_iterlen.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_decode.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_default.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_dump.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_enum.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_indent.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass2.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_recursion.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_speedups.py'...
Compiling '/usr/local/lib/python3.8/test/test_keyword.py'...
Compiling '/usr/local/lib/python3.8/test/test_keywordonlyarg.py'...
Compiling '/usr/local/lib/python3.8/test/test_list.py'...
Compiling '/usr/local/lib/python3.8/test/test_long.py'...
Compiling '/usr/local/lib/python3.8/test/test_mailcap.py'...
Compiling '/usr/local/lib/python3.8/test/test_math.py'...
Compiling '/usr/local/lib/python3.8/test/test_msilib.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_fork.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_forkserver.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_main_handling.py'...
Compiling '/usr/local/lib/python3.8/test/test_nis.py'...
Compiling '/usr/local/lib/python3.8/test/test_normalization.py'...
Compiling '/usr/local/lib/python3.8/test/test_opcodes.py'...
Compiling '/usr/local/lib/python3.8/test/test_optparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_plistlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_pstats.py'...
Compiling '/usr/local/lib/python3.8/test/test_pulldom.py'...
Compiling '/usr/local/lib/python3.8/test/test_pyexpat.py'...
Compiling '/usr/local/lib/python3.8/test/test_re.py'...
Compiling '/usr/local/lib/python3.8/test/test_socketserver.py'...
Compiling '/usr/local/lib/python3.8/test/test_stringprep.py'...
Compiling '/usr/local/lib/python3.8/test/test_strtod.py'...
Compiling '/usr/local/lib/python3.8/test/test_subclassinit.py'...
Compiling '/usr/local/lib/python3.8/test/test_sundry.py'...
Compiling '/usr/local/lib/python3.8/test/test_super.py'...
Compiling '/usr/local/lib/python3.8/test/test_syntax.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys_setprofile.py'...
Compiling '/usr/local/lib/python3.8/test/test_tcl.py'...
Compiling '/usr/local/lib/python3.8/test/test_timeout.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_md5sum.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pindent.py'...
Compiling '/usr/local/lib/python3.8/test/test_trace.py'...
Compiling '/usr/local/lib/python3.8/test/test_typechecks.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2.py'...
Compiling '/usr/local/lib/python3.8/test/test_winsound.py'...
Compiling '/usr/local/lib/python3.8/test/test_with.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipfile.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/runtktests.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/support.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_images.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_widgets.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/chaos.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/forest.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/peace.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/penrose.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/rosette.py'...
Compiling '/usr/local/lib/python3.8/unittest/result.py'...
Compiling '/usr/local/lib/python3.8/unittest/runner.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/_test_warnings.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_break.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_result.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_skipping.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/support.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testpatch.py'...
Compiling '/usr/local/lib/python3.8/weakref.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/util.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/NodeFilter.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/domreg.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/minidom.py'...

Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_tasks.py'...
Compiling '/usr/local/lib/python3.8/test/test_class.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmath.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_iso2022.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_cn.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_kr.py'...
Compiling '/usr/local/lib/python3.8/test/test_colorsys.py'...
Compiling '/usr/local/lib/python3.8/test/test_compileall.py'...
Compiling '/usr/local/lib/python3.8/test/test_contains.py'...
Compiling '/usr/local/lib/python3.8/test/test_contextlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_datetime.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_gnu.py'...
Compiling '/usr/local/lib/python3.8/test/test_decorators.py'...
Compiling '/usr/local/lib/python3.8/test/test_devpoll.py'...
Compiling '/usr/local/lib/python3.8/test/test_dict_version.py'...
Compiling '/usr/local/lib/python3.8/test/test_dictcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_dis.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_email.py'...
Compiling '/usr/local/lib/python3.8/test/test_fnmatch.py'...
Compiling '/usr/local/lib/python3.8/test/test_fractions.py'...
Compiling '/usr/local/lib/python3.8/test/test_functools.py'...
Compiling '/usr/local/lib/python3.8/test/test_grp.py'...
Compiling '/usr/local/lib/python3.8/test/test_gzip.py'...
Compiling '/usr/local/lib/python3.8/test/test_http_cookiejar.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/two/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_lazy.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_namespace_pkgs.py'...
Compiling '/usr/local/lib/python3.8/test/test_int.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_float.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_separators.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_tool.py'...
Compiling '/usr/local/lib/python3.8/test/test_kqueue.py'...
Compiling '/usr/local/lib/python3.8/test/test_locale.py'...
Compiling '/usr/local/lib/python3.8/test/test_mailbox.py'...
Compiling '/usr/local/lib/python3.8/test/test_memoryview.py'...
Compiling '/usr/local/lib/python3.8/test/test_module.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_spawn.py'...
Compiling '/usr/local/lib/python3.8/test/test_named_expressions.py'...
Compiling '/usr/local/lib/python3.8/test/test_osx_env.py'...
Compiling '/usr/local/lib/python3.8/test/test_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_poll.py'...
Compiling '/usr/local/lib/python3.8/test/test_posix.py'...
Compiling '/usr/local/lib/python3.8/test/test_range.py'...
Compiling '/usr/local/lib/python3.8/test/test_resource.py'...
Compiling '/usr/local/lib/python3.8/test/test_rlcompleter.py'...
Compiling '/usr/local/lib/python3.8/test/test_runpy.py'...
Compiling '/usr/local/lib/python3.8/test/test_secrets.py'...
Compiling '/usr/local/lib/python3.8/test/test_select.py'...
Compiling '/usr/local/lib/python3.8/test/test_set.py'...
Compiling '/usr/local/lib/python3.8/test/test_spwd.py'...
Compiling '/usr/local/lib/python3.8/test/test_sqlite.py'...
Compiling '/usr/local/lib/python3.8/test/test_startfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_stat.py'...
Compiling '/usr/local/lib/python3.8/test/test_string_literals.py'...
Compiling '/usr/local/lib/python3.8/test/test_struct.py'...
Compiling '/usr/local/lib/python3.8/test/test_sysconfig.py'...
Compiling '/usr/local/lib/python3.8/test/test_syslog.py'...
Compiling '/usr/local/lib/python3.8/test/test_tarfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_typing.py'...
Compiling '/usr/local/lib/python3.8/test/test_xmlrpc_net.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipapp.py'...
Compiling '/usr/local/lib/python3.8/test/testcodec.py'...
Compiling '/usr/local/lib/python3.8/test/tracedmodules/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/tracedmodules/testmod.py'...
Compiling '/usr/local/lib/python3.8/tkinter/__main__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/commondialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/dialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/scrolledtext.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_loadtk.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_misc.py'...
Compiling '/usr/local/lib/python3.8/traceback.py'...
Compiling '/usr/local/lib/python3.8/tty.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/bytedesign.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/lindenmayer.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/minimal_hanoi.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/tree.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/two_canvases.py'...
Compiling '/usr/local/lib/python3.8/unittest/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_runner.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testmock.py'...
Compiling '/usr/local/lib/python3.8/warnings.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/xmlbuilder.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementPath.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/handler.py'...
Compiling '/usr/local/lib/python3.8/zipapp.py'...

Compiling '/usr/local/lib/python3.8/test/test_getopt.py'...
Compiling '/usr/local/lib/python3.8/test/test_gettext.py'...
Compiling '/usr/local/lib/python3.8/test/test_hashlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_httpservers.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/from_cycle2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/indirect.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/rebinding2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data01/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_path_hook.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_file_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/zipdata01/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/zipdata02/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_index.py'...
Compiling '/usr/local/lib/python3.8/test/test_io.py'...
Compiling '/usr/local/lib/python3.8/test/test_ossaudiodev.py'...
Compiling '/usr/local/lib/python3.8/test/test_peepholer.py'...
Compiling '/usr/local/lib/python3.8/test/test_pipes.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkgimport.py'...
Compiling '/usr/local/lib/python3.8/test/test_platform.py'...
Compiling '/usr/local/lib/python3.8/test/test_pow.py'...
Compiling '/usr/local/lib/python3.8/test/test_profile.py'...
Compiling '/usr/local/lib/python3.8/test/test_property.py'...
Compiling '/usr/local/lib/python3.8/test/test_raise.py'...
Compiling '/usr/local/lib/python3.8/test/test_richcmp.py'...
Compiling '/usr/local/lib/python3.8/test/test_scope.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtpnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_source_encoding.py'...
Compiling '/usr/local/lib/python3.8/test/test_strftime.py'...
Compiling '/usr/local/lib/python3.8/test/test_structmembers.py'...
Compiling '/usr/local/lib/python3.8/test/test_structseq.py'...
Compiling '/usr/local/lib/python3.8/test/test_subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/test_threading.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_fixcid.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_sundry.py'...
Compiling '/usr/local/lib/python3.8/test/test_types.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_dom_minicompat.py'...
Compiling '/usr/local/lib/python3.8/test/test_xxtestfuzz.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipimport.py'...
Compiling '/usr/local/lib/python3.8/timeit.py'...
Compiling '/usr/local/lib/python3.8/tkinter/colorchooser.py'...
Compiling '/usr/local/lib/python3.8/tkinter/constants.py'...
Compiling '/usr/local/lib/python3.8/tkinter/dnd.py'...
Compiling '/usr/local/lib/python3.8/tkinter/filedialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/messagebox.py'...
Compiling '/usr/local/lib/python3.8/tkinter/simpledialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_text.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_style.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/widget_tests.py'...
Compiling '/usr/local/lib/python3.8/tracemalloc.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/clock.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/paint.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/planet_and_moon.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/sorting_animate.py'...
Compiling '/usr/local/lib/python3.8/unittest/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/async_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/loader.py'...
Compiling '/usr/local/lib/python3.8/unittest/suite.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_functiontestcase.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_loader.py'...
Compiling '/usr/local/lib/python3.8/urllib/parse.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/__init__.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/handlers.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/__init__.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/__init__.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/client.py'...

Compiling '/usr/local/lib/python3.8/test/test_json/test_encode_basestring_ascii.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_fail.py'...
Compiling '/usr/local/lib/python3.8/test/test_lib2to3.py'...
Compiling '/usr/local/lib/python3.8/test/test_linecache.py'...
Compiling '/usr/local/lib/python3.8/test/test_longexp.py'...
Compiling '/usr/local/lib/python3.8/test/test_lzma.py'...
Compiling '/usr/local/lib/python3.8/test/test_mmap.py'...
Compiling '/usr/local/lib/python3.8/test/test_os.py'...
Compiling '/usr/local/lib/python3.8/test/test_readline.py'...
Compiling '/usr/local/lib/python3.8/test/test_repl.py'...
Compiling '/usr/local/lib/python3.8/test/test_reprlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_robotparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_sched.py'...
Compiling '/usr/local/lib/python3.8/test/test_shelve.py'...
Compiling '/usr/local/lib/python3.8/test/test_slice.py'...
Compiling '/usr/local/lib/python3.8/test/test_sndhdr.py'...
Compiling '/usr/local/lib/python3.8/test/test_socket.py'...
Compiling '/usr/local/lib/python3.8/test/test_thread.py'...
Compiling '/usr/local/lib/python3.8/test/test_threadedtempfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_threading_local.py'...
Compiling '/usr/local/lib/python3.8/test/test_timeit.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_lll.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pathfix.py'...
Compiling '/usr/local/lib/python3.8/test/test_traceback.py'...
Compiling '/usr/local/lib/python3.8/test/test_unary.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_identifiers.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicodedata.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2net.py'...
Compiling '/usr/local/lib/python3.8/test/test_urlparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/data/import_warning.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/data/stacklevel.py'...
Compiling '/usr/local/lib/python3.8/test/test_wave.py'...
Compiling '/usr/local/lib/python3.8/test/test_winconsoleio.py'...
Compiling '/usr/local/lib/python3.8/test/test_wsgiref.py'...
Compiling '/usr/local/lib/python3.8/test/test_yield_from.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipimport_support.py'...
Compiling '/usr/local/lib/python3.8/test/tf_inherit_check.py'...
Compiling '/usr/local/lib/python3.8/test/threaded_import_hangers.py'...
Compiling '/usr/local/lib/python3.8/test/time_hashlib.py'...
Compiling '/usr/local/lib/python3.8/test/win_console_handler.py'...
Compiling '/usr/local/lib/python3.8/test/xmltests.py'...
Compiling '/usr/local/lib/python3.8/textwrap.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_font.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_geometry_managers.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_functions.py'...
Compiling '/usr/local/lib/python3.8/trace.py'...
Compiling '/usr/local/lib/python3.8/turtle.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testmagicmethods.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testsealable.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testsentinel.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testwith.py'...
Compiling '/usr/local/lib/python3.8/urllib/robotparser.py'...
Compiling '/usr/local/lib/python3.8/uuid.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/validate.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementTree.py'...
Compiling '/usr/local/lib/python3.8/zipimport.py'...

Compiling '/usr/local/lib/python3.8/test/test_codecencodings_kr.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_hk.py'...
Compiling '/usr/local/lib/python3.8/test/test_collections.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_dumb.py'...
Compiling '/usr/local/lib/python3.8/test/test_deque.py'...
Compiling '/usr/local/lib/python3.8/test/test_dictviews.py'...
Compiling '/usr/local/lib/python3.8/test/test_difflib.py'...
Compiling '/usr/local/lib/python3.8/test/test_docxmlrpc.py'...
Compiling '/usr/local/lib/python3.8/test/test_dummy_threading.py'...
Compiling '/usr/local/lib/python3.8/test/test_dynamic.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_asian_codecs.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_defect_handling.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_generator.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_headerregistry.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_ensurepip.py'...
Compiling '/usr/local/lib/python3.8/test/test_enumerate.py'...
Compiling '/usr/local/lib/python3.8/test/test_fileio.py'...
Compiling '/usr/local/lib/python3.8/test/test_funcattrs.py'...
Compiling '/usr/local/lib/python3.8/test/test_future4.py'...
Compiling '/usr/local/lib/python3.8/test/test_gdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_global.py'...
Compiling '/usr/local/lib/python3.8/test/test_grammar.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test___package__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_path_hook.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_windows.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_ipaddress.py'...
Compiling '/usr/local/lib/python3.8/test/test_marshal.py'...
Compiling '/usr/local/lib/python3.8/test/test_memoryio.py'...
Compiling '/usr/local/lib/python3.8/test/test_ntpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_pdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_popen.py'...
Compiling '/usr/local/lib/python3.8/test/test_positional_only_arg.py'...
Compiling '/usr/local/lib/python3.8/test/test_posixpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_pty.py'...
Compiling '/usr/local/lib/python3.8/test/test_pwd.py'...
Compiling '/usr/local/lib/python3.8/test/test_pyclbr.py'...
Compiling '/usr/local/lib/python3.8/test/test_queue.py'...
Compiling '/usr/local/lib/python3.8/test/test_regrtest.py'...
Compiling '/usr/local/lib/python3.8/test/test_sax.py'...
Compiling '/usr/local/lib/python3.8/test/test_setcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_shlex.py'...
Compiling '/usr/local/lib/python3.8/test/test_signal.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_string.py'...
Compiling '/usr/local/lib/python3.8/test/test_strptime.py'...
Compiling '/usr/local/lib/python3.8/test/test_sunau.py'...
Compiling '/usr/local/lib/python3.8/test/test_support.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys_settrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_tabnanny.py'...
Compiling '/usr/local/lib/python3.8/test/test_tempfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_time.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_i18n.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pdeps.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_unparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_type_comments.py'...
Compiling '/usr/local/lib/python3.8/test/test_ucn.py'...
Compiling '/usr/local/lib/python3.8/test/test_unittest.py'...
Compiling '/usr/local/lib/python3.8/test/test_unpack.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2_localnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_userdict.py'...
Compiling '/usr/local/lib/python3.8/test/test_userstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_utf8_mode.py'...
Compiling '/usr/local/lib/python3.8/test/test_uuid.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_weakref.py'...
Compiling '/usr/local/lib/python3.8/threading.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_variables.py'...
Compiling '/usr/local/lib/python3.8/tkinter/ttk.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/__init__.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/mock.py'...
Compiling '/usr/local/lib/python3.8/urllib/__init__.py'...
Compiling '/usr/local/lib/python3.8/urllib/error.py'...
Compiling '/usr/local/lib/python3.8/urllib/response.py'...
Compiling '/usr/local/lib/python3.8/uu.py'...
Compiling '/usr/local/lib/python3.8/venv/__init__.py'...
Compiling '/usr/local/lib/python3.8/wave.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/saxutils.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/server.py'...

Compiling '/usr/local/lib/python3.8/test/test_codecencodings_tw.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_jp.py'...
Compiling '/usr/local/lib/python3.8/test/test_codeop.py'...
Compiling '/usr/local/lib/python3.8/test/test_compare.py'...
Compiling '/usr/local/lib/python3.8/test/test_complex.py'...
Compiling '/usr/local/lib/python3.8/test/test_context.py'...
Compiling '/usr/local/lib/python3.8/test/test_coroutines.py'...
Compiling '/usr/local/lib/python3.8/test/test_descrtut.py'...
Compiling '/usr/local/lib/python3.8/test/test_dict.py'...
Compiling '/usr/local/lib/python3.8/test/test_doctest.py'...
Compiling '/usr/local/lib/python3.8/test/test_dummy_thread.py'...
Compiling '/usr/local/lib/python3.8/test/test_eintr.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test__header_value_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_genericpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_hash.py'...
Compiling '/usr/local/lib/python3.8/test/test_http_cookies.py'...
Compiling '/usr/local/lib/python3.8/test/test_imp.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/binding2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/from_cycle1.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/source.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpackage.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package2/submodule1.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_meta_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_source_encoding.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_metadata_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_read.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_util.py'...
Compiling '/usr/local/lib/python3.8/test/test_iter.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass1.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass3.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_scanstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/test/test_largefile.py'...
Compiling '/usr/local/lib/python3.8/test/test_listcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_lltrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_logging.py'...
Compiling '/usr/local/lib/python3.8/test/test_multibytecodec.py'...
Compiling '/usr/local/lib/python3.8/test/test_nntplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_pickle.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkgutil.py'...
Compiling '/usr/local/lib/python3.8/test/test_pprint.py'...
Compiling '/usr/local/lib/python3.8/test/test_quopri.py'...
Compiling '/usr/local/lib/python3.8/test/test_random.py'...
Compiling '/usr/local/lib/python3.8/test/test_site.py'...
Compiling '/usr/local/lib/python3.8/test/test_sort.py'...
Compiling '/usr/local/lib/python3.8/test/test_ssl.py'...
Compiling '/usr/local/lib/python3.8/test/test_telnetlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_textwrap.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_gprof2html.py'...
Compiling '/usr/local/lib/python3.8/test/test_tracemalloc.py'...
Compiling '/usr/local/lib/python3.8/test/test_unpack_ex.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib_response.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllibnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_userlist.py'...
Compiling '/usr/local/lib/python3.8/test/test_utf8source.py'...
Compiling '/usr/local/lib/python3.8/test/test_uu.py'...
Compiling '/usr/local/lib/python3.8/test/test_wait3.py'...
Compiling '/usr/local/lib/python3.8/test/test_wait4.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_etree.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_widgets.py'...
Compiling '/usr/local/lib/python3.8/types.py'...
Compiling '/usr/local/lib/python3.8/unittest/main.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_assertions.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_discovery.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testasync.py'...
Compiling '/usr/local/lib/python3.8/venv/__main__.py'...
Compiling '/usr/local/lib/python3.8/webbrowser.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/minicompat.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementInclude.py'...
Compiling '/usr/local/lib/python3.8/xml/parsers/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/parsers/expat.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/expatreader.py'...
Compiling '/usr/local/lib/python3.8/zipfile.py'...
Listing '/usr/local/lib/python3.8/asyncio'...
Listing '/usr/local/lib/python3.8/collections'...
Listing '/usr/local/lib/python3.8/concurrent'...
Listing '/usr/local/lib/python3.8/concurrent/futures'...
Listing '/usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu'...
Listing '/usr/local/lib/python3.8/ctypes'...
Listing '/usr/local/lib/python3.8/ctypes/macholib'...
Listing '/usr/local/lib/python3.8/ctypes/test'...
Listing '/usr/local/lib/python3.8/curses'...
Listing '/usr/local/lib/python3.8/dbm'...
Listing '/usr/local/lib/python3.8/distutils'...
Listing '/usr/local/lib/python3.8/distutils/command'...
Listing '/usr/local/lib/python3.8/distutils/tests'...
Listing '/usr/local/lib/python3.8/email'...
Listing '/usr/local/lib/python3.8/email/mime'...
Listing '/usr/local/lib/python3.8/encodings'...
Listing '/usr/local/lib/python3.8/ensurepip'...
Listing '/usr/local/lib/python3.8/ensurepip/_bundled'...
Listing '/usr/local/lib/python3.8/html'...
Listing '/usr/local/lib/python3.8/http'...
Listing '/usr/local/lib/python3.8/idlelib'...
Listing '/usr/local/lib/python3.8/idlelib/Icons'...
Listing '/usr/local/lib/python3.8/idlelib/idle_test'...
Listing '/usr/local/lib/python3.8/importlib'...
Listing '/usr/local/lib/python3.8/json'...
Listing '/usr/local/lib/python3.8/lib-dynload'...
Listing '/usr/local/lib/python3.8/lib2to3'...
Listing '/usr/local/lib/python3.8/lib2to3/fixes'...
Listing '/usr/local/lib/python3.8/lib2to3/pgen2'...
Listing '/usr/local/lib/python3.8/lib2to3/tests'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data/fixers'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes'...
Listing '/usr/local/lib/python3.8/logging'...
Listing '/usr/local/lib/python3.8/multiprocessing'...
Listing '/usr/local/lib/python3.8/multiprocessing/dummy'...
Listing '/usr/local/lib/python3.8/pydoc_data'...
Listing '/usr/local/lib/python3.8/site-packages'...
Listing '/usr/local/lib/python3.8/sqlite3'...
Listing '/usr/local/lib/python3.8/sqlite3/test'...
Listing '/usr/local/lib/python3.8/test'...
Listing '/usr/local/lib/python3.8/test/audiodata'...
Listing '/usr/local/lib/python3.8/test/capath'...
Listing '/usr/local/lib/python3.8/test/cjkencodings'...
Listing '/usr/local/lib/python3.8/test/data'...
Listing '/usr/local/lib/python3.8/test/decimaltestdata'...
Listing '/usr/local/lib/python3.8/test/dtracedata'...
Listing '/usr/local/lib/python3.8/test/eintrdata'...
Listing '/usr/local/lib/python3.8/test/encoded_modules'...
Listing '/usr/local/lib/python3.8/test/imghdrdata'...
Listing '/usr/local/lib/python3.8/test/libregrtest'...
Listing '/usr/local/lib/python3.8/test/sndhdrdata'...
Listing '/usr/local/lib/python3.8/test/subprocessdata'...
Listing '/usr/local/lib/python3.8/test/support'...
Listing '/usr/local/lib/python3.8/test/test_asyncio'...
Listing '/usr/local/lib/python3.8/test/test_email'...
Listing '/usr/local/lib/python3.8/test/test_email/data'...
Listing '/usr/local/lib/python3.8/test/test_import'...
Listing '/usr/local/lib/python3.8/test/test_import/data'...
Listing '/usr/local/lib/python3.8/test/test_import/data/circular_imports'...
Listing '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg'...
Listing '/usr/local/lib/python3.8/test/test_import/data/package'...
Listing '/usr/local/lib/python3.8/test/test_import/data/package2'...
Listing '/usr/local/lib/python3.8/test/test_importlib'...
Listing '/usr/local/lib/python3.8/test/test_importlib/builtin'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data01'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data01/subdirectory'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02/one'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02/two'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/extension'...
Listing '/usr/local/lib/python3.8/test/test_importlib/frozen'...
Listing '/usr/local/lib/python3.8/test/test_importlib/import_'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/source'...
Listing '/usr/local/lib/python3.8/test/test_importlib/zipdata01'...
Listing '/usr/local/lib/python3.8/test/test_importlib/zipdata02'...
Listing '/usr/local/lib/python3.8/test/test_json'...
Listing '/usr/local/lib/python3.8/test/test_tools'...
Listing '/usr/local/lib/python3.8/test/test_warnings'...
Listing '/usr/local/lib/python3.8/test/test_warnings/data'...
Listing '/usr/local/lib/python3.8/test/tracedmodules'...
Listing '/usr/local/lib/python3.8/test/xmltestdata'...
Listing '/usr/local/lib/python3.8/test/xmltestdata/c14n-20'...
Listing '/usr/local/lib/python3.8/test/ziptestdata'...
Listing '/usr/local/lib/python3.8/tkinter'...
Listing '/usr/local/lib/python3.8/tkinter/test'...
Listing '/usr/local/lib/python3.8/tkinter/test/test_tkinter'...
Listing '/usr/local/lib/python3.8/tkinter/test/test_ttk'...
Listing '/usr/local/lib/python3.8/turtledemo'...
Listing '/usr/local/lib/python3.8/unittest'...
Listing '/usr/local/lib/python3.8/unittest/test'...
Listing '/usr/local/lib/python3.8/unittest/test/testmock'...
Listing '/usr/local/lib/python3.8/urllib'...
Listing '/usr/local/lib/python3.8/venv'...
Listing '/usr/local/lib/python3.8/venv/scripts'...
Listing '/usr/local/lib/python3.8/venv/scripts/common'...
Listing '/usr/local/lib/python3.8/venv/scripts/posix'...
Listing '/usr/local/lib/python3.8/wsgiref'...
Listing '/usr/local/lib/python3.8/xml'...
Listing '/usr/local/lib/python3.8/xml/dom'...
Listing '/usr/local/lib/python3.8/xml/etree'...
Listing '/usr/local/lib/python3.8/xml/parsers'...
Listing '/usr/local/lib/python3.8/xml/sax'...
Listing '/usr/local/lib/python3.8/xmlrpc'...
PYTHONPATH=/usr/local/lib/python3.8  \
	./python -E -Wi -OO /usr/local/lib/python3.8/compileall.py \
	-j0 -d /usr/local/lib/python3.8 -f \
	-x 'bad_coding|badsyntax|site-packages|lib2to3/tests/data' \
	/usr/local/lib/python3.8
Listing '/usr/local/lib/python3.8'...
Compiling '/usr/local/lib/python3.8/_compat_pickle.py'...
Compiling '/usr/local/lib/python3.8/_pyio.py'...
Compiling '/usr/local/lib/python3.8/asyncio/constants.py'...
Compiling '/usr/local/lib/python3.8/asyncio/coroutines.py'...
Compiling '/usr/local/lib/python3.8/asyncio/exceptions.py'...
Compiling '/usr/local/lib/python3.8/asyncio/log.py'...
Compiling '/usr/local/lib/python3.8/asyncio/proactor_events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/windows_utils.py'...
Compiling '/usr/local/lib/python3.8/binhex.py'...
Compiling '/usr/local/lib/python3.8/codecs.py'...
Compiling '/usr/local/lib/python3.8/configparser.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_arrays.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_checkretval.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_errno.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_functions.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_memfunctions.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_python_api.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_returnfuncptrs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_stringptr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_structures.py'...
Compiling '/usr/local/lib/python3.8/curses/textpad.py'...
Compiling '/usr/local/lib/python3.8/dbm/gnu.py'...
Compiling '/usr/local/lib/python3.8/difflib.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_clib.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/check.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/config.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/upload.py'...
Compiling '/usr/local/lib/python3.8/distutils/cygwinccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/spawn.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dir_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_data.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_register.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_util.py'...
Compiling '/usr/local/lib/python3.8/email/_parseaddr.py'...
Compiling '/usr/local/lib/python3.8/email/policy.py'...
Compiling '/usr/local/lib/python3.8/encodings/big5.py'...
Compiling '/usr/local/lib/python3.8/encodings/big5hkscs.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1026.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1252.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp424.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp850.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp864.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp874.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp932.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jis_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/gb2312.py'...
Compiling '/usr/local/lib/python3.8/encodings/hp_roman8.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_2.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_kr.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_11.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_16.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_5.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_t.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_farsi.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_roman.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jis.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_8_sig.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/__init__.py'...
Compiling '/usr/local/lib/python3.8/filecmp.py'...
Compiling '/usr/local/lib/python3.8/http/cookiejar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/codecontext.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugger.py'...
Compiling '/usr/local/lib/python3.8/idlelib/history.py'...
Compiling '/usr/local/lib/python3.8/idlelib/hyperparser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/mock_tk.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_colorizer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_help_about.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_iomenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_mainmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_percolator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_query.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_stackviewer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_undo.py'...
Compiling '/usr/local/lib/python3.8/idlelib/rpc.py'...
Compiling '/usr/local/lib/python3.8/idlelib/stackviewer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/zzdummy.py'...
Compiling '/usr/local/lib/python3.8/imaplib.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/__main__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_apply.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_filter.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_idioms.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_long.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_nonzero.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_print.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_set_literal.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/patcomp.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/tokenize.py'...
Compiling '/usr/local/lib/python3.8/mailbox.py'...
Compiling '/usr/local/lib/python3.8/pstats.py'...
Compiling '/usr/local/lib/python3.8/sndhdr.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/__init__.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/dbapi2.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/hooks.py'...
Compiling '/usr/local/lib/python3.8/ssl.py'...
Compiling '/usr/local/lib/python3.8/test/autotest.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr3.py'...
Compiling '/usr/local/lib/python3.8/test/curses_tests.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_textanno.py'...
Compiling '/usr/local/lib/python3.8/test/doctest_aliases.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/module_iso_8859_1.py'...
Compiling '/usr/local/lib/python3.8/test/fork_wait.py'...
Compiling '/usr/local/lib/python3.8/test/imp_dummy.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/setup.py'...
Compiling '/usr/local/lib/python3.8/test/mapping_tests.py'...
Compiling '/usr/local/lib/python3.8/test/regrtest.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest_no_doctests.py'...
Compiling '/usr/local/lib/python3.8/test/ssltests.py'...
Compiling '/usr/local/lib/python3.8/test/string_tests.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_pep492.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_protocols.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_queues.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sock_lowlevel.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_streams.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncore.py'...
Compiling '/usr/local/lib/python3.8/test/test_base64.py'...
Compiling '/usr/local/lib/python3.8/test/test_binhex.py'...
Compiling '/usr/local/lib/python3.8/test/test_binop.py'...
Compiling '/usr/local/lib/python3.8/test/test_buffer.py'...
Compiling '/usr/local/lib/python3.8/test/test_copyreg.py'...
Compiling '/usr/local/lib/python3.8/test/test_cprofile.py'...
Compiling '/usr/local/lib/python3.8/test/test_crashers.py'...
Compiling '/usr/local/lib/python3.8/test/test_crypt.py'...
Compiling '/usr/local/lib/python3.8/test/test_ctypes.py'...Compiling '/usr/local/lib/python3.8/_collections_abc.py'...
Compiling '/usr/local/lib/python3.8/_threading_local.py'...
Compiling '/usr/local/lib/python3.8/antigravity.py'...
Compiling '/usr/local/lib/python3.8/ast.py'...
Compiling '/usr/local/lib/python3.8/asyncio/futures.py'...
Compiling '/usr/local/lib/python3.8/asyncio/runners.py'...
Compiling '/usr/local/lib/python3.8/asyncio/selector_events.py'...
Compiling '/usr/local/lib/python3.8/cProfile.py'...
Compiling '/usr/local/lib/python3.8/cgitb.py'...
Compiling '/usr/local/lib/python3.8/concurrent/__init__.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/__init__.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/process.py'...
Compiling '/usr/local/lib/python3.8/copyreg.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_bitfields.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_keeprefs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_numbers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_simplesubclasses.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_strings.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_win32.py'...
Compiling '/usr/local/lib/python3.8/distutils/_msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_ext.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_headers.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_lib.py'...
Compiling '/usr/local/lib/python3.8/distutils/debug.py'...
Compiling '/usr/local/lib/python3.8/distutils/dep_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/extension.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_py.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dist.py'...
Compiling '/usr/local/lib/python3.8/distutils/unixccompiler.py'...
Compiling '/usr/local/lib/python3.8/email/__init__.py'...
Compiling '/usr/local/lib/python3.8/email/_policybase.py'...
Compiling '/usr/local/lib/python3.8/email/feedparser.py'...
Compiling '/usr/local/lib/python3.8/email/iterators.py'...
Compiling '/usr/local/lib/python3.8/email/mime/__init__.py'...
Compiling '/usr/local/lib/python3.8/email/mime/application.py'...
Compiling '/usr/local/lib/python3.8/email/mime/base.py'...
Compiling '/usr/local/lib/python3.8/email/mime/multipart.py'...
Compiling '/usr/local/lib/python3.8/email/mime/text.py'...
Compiling '/usr/local/lib/python3.8/encodings/aliases.py'...
Compiling '/usr/local/lib/python3.8/encodings/charmap.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1125.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1257.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp737.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp860.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp862.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp866.py'...
Compiling '/usr/local/lib/python3.8/encodings/gb18030.py'...
Compiling '/usr/local/lib/python3.8/encodings/hex_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/johab.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_arabic.py'...
Compiling '/usr/local/lib/python3.8/encodings/tis_620.py'...
Compiling '/usr/local/lib/python3.8/enum.py'...
Compiling '/usr/local/lib/python3.8/ftplib.py'...
Compiling '/usr/local/lib/python3.8/heapq.py'...
Compiling '/usr/local/lib/python3.8/http/__init__.py'...
Compiling '/usr/local/lib/python3.8/http/client.py'...
Compiling '/usr/local/lib/python3.8/idlelib/colorizer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugobj_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/dynoption.py'...
Compiling '/usr/local/lib/python3.8/idlelib/filelist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/help_about.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autocomplete.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_config.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_help.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_run.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_tooltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/macosx.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pathbrowser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pyparse.py'...
Compiling '/usr/local/lib/python3.8/idlelib/scrolledlist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/searchbase.py'...
Compiling '/usr/local/lib/python3.8/idlelib/textview.py'...
Compiling '/usr/local/lib/python3.8/idlelib/window.py'...
Compiling '/usr/local/lib/python3.8/imp.py'...
Compiling '/usr/local/lib/python3.8/importlib/machinery.py'...
Compiling '/usr/local/lib/python3.8/importlib/util.py'...
Compiling '/usr/local/lib/python3.8/keyword.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_buffer.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_exitfunc.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_imports.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_next.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_urllib.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/literals.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/token.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_all_fixers.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_fixers.py'...
Compiling '/usr/local/lib/python3.8/optparse.py'...
Compiling '/usr/local/lib/python3.8/plistlib.py'...
Compiling '/usr/local/lib/python3.8/rlcompleter.py'...
Compiling '/usr/local/lib/python3.8/secrets.py'...
Compiling '/usr/local/lib/python3.8/selectors.py'...
Compiling '/usr/local/lib/python3.8/site.py'...
Compiling '/usr/local/lib/python3.8/socketserver.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/dbapi.py'...
Compiling '/usr/local/lib/python3.8/stringprep.py'...
Compiling '/usr/local/lib/python3.8/symtable.py'...
Compiling '/usr/local/lib/python3.8/telnetlib.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module2.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module3.py'...
Compiling '/usr/local/lib/python3.8/test/bad_getattr2.py'...
Compiling '/usr/local/lib/python3.8/test/bisect_cmd.py'...
Compiling '/usr/local/lib/python3.8/test/bytecode_helper.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_2.py'...
Compiling '/usr/local/lib/python3.8/test/dis_module.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/call_stack.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/runtest_mp.py'...
Compiling '/usr/local/lib/python3.8/test/profilee.py'...
Compiling '/usr/local/lib/python3.8/test/pyclbr_input.py'...
Compiling '/usr/local/lib/python3.8/test/pythoninfo.py'...
Compiling '/usr/local/lib/python3.8/test/seq_tests.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/qcat.py'...
Compiling '/usr/local/lib/python3.8/test/support/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_base_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_windows_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_audioop.py'...
Compiling '/usr/local/lib/python3.8/test/test_bisect.py'...
Compiling '/usr/local/lib/python3.8/test/test_c_locale_coercion.py'...
Compiling '/usr/local/lib/python3.8/test/test_capi.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd_line.py'...
Compiling '/usr/local/lib/python3.8/test/test_configparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_dictcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_difflib.py'...
Compiling '/usr/local/lib/python3.8/test/test_distutils.py'...Compiling '/usr/local/lib/python3.8/_bootlocale.py'...
Compiling '/usr/local/lib/python3.8/_py_abc.py'...
Compiling '/usr/local/lib/python3.8/_sitebuiltins.py'...
Compiling '/usr/local/lib/python3.8/_sysconfigdata__linux_x86_64-linux-gnu.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/protocols.py'...
Compiling '/usr/local/lib/python3.8/asyncio/queues.py'...
Compiling '/usr/local/lib/python3.8/asyncio/streams.py'...
Compiling '/usr/local/lib/python3.8/asyncio/trsock.py'...
Compiling '/usr/local/lib/python3.8/asyncio/windows_events.py'...
Compiling '/usr/local/lib/python3.8/code.py'...
Compiling '/usr/local/lib/python3.8/colorsys.py'...
Compiling '/usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/python-config.py'...
Compiling '/usr/local/lib/python3.8/ctypes/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_array_in_pointer.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_byteswap.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_funcptr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_prototypes.py'...
Compiling '/usr/local/lib/python3.8/curses/ascii.py'...
Compiling '/usr/local/lib/python3.8/dbm/__init__.py'...
Compiling '/usr/local/lib/python3.8/dbm/ndbm.py'...
Compiling '/usr/local/lib/python3.8/decimal.py'...
Compiling '/usr/local/lib/python3.8/dis.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_rpm.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_py.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install.py'...
Compiling '/usr/local/lib/python3.8/distutils/core.py'...
Compiling '/usr/local/lib/python3.8/distutils/dist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_check.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_config.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_lib.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_spawn.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_unixccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_version.py'...
Compiling '/usr/local/lib/python3.8/distutils/versionpredicate.py'...
Compiling '/usr/local/lib/python3.8/email/base64mime.py'...
Compiling '/usr/local/lib/python3.8/email/generator.py'...
Compiling '/usr/local/lib/python3.8/email/mime/message.py'...
Compiling '/usr/local/lib/python3.8/email/parser.py'...
Compiling '/usr/local/lib/python3.8/encodings/ascii.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp037.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1250.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1256.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp500.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp855.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp869.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_3.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_10.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_r.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_croatian.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jis_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/unicode_escape.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32_be.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_8.py'...
Compiling '/usr/local/lib/python3.8/encodings/zlib_codec.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/__main__.py'...
Compiling '/usr/local/lib/python3.8/fractions.py'...
Compiling '/usr/local/lib/python3.8/http/server.py'...
Compiling '/usr/local/lib/python3.8/idlelib/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autoexpand.py'...
Compiling '/usr/local/lib/python3.8/idlelib/configdialog.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_configdialog.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_rpc.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_runscript.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_search.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_squeezer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_window.py'...
Compiling '/usr/local/lib/python3.8/idlelib/multicall.py'...
Compiling '/usr/local/lib/python3.8/idlelib/run.py'...
Compiling '/usr/local/lib/python3.8/idlelib/statusbar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/tree.py'...
Compiling '/usr/local/lib/python3.8/importlib/metadata.py'...
Compiling '/usr/local/lib/python3.8/json/__init__.py'...
Compiling '/usr/local/lib/python3.8/json/encoder.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/btm_matcher.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_basestring.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_dict.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_getcwdu.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_input.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_itertools_imports.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_reduce.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_tuple_params.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/main.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/support.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_main.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_util.py'...
Compiling '/usr/local/lib/python3.8/logging/config.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/context.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/managers.py'...
Compiling '/usr/local/lib/python3.8/nntplib.py'...
Compiling '/usr/local/lib/python3.8/pickle.py'...
Compiling '/usr/local/lib/python3.8/pprint.py'...
Compiling '/usr/local/lib/python3.8/quopri.py'...
Compiling '/usr/local/lib/python3.8/re.py'...
Compiling '/usr/local/lib/python3.8/runpy.py'...
Compiling '/usr/local/lib/python3.8/shlex.py'...
Compiling '/usr/local/lib/python3.8/smtplib.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/dump.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/regression.py'...
Compiling '/usr/local/lib/python3.8/sre_constants.py'...
Compiling '/usr/local/lib/python3.8/symbol.py'...
Compiling '/usr/local/lib/python3.8/tabnanny.py'...
Compiling '/usr/local/lib/python3.8/test/audiotests.py'...
Compiling '/usr/local/lib/python3.8/test/datetimetester.py'...
Compiling '/usr/local/lib/python3.8/test/test_abstract_numbers.py'...
Compiling '/usr/local/lib/python3.8/test/test_argparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_call.py'...
Compiling '/usr/local/lib/python3.8/test/test_cgitb.py'...
Compiling '/usr/local/lib/python3.8/test/test_charmapcodec.py'...
Compiling '/usr/local/lib/python3.8/test/test_clinic.py'...
Compiling '/usr/local/lib/python3.8/test/test_code.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_kr.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_kr.py'...
Compiling '/usr/local/lib/python3.8/test/test_colorsys.py'...
Compiling '/usr/local/lib/python3.8/test/test_compileall.py'...
Compiling '/usr/local/lib/python3.8/test/test_contains.py'...
Compiling '/usr/local/lib/python3.8/test/test_contextlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_csv.py'...
Compiling '/usr/local/lib/python3.8/test/test_defaultdict.py'...
Compiling '/usr/local/lib/python3.8/test/test_descrtut.py'...
Compiling '/usr/local/lib/python3.8/test/test_devpoll.py'...
Compiling '/usr/local/lib/python3.8/test/test_dict_version.py'...
Compiling '/usr/local/lib/python3.8/test/test_dictviews.py'...
Compiling '/usr/local/lib/python3.8/test/test_doctest2.py'...
Compiling '/usr/local/lib/python3.8/test/test_dummy_threading.py'...Compiling '/usr/local/lib/python3.8/_compression.py'...
Compiling '/usr/local/lib/python3.8/abc.py'...
Compiling '/usr/local/lib/python3.8/argparse.py'...
Compiling '/usr/local/lib/python3.8/asyncore.py'...
Compiling '/usr/local/lib/python3.8/chunk.py'...
Compiling '/usr/local/lib/python3.8/collections/__init__.py'...
Compiling '/usr/local/lib/python3.8/crypt.py'...
Compiling '/usr/local/lib/python3.8/csv.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_cast.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_delattr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_frombuffer.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_loading.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pep3118.py'...
Compiling '/usr/local/lib/python3.8/ctypes/util.py'...
Compiling '/usr/local/lib/python3.8/distutils/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/archive_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_wininst.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_data.py'...
Compiling '/usr/local/lib/python3.8/distutils/config.py'...
Compiling '/usr/local/lib/python3.8/distutils/dir_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/log.py'...
Compiling '/usr/local/lib/python3.8/distutils/msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_clib.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_config_cmd.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_msvc9compiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_text_file.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_upload.py'...
Compiling '/usr/local/lib/python3.8/dummy_threading.py'...
Compiling '/usr/local/lib/python3.8/email/contentmanager.py'...
Compiling '/usr/local/lib/python3.8/email/message.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1253.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp437.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp857.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp863.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp875.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp950.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_kr.py'...
Compiling '/usr/local/lib/python3.8/encodings/hz.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_ext.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_2.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_7.py'...
Compiling '/usr/local/lib/python3.8/encodings/latin_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_cyrillic.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_romanian.py'...
Compiling '/usr/local/lib/python3.8/encodings/palmos.py'...
Compiling '/usr/local/lib/python3.8/encodings/raw_unicode_escape.py'...
Compiling '/usr/local/lib/python3.8/fnmatch.py'...
Compiling '/usr/local/lib/python3.8/gettext.py'...
Compiling '/usr/local/lib/python3.8/html/__init__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/calltip_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugobj.py'...
Compiling '/usr/local/lib/python3.8/idlelib/format.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/template.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autoexpand.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_calltip_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_config_key.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_delegator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_editor.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_outwin.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pyshell.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_statusbar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_textview.py'...
Compiling '/usr/local/lib/python3.8/idlelib/mainmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/parenmatch.py'...
Compiling '/usr/local/lib/python3.8/idlelib/query.py'...
Compiling '/usr/local/lib/python3.8/idlelib/zoomheight.py'...
Compiling '/usr/local/lib/python3.8/imghdr.py'...
Compiling '/usr/local/lib/python3.8/importlib/__init__.py'...
Compiling '/usr/local/lib/python3.8/importlib/resources.py'...
Compiling '/usr/local/lib/python3.8/inspect.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_asserts.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_exec.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_funcattrs.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_import.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_itertools.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_ne.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_operator.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_renames.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_ws_comma.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pytree.py'...
Compiling '/usr/local/lib/python3.8/linecache.py'...
Compiling '/usr/local/lib/python3.8/locale.py'...
Compiling '/usr/local/lib/python3.8/mimetypes.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/dummy/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/heap.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/pool.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/spawn.py'...
Compiling '/usr/local/lib/python3.8/netrc.py'...
Compiling '/usr/local/lib/python3.8/opcode.py'...
Compiling '/usr/local/lib/python3.8/pdb.py'...
Compiling '/usr/local/lib/python3.8/posixpath.py'...
Compiling '/usr/local/lib/python3.8/py_compile.py'...
Compiling '/usr/local/lib/python3.8/pydoc_data/__init__.py'...
Compiling '/usr/local/lib/python3.8/pydoc_data/topics.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/dump.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/factory.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/userfunctions.py'...
Compiling '/usr/local/lib/python3.8/string.py'...
Compiling '/usr/local/lib/python3.8/struct.py'...
Compiling '/usr/local/lib/python3.8/sysconfig.py'...
Compiling '/usr/local/lib/python3.8/test/_test_multiprocessing.py'...
Compiling '/usr/local/lib/python3.8/test/final_a.py'...
Compiling '/usr/local/lib/python3.8/test/future_test1.py'...
Compiling '/usr/local/lib/python3.8/test/good_getattr.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/cmdline.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/utils.py'...
Compiling '/usr/local/lib/python3.8/test/list_tests.py'...
Compiling '/usr/local/lib/python3.8/test/pickletester.py'...
Compiling '/usr/local/lib/python3.8/test/test_asynchat.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo2.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/echo3.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/functional.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_buffered_proto.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_context.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_transports.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_bigmem.py'...
Compiling '/usr/local/lib/python3.8/test/test_class.py'...
Compiling '/usr/local/lib/python3.8/test/test_codeccallbacks.py'...
Compiling '/usr/local/lib/python3.8/test/test_concurrent_futures.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_ndbm.py'...
Compiling '/usr/local/lib/python3.8/test/test_deque.py'...
Compiling '/usr/local/lib/python3.8/test/test_docxmlrpc.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_email.py'...Compiling '/usr/local/lib/python3.8/__future__.py'...
Compiling '/usr/local/lib/python3.8/_pydecimal.py'...
Compiling '/usr/local/lib/python3.8/asyncio/unix_events.py'...
Compiling '/usr/local/lib/python3.8/bz2.py'...
Compiling '/usr/local/lib/python3.8/cmd.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/thread.py'...
Compiling '/usr/local/lib/python3.8/contextlib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/_endian.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/dyld.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_callbacks.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_random_things.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_repr.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_sizes.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_struct_fields.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_unaligned_structures.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_varsize_struct.py'...
Compiling '/usr/local/lib/python3.8/dataclasses.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/build_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/errors.py'...
Compiling '/usr/local/lib/python3.8/distutils/file_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/sysconfig.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_rpm.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_clean.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_core.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_dep_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_msvccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_sysconfig.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_versionpredicate.py'...
Compiling '/usr/local/lib/python3.8/distutils/text_file.py'...
Compiling '/usr/local/lib/python3.8/email/_header_value_parser.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1258.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp858.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_9.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_centeuro.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_latin2.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_turkish.py'...
Compiling '/usr/local/lib/python3.8/encodings/quopri_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32.py'...
Compiling '/usr/local/lib/python3.8/formatter.py'...
Compiling '/usr/local/lib/python3.8/getpass.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autocomplete_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/help.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/htest.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_calltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_hyperparser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_multicall.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_parenmatch.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_replace.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_sidebar.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_tree.py'...
Compiling '/usr/local/lib/python3.8/idlelib/runscript.py'...
Compiling '/usr/local/lib/python3.8/idlelib/searchengine.py'...
Compiling '/usr/local/lib/python3.8/idlelib/tooltip.py'...
Compiling '/usr/local/lib/python3.8/json/decoder.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/btm_utils.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_except.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_has_key.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_isinstance.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_map.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_paren.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_raw_input.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_repr.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_throw.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_zip.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/conv.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/pgen.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_parser.py'...
Compiling '/usr/local/lib/python3.8/modulefinder.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_forkserver.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_spawn_win32.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/reduction.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/shared_memory.py'...
Compiling '/usr/local/lib/python3.8/nturl2path.py'...
Compiling '/usr/local/lib/python3.8/numbers.py'...
Compiling '/usr/local/lib/python3.8/pathlib.py'...
Compiling '/usr/local/lib/python3.8/pty.py'...
Compiling '/usr/local/lib/python3.8/queue.py'...
Compiling '/usr/local/lib/python3.8/reprlib.py'...
Compiling '/usr/local/lib/python3.8/sched.py'...
Compiling '/usr/local/lib/python3.8/shelve.py'...
Compiling '/usr/local/lib/python3.8/signal.py'...
Compiling '/usr/local/lib/python3.8/smtpd.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/backup.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/transactions.py'...
Compiling '/usr/local/lib/python3.8/sre_compile.py'...
Compiling '/usr/local/lib/python3.8/sunau.py'...
Compiling '/usr/local/lib/python3.8/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/ann_module.py'...
Compiling '/usr/local/lib/python3.8/test/audit-tests.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_1_str.py'...
Compiling '/usr/local/lib/python3.8/test/double_const.py'...
Compiling '/usr/local/lib/python3.8/test/eintrdata/eintr_tester.py'...
Compiling '/usr/local/lib/python3.8/test/inspect_fodder2.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/runtest.py'...
Compiling '/usr/local/lib/python3.8/test/memory_watchdog.py'...
Compiling '/usr/local/lib/python3.8/test/mod_generics_cache.py'...
Compiling '/usr/local/lib/python3.8/test/pydoc_mod.py'...
Compiling '/usr/local/lib/python3.8/test/re_tests.py'...
Compiling '/usr/local/lib/python3.8/test/sortperf.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/input_reader.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/sigchild_ignore.py'...
Compiling '/usr/local/lib/python3.8/test/support/testresult.py'...
Compiling '/usr/local/lib/python3.8/test/test__opcode.py'...
Compiling '/usr/local/lib/python3.8/test/test_abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_asdl_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncgen.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_futures.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_proactor_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_server.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sslproto.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_windows_utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_atexit.py'...
Compiling '/usr/local/lib/python3.8/test/test_baseexception.py'...
Compiling '/usr/local/lib/python3.8/test/test_bigaddrspace.py'...
Compiling '/usr/local/lib/python3.8/test/test_binascii.py'...
Compiling '/usr/local/lib/python3.8/test/test_bz2.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_cn.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_iso2022.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_hk.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecs.py'...
Compiling '/usr/local/lib/python3.8/test/test_dis.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test__encoded_words.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_headerregistry.py'...Compiling '/usr/local/lib/python3.8/__phello__.foo.py'...
Compiling '/usr/local/lib/python3.8/_osx_support.py'...
Compiling '/usr/local/lib/python3.8/_strptime.py'...
Compiling '/usr/local/lib/python3.8/asynchat.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_subprocess.py'...
Compiling '/usr/local/lib/python3.8/asyncio/staggered.py'...
Compiling '/usr/local/lib/python3.8/asyncio/subprocess.py'...
Compiling '/usr/local/lib/python3.8/asyncio/transports.py'...
Compiling '/usr/local/lib/python3.8/base64.py'...
Compiling '/usr/local/lib/python3.8/codeop.py'...
Compiling '/usr/local/lib/python3.8/collections/abc.py'...
Compiling '/usr/local/lib/python3.8/compileall.py'...
Compiling '/usr/local/lib/python3.8/contextvars.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/framework.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_buffers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_find.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_internals.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_macholib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_parameters.py'...
Compiling '/usr/local/lib/python3.8/curses/has_key.py'...
Compiling '/usr/local/lib/python3.8/dbm/dumb.py'...
Compiling '/usr/local/lib/python3.8/distutils/ccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/clean.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/install_egg_info.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/sdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/msvc9compiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_filelist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_sdist.py'...
Compiling '/usr/local/lib/python3.8/distutils/version.py'...
Compiling '/usr/local/lib/python3.8/email/_encoded_words.py'...
Compiling '/usr/local/lib/python3.8/email/encoders.py'...
Compiling '/usr/local/lib/python3.8/email/errors.py'...
Compiling '/usr/local/lib/python3.8/email/header.py'...
Compiling '/usr/local/lib/python3.8/email/mime/audio.py'...
Compiling '/usr/local/lib/python3.8/email/mime/image.py'...
Compiling '/usr/local/lib/python3.8/email/mime/nonmultipart.py'...
Compiling '/usr/local/lib/python3.8/encodings/__init__.py'...
Compiling '/usr/local/lib/python3.8/encodings/base64_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/bz2_codec.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1140.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1254.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp852.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp861.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp949.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jisx0213.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_14.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_4.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_8.py'...
Compiling '/usr/local/lib/python3.8/encodings/koi8_u.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_greek.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16_le.py'...
Compiling '/usr/local/lib/python3.8/ensurepip/_uninstall.py'...
Compiling '/usr/local/lib/python3.8/fileinput.py'...
Compiling '/usr/local/lib/python3.8/functools.py'...
Compiling '/usr/local/lib/python3.8/hashlib.py'...
Compiling '/usr/local/lib/python3.8/html/entities.py'...
Compiling '/usr/local/lib/python3.8/idlelib/__main__.py'...
Compiling '/usr/local/lib/python3.8/idlelib/browser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/debugger_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_codecontext.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugobj_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_editmenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_filelist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_format.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_redirector.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_scrolledlist.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_searchbase.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_text.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_zoomheight.py'...
Compiling '/usr/local/lib/python3.8/idlelib/outwin.py'...
Compiling '/usr/local/lib/python3.8/idlelib/pyshell.py'...
Compiling '/usr/local/lib/python3.8/importlib/_bootstrap.py'...
Compiling '/usr/local/lib/python3.8/json/scanner.py'...
Compiling '/usr/local/lib/python3.8/json/tool.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixer_util.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_methodattrs.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_numliterals.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_raise.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_standarderror.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_types.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_xrange.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/driver.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pygram.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/__main__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/pytree_idempotency.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_pytree.py'...
Compiling '/usr/local/lib/python3.8/logging/handlers.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/dummy/connection.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/forkserver.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_fork.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/process.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/resource_sharer.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/synchronize.py'...
Compiling '/usr/local/lib/python3.8/ntpath.py'...
Compiling '/usr/local/lib/python3.8/pipes.py'...
Compiling '/usr/local/lib/python3.8/pkgutil.py'...
Compiling '/usr/local/lib/python3.8/platform.py'...
Compiling '/usr/local/lib/python3.8/pydoc.py'...
Compiling '/usr/local/lib/python3.8/statistics.py'...
Compiling '/usr/local/lib/python3.8/tempfile.py'...
Compiling '/usr/local/lib/python3.8/test/coding20731.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_2_str.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/line.py'...
Compiling '/usr/local/lib/python3.8/test/inspect_fodder.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/refleak.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/win_utils.py'...
Compiling '/usr/local/lib/python3.8/test/make_ssl_certs.py'...
Compiling '/usr/local/lib/python3.8/test/mp_fork_bomb.py'...
Compiling '/usr/local/lib/python3.8/test/mp_preload.py'...
Compiling '/usr/local/lib/python3.8/test/outstanding_bugs.py'...
Compiling '/usr/local/lib/python3.8/test/pydocfodder.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest_no_docstrings.py'...
Compiling '/usr/local/lib/python3.8/test/test__xxsubinterpreters.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_sendfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_tasks.py'...
Compiling '/usr/local/lib/python3.8/test/test_calendar.py'...
Compiling '/usr/local/lib/python3.8/test/test_cgi.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmath.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_tw.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_tw.py'...
Compiling '/usr/local/lib/python3.8/test/test_collections.py'...
Compiling '/usr/local/lib/python3.8/test/test_datetime.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_gnu.py'...
Compiling '/usr/local/lib/python3.8/test/test_dict.py'...
Compiling '/usr/local/lib/python3.8/test/test_dummy_thread.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_generator.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_pickleable.py'...Compiling '/usr/local/lib/python3.8/_dummy_thread.py'...
Compiling '/usr/local/lib/python3.8/_weakrefset.py'...
Compiling '/usr/local/lib/python3.8/asyncio/__init__.py'...
Compiling '/usr/local/lib/python3.8/asyncio/__main__.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_tasks.py'...
Compiling '/usr/local/lib/python3.8/asyncio/events.py'...
Compiling '/usr/local/lib/python3.8/asyncio/tasks.py'...
Compiling '/usr/local/lib/python3.8/bdb.py'...
Compiling '/usr/local/lib/python3.8/cgi.py'...
Compiling '/usr/local/lib/python3.8/copy.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/macholib/dylib.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_as_parameter.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_init.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_libc.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pointers.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_wintypes.py'...
Compiling '/usr/local/lib/python3.8/curses/__init__.py'...
Compiling '/usr/local/lib/python3.8/curses/panel.py'...
Compiling '/usr/local/lib/python3.8/datetime.py'...
Compiling '/usr/local/lib/python3.8/distutils/filelist.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/__init__.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_archive_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_wininst.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_scripts.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_cygwinccompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_extension.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_log.py'...
Compiling '/usr/local/lib/python3.8/doctest.py'...
Compiling '/usr/local/lib/python3.8/email/utils.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1006.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1251.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp1255.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp720.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp856.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso2022_jp_2004.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_1.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_15.py'...
Compiling '/usr/local/lib/python3.8/encodings/kz1048.py'...
Compiling '/usr/local/lib/python3.8/encodings/oem.py'...
Compiling '/usr/local/lib/python3.8/encodings/punycode.py'...
Compiling '/usr/local/lib/python3.8/encodings/shift_jisx0213.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_16_be.py'...
Compiling '/usr/local/lib/python3.8/genericpath.py'...
Compiling '/usr/local/lib/python3.8/getopt.py'...
Compiling '/usr/local/lib/python3.8/gzip.py'...
Compiling '/usr/local/lib/python3.8/hmac.py'...
Compiling '/usr/local/lib/python3.8/html/parser.py'...
Compiling '/usr/local/lib/python3.8/http/cookies.py'...
Compiling '/usr/local/lib/python3.8/idlelib/calltip.py'...
Compiling '/usr/local/lib/python3.8/idlelib/config.py'...
Compiling '/usr/local/lib/python3.8/idlelib/grep.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/mock_idle.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_autocomplete_w.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_browser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugger.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugger_r.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_debugobj.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pathbrowser.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_searchengine.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_warning.py'...
Compiling '/usr/local/lib/python3.8/idlelib/iomenu.py'...
Compiling '/usr/local/lib/python3.8/idlelib/replace.py'...
Compiling '/usr/local/lib/python3.8/idlelib/search.py'...
Compiling '/usr/local/lib/python3.8/idlelib/squeezer.py'...
Compiling '/usr/local/lib/python3.8/idlelib/undo.py'...
Compiling '/usr/local/lib/python3.8/importlib/abc.py'...
Compiling '/usr/local/lib/python3.8/io.py'...
Compiling '/usr/local/lib/python3.8/ipaddress.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_execfile.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_future.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_imports2.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_intern.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_sys_exc.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_unicode.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_xreadlines.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/__init__.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/grammar.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/pgen2/parse.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/tests/test_refactor.py'...
Compiling '/usr/local/lib/python3.8/lzma.py'...
Compiling '/usr/local/lib/python3.8/mailcap.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/connection.py'...
Compiling '/usr/local/lib/python3.8/os.py'...
Compiling '/usr/local/lib/python3.8/poplib.py'...
Compiling '/usr/local/lib/python3.8/pyclbr.py'...
Compiling '/usr/local/lib/python3.8/shutil.py'...
Compiling '/usr/local/lib/python3.8/stat.py'...
Compiling '/usr/local/lib/python3.8/subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/dataclass_module_1.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/instance.py'...
Compiling '/usr/local/lib/python3.8/test/encoded_modules/module_koi8_r.py'...
Compiling '/usr/local/lib/python3.8/test/final_b.py'...
Compiling '/usr/local/lib/python3.8/test/gdb_sample.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/main.py'...
Compiling '/usr/local/lib/python3.8/test/mock_socket.py'...
Compiling '/usr/local/lib/python3.8/test/multibytecodec_support.py'...
Compiling '/usr/local/lib/python3.8/test/relimport.py'...
Compiling '/usr/local/lib/python3.8/test/reperf.py'...
Compiling '/usr/local/lib/python3.8/test/sample_doctest.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/fd_status.py'...
Compiling '/usr/local/lib/python3.8/test/subprocessdata/qgrep.py'...
Compiling '/usr/local/lib/python3.8/test/support/script_helper.py'...
Compiling '/usr/local/lib/python3.8/test/test___future__.py'...
Compiling '/usr/local/lib/python3.8/test/test__osx_support.py'...
Compiling '/usr/local/lib/python3.8/test/test_ast.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_unix_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_bufio.py'...
Compiling '/usr/local/lib/python3.8/test/test_builtin.py'...
Compiling '/usr/local/lib/python3.8/test/test_code_module.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_hk.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecencodings_jp.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_cn.py'...
Compiling '/usr/local/lib/python3.8/test/test_codecmaps_jp.py'...
Compiling '/usr/local/lib/python3.8/test/test_compare.py'...
Compiling '/usr/local/lib/python3.8/test/test_complex.py'...
Compiling '/usr/local/lib/python3.8/test/test_contextlib_async.py'...
Compiling '/usr/local/lib/python3.8/test/test_copy.py'...
Compiling '/usr/local/lib/python3.8/test/test_dataclasses.py'...
Compiling '/usr/local/lib/python3.8/test/test_dtrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_eintr.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_defect_handling.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_inversion.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_message.py'...
Compiling '/usr/local/lib/python3.8/test/test_embed.py'...Compiling '/usr/local/lib/python3.8/_markupbase.py'...
Compiling '/usr/local/lib/python3.8/aifc.py'...
Compiling '/usr/local/lib/python3.8/asyncio/base_futures.py'...
Compiling '/usr/local/lib/python3.8/asyncio/format_helpers.py'...
Compiling '/usr/local/lib/python3.8/asyncio/locks.py'...
Compiling '/usr/local/lib/python3.8/asyncio/sslproto.py'...
Compiling '/usr/local/lib/python3.8/bisect.py'...
Compiling '/usr/local/lib/python3.8/calendar.py'...
Compiling '/usr/local/lib/python3.8/concurrent/futures/_base.py'...
Compiling '/usr/local/lib/python3.8/ctypes/_aix.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_anon.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_bytes.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_cfuncs.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_incomplete.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_objects.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_pickling.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_refcounts.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_slicing.py'...
Compiling '/usr/local/lib/python3.8/ctypes/test/test_values.py'...
Compiling '/usr/local/lib/python3.8/ctypes/wintypes.py'...
Compiling '/usr/local/lib/python3.8/distutils/bcppcompiler.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/bdist_msi.py'...
Compiling '/usr/local/lib/python3.8/distutils/command/register.py'...
Compiling '/usr/local/lib/python3.8/distutils/fancy_getopt.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/support.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_bdist_msi.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_build_ext.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_file_util.py'...
Compiling '/usr/local/lib/python3.8/distutils/tests/test_install_headers.py'...
Compiling '/usr/local/lib/python3.8/distutils/util.py'...
Compiling '/usr/local/lib/python3.8/email/charset.py'...
Compiling '/usr/local/lib/python3.8/email/headerregistry.py'...
Compiling '/usr/local/lib/python3.8/email/quoprimime.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp273.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp775.py'...
Compiling '/usr/local/lib/python3.8/encodings/cp865.py'...
Compiling '/usr/local/lib/python3.8/encodings/euc_jp.py'...
Compiling '/usr/local/lib/python3.8/encodings/gbk.py'...
Compiling '/usr/local/lib/python3.8/encodings/idna.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_13.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_3.py'...
Compiling '/usr/local/lib/python3.8/encodings/iso8859_6.py'...
Compiling '/usr/local/lib/python3.8/encodings/mac_iceland.py'...
Compiling '/usr/local/lib/python3.8/encodings/mbcs.py'...
Compiling '/usr/local/lib/python3.8/encodings/ptcp154.py'...
Compiling '/usr/local/lib/python3.8/encodings/rot_13.py'...
Compiling '/usr/local/lib/python3.8/encodings/undefined.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_32_le.py'...
Compiling '/usr/local/lib/python3.8/encodings/utf_7.py'...
Compiling '/usr/local/lib/python3.8/encodings/uu_codec.py'...
Compiling '/usr/local/lib/python3.8/glob.py'...
Compiling '/usr/local/lib/python3.8/idlelib/autocomplete.py'...
Compiling '/usr/local/lib/python3.8/idlelib/config_key.py'...
Compiling '/usr/local/lib/python3.8/idlelib/delegator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/editor.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_grep.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_history.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_macosx.py'...
Compiling '/usr/local/lib/python3.8/idlelib/idle_test/test_pyparse.py'...
Compiling '/usr/local/lib/python3.8/idlelib/percolator.py'...
Compiling '/usr/local/lib/python3.8/idlelib/redirector.py'...
Compiling '/usr/local/lib/python3.8/idlelib/sidebar.py'...
Compiling '/usr/local/lib/python3.8/importlib/_bootstrap_external.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixer_base.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_metaclass.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/fixes/fix_reload.py'...
Compiling '/usr/local/lib/python3.8/lib2to3/refactor.py'...
Compiling '/usr/local/lib/python3.8/logging/__init__.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/popen_spawn_posix.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/queues.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/resource_tracker.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/sharedctypes.py'...
Compiling '/usr/local/lib/python3.8/multiprocessing/util.py'...
Compiling '/usr/local/lib/python3.8/operator.py'...
Compiling '/usr/local/lib/python3.8/pickletools.py'...
Compiling '/usr/local/lib/python3.8/profile.py'...
Compiling '/usr/local/lib/python3.8/random.py'...
Compiling '/usr/local/lib/python3.8/socket.py'...
Compiling '/usr/local/lib/python3.8/sqlite3/test/types.py'...
Compiling '/usr/local/lib/python3.8/sre_parse.py'...
Compiling '/usr/local/lib/python3.8/tarfile.py'...
Compiling '/usr/local/lib/python3.8/test/dtracedata/gc.py'...
Compiling '/usr/local/lib/python3.8/test/future_test2.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/pgo.py'...
Compiling '/usr/local/lib/python3.8/test/libregrtest/save_env.py'...
Compiling '/usr/local/lib/python3.8/test/lock_tests.py'...
Compiling '/usr/local/lib/python3.8/test/signalinterproctester.py'...
Compiling '/usr/local/lib/python3.8/test/ssl_servers.py'...
Compiling '/usr/local/lib/python3.8/test/test___all__.py'...
Compiling '/usr/local/lib/python3.8/test/test__locale.py'...
Compiling '/usr/local/lib/python3.8/test/test_aifc.py'...
Compiling '/usr/local/lib/python3.8/test/test_array.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_locks.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_runners.py'...
Compiling '/usr/local/lib/python3.8/test/test_asyncio/test_selector_events.py'...
Compiling '/usr/local/lib/python3.8/test/test_audit.py'...
Compiling '/usr/local/lib/python3.8/test/test_augassign.py'...
Compiling '/usr/local/lib/python3.8/test/test_bdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_bool.py'...
Compiling '/usr/local/lib/python3.8/test/test_bytes.py'...
Compiling '/usr/local/lib/python3.8/test/test_cmd_line_script.py'...
Compiling '/usr/local/lib/python3.8/test/test_codeop.py'...
Compiling '/usr/local/lib/python3.8/test/test_compile.py'...
Compiling '/usr/local/lib/python3.8/test/test_context.py'...
Compiling '/usr/local/lib/python3.8/test/test_coroutines.py'...
Compiling '/usr/local/lib/python3.8/test/test_decorators.py'...
Compiling '/usr/local/lib/python3.8/test/test_descr.py'...
Compiling '/usr/local/lib/python3.8/test/test_file.py'...
Compiling '/usr/local/lib/python3.8/test/test_filecmp.py'...
Compiling '/usr/local/lib/python3.8/test/test_float.py'...
Compiling '/usr/local/lib/python3.8/test/test_generator_stop.py'...
Compiling '/usr/local/lib/python3.8/test/test_genericclass.py'...
Compiling '/usr/local/lib/python3.8/test/test_gettext.py'...
Compiling '/usr/local/lib/python3.8/test/test_httpservers.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_locks.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_namespace_pkgs.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_zip.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/zipdata01/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_int_literal.py'...
Compiling '/usr/local/lib/python3.8/test/test_io.py'...
Compiling '/usr/local/lib/python3.8/test/test_metaclass.py'...
Compiling '/usr/local/lib/python3.8/test/test_minidom.py'...
Compiling '/usr/local/lib/python3.8/test/test_opcodes.py'...
Compiling '/usr/local/lib/python3.8/test/test_openpty.py'...
Compiling '/usr/local/lib/python3.8/test/test_optparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkg.py'...
Compiling '/usr/local/lib/python3.8/test/test_popen.py'...
Compiling '/usr/local/lib/python3.8/test/test_poplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_print.py'...
Compiling '/usr/local/lib/python3.8/test/test_pty.py'...
Compiling '/usr/local/lib/python3.8/test/test_doctest.py'...
Compiling '/usr/local/lib/python3.8/test/test_dynamic.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test__header_value_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_future3.py'...
Compiling '/usr/local/lib/python3.8/test/test_future4.py'...
Compiling '/usr/local/lib/python3.8/test/test_gc.py'...
Compiling '/usr/local/lib/python3.8/test/test_hmac.py'...
Compiling '/usr/local/lib/python3.8/test/test_httplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_file_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/zipdata02/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_index.py'...
Compiling '/usr/local/lib/python3.8/test/test_ioctl.py'...
Compiling '/usr/local/lib/python3.8/test/test_ipaddress.py'...
Compiling '/usr/local/lib/python3.8/test/test_logging.py'...
Compiling '/usr/local/lib/python3.8/test/test_ordered_dict.py'...
Compiling '/usr/local/lib/python3.8/test/test_pickle.py'...
Compiling '/usr/local/lib/python3.8/test/test_poll.py'...
Compiling '/usr/local/lib/python3.8/test/test_posixpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_pulldom.py'...
Compiling '/usr/local/lib/python3.8/test/test_pyclbr.py'...
Compiling '/usr/local/lib/python3.8/test/test_raise.py'...
Compiling '/usr/local/lib/python3.8/test/test_readline.py'...
Compiling '/usr/local/lib/python3.8/test/test_rlcompleter.py'...
Compiling '/usr/local/lib/python3.8/test/test_sax.py'...
Compiling '/usr/local/lib/python3.8/test/test_source_encoding.py'...
Compiling '/usr/local/lib/python3.8/test/test_string.py'...
Compiling '/usr/local/lib/python3.8/test/test_subclassinit.py'...
Compiling '/usr/local/lib/python3.8/test/test_support.py'...
Compiling '/usr/local/lib/python3.8/test/test_tempfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_ucn.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_file_functions.py'...
Compiling '/usr/local/lib/python3.8/test/test_univnewlines.py'...
Compiling '/usr/local/lib/python3.8/test/test_unpack_ex.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2_localnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2net.py'...
Compiling '/usr/local/lib/python3.8/test/test_urlparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/data/stacklevel.py'...
Compiling '/usr/local/lib/python3.8/test/test_webbrowser.py'...
Compiling '/usr/local/lib/python3.8/test/test_with.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_etree.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_images.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_extensions.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/widget_tests.py'...
Compiling '/usr/local/lib/python3.8/token.py'...
Compiling '/usr/local/lib/python3.8/trace.py'...
Compiling '/usr/local/lib/python3.8/turtle.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/support.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testsealable.py'...
Compiling '/usr/local/lib/python3.8/urllib/__init__.py'...
Compiling '/usr/local/lib/python3.8/urllib/error.py'...
Compiling '/usr/local/lib/python3.8/urllib/request.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/xmlbuilder.py'...
Compiling '/usr/local/lib/python3.8/xml/parsers/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/expatreader.py'...
Compiling '/usr/local/lib/python3.8/zipapp.py'...

Compiling '/usr/local/lib/python3.8/test/test_eof.py'...
Compiling '/usr/local/lib/python3.8/test/test_errno.py'...
Compiling '/usr/local/lib/python3.8/test/test_exception_hierarchy.py'...
Compiling '/usr/local/lib/python3.8/test/test_fcntl.py'...
Compiling '/usr/local/lib/python3.8/test/test_file_eintr.py'...
Compiling '/usr/local/lib/python3.8/test/test_fileinput.py'...
Compiling '/usr/local/lib/python3.8/test/test_frame.py'...
Compiling '/usr/local/lib/python3.8/test/test_frozen.py'...
Compiling '/usr/local/lib/python3.8/test/test_fstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_getopt.py'...
Compiling '/usr/local/lib/python3.8/test/test_gzip.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test___package__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo/two.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_main.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_resource.py'...
Compiling '/usr/local/lib/python3.8/test/test_int.py'...
Compiling '/usr/local/lib/python3.8/test/test_itertools.py'...
Compiling '/usr/local/lib/python3.8/test/test_memoryio.py'...
Compiling '/usr/local/lib/python3.8/test/test_modulefinder.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_fork.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_main_handling.py'...
Compiling '/usr/local/lib/python3.8/test/test_nis.py'...
Compiling '/usr/local/lib/python3.8/test/test_nntplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_peepholer.py'...
Compiling '/usr/local/lib/python3.8/test/test_positional_only_arg.py'...
Compiling '/usr/local/lib/python3.8/test/test_property.py'...
Compiling '/usr/local/lib/python3.8/test/test_quopri.py'...
Compiling '/usr/local/lib/python3.8/test/test_range.py'...
Compiling '/usr/local/lib/python3.8/test/test_regrtest.py'...
Compiling '/usr/local/lib/python3.8/test/test_script_helper.py'...
Compiling '/usr/local/lib/python3.8/test/test_secrets.py'...
Compiling '/usr/local/lib/python3.8/test/test_setcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_shelve.py'...
Compiling '/usr/local/lib/python3.8/test/test_signal.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtpnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_socket.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_lll.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pdeps.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_reindent.py'...
Compiling '/usr/local/lib/python3.8/test/test_tracemalloc.py'...
Compiling '/usr/local/lib/python3.8/test/test_utf8source.py'...
Compiling '/usr/local/lib/python3.8/test/test_venv.py'...
Compiling '/usr/local/lib/python3.8/test/test_winreg.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_dom_minicompat.py'...
Compiling '/usr/local/lib/python3.8/test/test_xml_etree_c.py'...
Compiling '/usr/local/lib/python3.8/test/test_yield_from.py'...
Compiling '/usr/local/lib/python3.8/test/test_zlib.py'...
Compiling '/usr/local/lib/python3.8/test/ziptestdata/testdata_module_inside_zip.py'...
Compiling '/usr/local/lib/python3.8/this.py'...
Compiling '/usr/local/lib/python3.8/threading.py'...
Compiling '/usr/local/lib/python3.8/tkinter/ttk.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/chaos.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/colormixer.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/nim.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/two_canvases.py'...
Compiling '/usr/local/lib/python3.8/unittest/mock.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/support.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testcallable.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testmock.py'...

Compiling '/usr/local/lib/python3.8/test/test_pwd.py'...
Compiling '/usr/local/lib/python3.8/test/test_pydoc.py'...
Compiling '/usr/local/lib/python3.8/test/test_richcmp.py'...
Compiling '/usr/local/lib/python3.8/test/test_shlex.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtpd.py'...
Compiling '/usr/local/lib/python3.8/test/test_strptime.py'...
Compiling '/usr/local/lib/python3.8/test/test_sundry.py'...
Compiling '/usr/local/lib/python3.8/test/test_symbol.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys.py'...
Compiling '/usr/local/lib/python3.8/test/test_telnetlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_textwrap.py'...
Compiling '/usr/local/lib/python3.8/test/test_threadsignals.py'...
Compiling '/usr/local/lib/python3.8/test/test_timeout.py'...
Compiling '/usr/local/lib/python3.8/test/test_tokenize.py'...
Compiling '/usr/local/lib/python3.8/test/test_typechecks.py'...
Compiling '/usr/local/lib/python3.8/test/test_typing.py'...
Compiling '/usr/local/lib/python3.8/test/threaded_import_hangers.py'...
Compiling '/usr/local/lib/python3.8/test/tracedmodules/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/win_console_handler.py'...
Compiling '/usr/local/lib/python3.8/timeit.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_variables.py'...
Compiling '/usr/local/lib/python3.8/tkinter/tix.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/rosette.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/sorting_animate.py'...
Compiling '/usr/local/lib/python3.8/typing.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_discovery.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_skipping.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_suite.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testmagicmethods.py'...
Compiling '/usr/local/lib/python3.8/unittest/util.py'...
Compiling '/usr/local/lib/python3.8/urllib/response.py'...
Compiling '/usr/local/lib/python3.8/urllib/robotparser.py'...
Compiling '/usr/local/lib/python3.8/wave.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/util.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/domreg.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/minidom.py'...

Compiling '/usr/local/lib/python3.8/test/test_email/test_policy.py'...
Compiling '/usr/local/lib/python3.8/test/test_exceptions.py'...
Compiling '/usr/local/lib/python3.8/test/test_fork1.py'...
Compiling '/usr/local/lib/python3.8/test/test_functools.py'...
Compiling '/usr/local/lib/python3.8/test/test_imp.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/indirect.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/source.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package/submodule.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data01/subdirectory/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/fixtures.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_relative_imports.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_lazy.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_decode.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_float.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass2.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_recursion.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_tool.py'...
Compiling '/usr/local/lib/python3.8/test/test_keywordonlyarg.py'...
Compiling '/usr/local/lib/python3.8/test/test_linecache.py'...
Compiling '/usr/local/lib/python3.8/test/test_mailcap.py'...
Compiling '/usr/local/lib/python3.8/test/test_marshal.py'...
Compiling '/usr/local/lib/python3.8/test/test_mimetypes.py'...
Compiling '/usr/local/lib/python3.8/test/test_mmap.py'...
Compiling '/usr/local/lib/python3.8/test/test_named_expressions.py'...
Compiling '/usr/local/lib/python3.8/test/test_osx_env.py'...
Compiling '/usr/local/lib/python3.8/test/test_parser.py'...
Compiling '/usr/local/lib/python3.8/test/test_platform.py'...
Compiling '/usr/local/lib/python3.8/test/test_pow.py'...
Compiling '/usr/local/lib/python3.8/test/test_pprint.py'...
Compiling '/usr/local/lib/python3.8/test/test_pyexpat.py'...
Compiling '/usr/local/lib/python3.8/test/test_re.py'...
Compiling '/usr/local/lib/python3.8/test/test_sort.py'...
Compiling '/usr/local/lib/python3.8/test/test_spwd.py'...
Compiling '/usr/local/lib/python3.8/test/test_ssl.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_sundry.py'...
Compiling '/usr/local/lib/python3.8/test/test_ttk_textonly.py'...
Compiling '/usr/local/lib/python3.8/test/test_types.py'...
Compiling '/usr/local/lib/python3.8/test/test_userdict.py'...
Compiling '/usr/local/lib/python3.8/test/test_userstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipimport.py'...
Compiling '/usr/local/lib/python3.8/tkinter/commondialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/dialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/dnd.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_style.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_widgets.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/yinyang.py'...
Compiling '/usr/local/lib/python3.8/unittest/main.py'...
Compiling '/usr/local/lib/python3.8/unittest/suite.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_program.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_setups.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testasync.py'...
Compiling '/usr/local/lib/python3.8/urllib/parse.py'...
Compiling '/usr/local/lib/python3.8/venv/__main__.py'...
Compiling '/usr/local/lib/python3.8/warnings.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/handlers.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/NodeFilter.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/expatbuilder.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/saxutils.py'...
Compiling '/usr/local/lib/python3.8/zipimport.py'...

Compiling '/usr/local/lib/python3.8/test/test_dynamicclassattribute.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_asian_codecs.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_contentmanager.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/test_utils.py'...
Compiling '/usr/local/lib/python3.8/test/test_email/torture_test.py'...
Compiling '/usr/local/lib/python3.8/test/test_ensurepip.py'...
Compiling '/usr/local/lib/python3.8/test/test_enumerate.py'...
Compiling '/usr/local/lib/python3.8/test/test_epoll.py'...
Compiling '/usr/local/lib/python3.8/test/test_exception_variations.py'...
Compiling '/usr/local/lib/python3.8/test/test_extcall.py'...
Compiling '/usr/local/lib/python3.8/test/test_faulthandler.py'...
Compiling '/usr/local/lib/python3.8/test/test_fileio.py'...
Compiling '/usr/local/lib/python3.8/test/test_format.py'...
Compiling '/usr/local/lib/python3.8/test/test_ftplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_genericpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_global.py'...
Compiling '/usr/local/lib/python3.8/test/test_grp.py'...
Compiling '/usr/local/lib/python3.8/test/test_hash.py'...
Compiling '/usr/local/lib/python3.8/test/test_heapq.py'...
Compiling '/usr/local/lib/python3.8/test/test_http_cookies.py'...
Compiling '/usr/local/lib/python3.8/test/test_idle.py'...
Compiling '/usr/local/lib/python3.8/test/test_imghdr.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/basic2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/binding.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/binding2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/from_cycle1.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/rebinding.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_meta_path.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_path_hook.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/stubs.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_metadata_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_open.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_spec.py'...
Compiling '/usr/local/lib/python3.8/test/test_iter.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_separators.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/test/test_largefile.py'...
Compiling '/usr/local/lib/python3.8/test/test_lib2to3.py'...
Compiling '/usr/local/lib/python3.8/test/test_listcomps.py'...
Compiling '/usr/local/lib/python3.8/test/test_lltrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_locale.py'...
Compiling '/usr/local/lib/python3.8/test/test_mailbox.py'...
Compiling '/usr/local/lib/python3.8/test/test_os.py'...
Compiling '/usr/local/lib/python3.8/test/test_slice.py'...
Compiling '/usr/local/lib/python3.8/test/test_smtplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_startfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_statistics.py'...
Compiling '/usr/local/lib/python3.8/test/test_syslog.py'...
Compiling '/usr/local/lib/python3.8/test/test_tabnanny.py'...
Compiling '/usr/local/lib/python3.8/test/test_tcl.py'...
Compiling '/usr/local/lib/python3.8/test/test_thread.py'...
Compiling '/usr/local/lib/python3.8/test/test_threaded_import.py'...
Compiling '/usr/local/lib/python3.8/test/test_threadedtempfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_threading_local.py'...
Compiling '/usr/local/lib/python3.8/test/test_time.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_i18n.py'...
Compiling '/usr/local/lib/python3.8/test/test_ttk_guionly.py'...
Compiling '/usr/local/lib/python3.8/test/test_turtle.py'...
Compiling '/usr/local/lib/python3.8/test/test_unittest.py'...
Compiling '/usr/local/lib/python3.8/test/test_unpack.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib2.py'...
Compiling '/usr/local/lib/python3.8/test/test_wait4.py'...
Compiling '/usr/local/lib/python3.8/test/test_winconsoleio.py'...
Compiling '/usr/local/lib/python3.8/test/test_winsound.py'...
Compiling '/usr/local/lib/python3.8/test/test_xdrlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_xmlrpc.py'...
Compiling '/usr/local/lib/python3.8/test/xmltests.py'...
Compiling '/usr/local/lib/python3.8/tkinter/messagebox.py'...
Compiling '/usr/local/lib/python3.8/tkinter/simpledialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_geometry_managers.py'...
Compiling '/usr/local/lib/python3.8/tokenize.py'...
Compiling '/usr/local/lib/python3.8/tracemalloc.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/clock.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/fractalcurves.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/minimal_hanoi.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/paint.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/tree.py'...
Compiling '/usr/local/lib/python3.8/unittest/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testhelpers.py'...
Compiling '/usr/local/lib/python3.8/weakref.py'...
Compiling '/usr/local/lib/python3.8/xml/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementInclude.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/__init__.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/cElementTree.py'...
Compiling '/usr/local/lib/python3.8/xml/parsers/expat.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/_exceptions.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/handler.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/__init__.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/server.py'...

Compiling '/usr/local/lib/python3.8/test/test_curses.py'...
Compiling '/usr/local/lib/python3.8/test/test_dbm_dumb.py'...
Compiling '/usr/local/lib/python3.8/test/test_decimal.py'...
Compiling '/usr/local/lib/python3.8/test/test_enum.py'...
Compiling '/usr/local/lib/python3.8/test/test_funcattrs.py'...
Compiling '/usr/local/lib/python3.8/test/test_future.py'...
Compiling '/usr/local/lib/python3.8/test/test_future5.py'...
Compiling '/usr/local/lib/python3.8/test/test_gdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_getpass.py'...
Compiling '/usr/local/lib/python3.8/test/test_glob.py'...
Compiling '/usr/local/lib/python3.8/test/test_hashlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_http_cookiejar.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpackage.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/use.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package2/submodule2.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/two/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_path_hook.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_packages.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child/three.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_case_sensitivity.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_read.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_util.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_default.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_encode_basestring_ascii.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_enum.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_indent.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass1.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_pass3.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_scanstring.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_speedups.py'...
Compiling '/usr/local/lib/python3.8/test/test_keyword.py'...
Compiling '/usr/local/lib/python3.8/test/test_kqueue.py'...
Compiling '/usr/local/lib/python3.8/test/test_list.py'...
Compiling '/usr/local/lib/python3.8/test/test_longexp.py'...
Compiling '/usr/local/lib/python3.8/test/test_lzma.py'...
Compiling '/usr/local/lib/python3.8/test/test_multibytecodec.py'...
Compiling '/usr/local/lib/python3.8/test/test_normalization.py'...
Compiling '/usr/local/lib/python3.8/test/test_numeric_tower.py'...
Compiling '/usr/local/lib/python3.8/test/test_operator.py'...
Compiling '/usr/local/lib/python3.8/test/test_pdb.py'...
Compiling '/usr/local/lib/python3.8/test/test_picklebuffer.py'...
Compiling '/usr/local/lib/python3.8/test/test_pickletools.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkgimport.py'...
Compiling '/usr/local/lib/python3.8/test/test_plistlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_profile.py'...
Compiling '/usr/local/lib/python3.8/test/test_pstats.py'...
Compiling '/usr/local/lib/python3.8/test/test_py_compile.py'...
Compiling '/usr/local/lib/python3.8/test/test_queue.py'...
Compiling '/usr/local/lib/python3.8/test/test_reprlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_sched.py'...
Compiling '/usr/local/lib/python3.8/test/test_shutil.py'...
Compiling '/usr/local/lib/python3.8/test/test_syntax.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys_setprofile.py'...
Compiling '/usr/local/lib/python3.8/test/test_sysconfig.py'...
Compiling '/usr/local/lib/python3.8/test/test_tarfile.py'...
Compiling '/usr/local/lib/python3.8/test/test_timeit.py'...
Compiling '/usr/local/lib/python3.8/test/test_tix.py'...
Compiling '/usr/local/lib/python3.8/test/test_tk.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_fixcid.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pathfix.py'...
Compiling '/usr/local/lib/python3.8/test/test_traceback.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib_response.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllibnet.py'...
Compiling '/usr/local/lib/python3.8/test/test_userlist.py'...
Compiling '/usr/local/lib/python3.8/test/test_uu.py'...
Compiling '/usr/local/lib/python3.8/test/test_warnings/data/import_warning.py'...
Compiling '/usr/local/lib/python3.8/test/test_weakset.py'...
Compiling '/usr/local/lib/python3.8/test/test_xmlrpc_net.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipapp.py'...
Compiling '/usr/local/lib/python3.8/test/time_hashlib.py'...
Compiling '/usr/local/lib/python3.8/test/tracedmodules/testmod.py'...
Compiling '/usr/local/lib/python3.8/textwrap.py'...
Compiling '/usr/local/lib/python3.8/tkinter/__init__.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/peace.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/round_dance.py'...
Compiling '/usr/local/lib/python3.8/unittest/loader.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_functiontestcase.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_result.py'...
Compiling '/usr/local/lib/python3.8/venv/__init__.py'...
Compiling '/usr/local/lib/python3.8/webbrowser.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementTree.py'...

Compiling '/usr/local/lib/python3.8/test/test_genexps.py'...
Compiling '/usr/local/lib/python3.8/test/test_getargs2.py'...
Compiling '/usr/local/lib/python3.8/test/test_html.py'...
Compiling '/usr/local/lib/python3.8/test/test_htmlparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/basic.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/from_cycle2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/rebinding2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg/subpackage2.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/circular_imports/util.py'...
Compiling '/usr/local/lib/python3.8/test/test_import/data/package2/submodule1.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/builtin/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data01/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_loader.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_caching.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo/one.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/source/test_source_encoding.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_api.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_windows.py'...
Compiling '/usr/local/lib/python3.8/test/test_inspect.py'...
Compiling '/usr/local/lib/python3.8/test/test_memoryview.py'...
Compiling '/usr/local/lib/python3.8/test/test_module.py'...
Compiling '/usr/local/lib/python3.8/test/test_msilib.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_forkserver.py'...
Compiling '/usr/local/lib/python3.8/test/test_multiprocessing_spawn.py'...
Compiling '/usr/local/lib/python3.8/test/test_netrc.py'...
Compiling '/usr/local/lib/python3.8/test/test_ntpath.py'...
Compiling '/usr/local/lib/python3.8/test/test_ossaudiodev.py'...
Compiling '/usr/local/lib/python3.8/test/test_pathlib.py'...
Compiling '/usr/local/lib/python3.8/test/test_runpy.py'...
Compiling '/usr/local/lib/python3.8/test/test_select.py'...
Compiling '/usr/local/lib/python3.8/test/test_selectors.py'...
Compiling '/usr/local/lib/python3.8/test/test_site.py'...
Compiling '/usr/local/lib/python3.8/test/test_sndhdr.py'...
Compiling '/usr/local/lib/python3.8/test/test_socketserver.py'...
Compiling '/usr/local/lib/python3.8/test/test_sqlite.py'...
Compiling '/usr/local/lib/python3.8/test/test_stat.py'...
Compiling '/usr/local/lib/python3.8/test/test_strftime.py'...
Compiling '/usr/local/lib/python3.8/test/test_stringprep.py'...
Compiling '/usr/local/lib/python3.8/test/test_strtod.py'...
Compiling '/usr/local/lib/python3.8/test/test_structmembers.py'...
Compiling '/usr/local/lib/python3.8/test/test_structseq.py'...
Compiling '/usr/local/lib/python3.8/test/test_subprocess.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_pindent.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_unparse.py'...
Compiling '/usr/local/lib/python3.8/test/test_tuple.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode.py'...
Compiling '/usr/local/lib/python3.8/test/test_uuid.py'...
Compiling '/usr/local/lib/python3.8/test/test_weakref.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipfile.py'...
Compiling '/usr/local/lib/python3.8/tkinter/font.py'...
Compiling '/usr/local/lib/python3.8/tkinter/scrolledtext.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/runtktests.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_font.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_misc.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/__init__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_ttk/test_functions.py'...
Compiling '/usr/local/lib/python3.8/traceback.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/bytedesign.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/lindenmayer.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/penrose.py'...
Compiling '/usr/local/lib/python3.8/types.py'...
Compiling '/usr/local/lib/python3.8/unittest/signals.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/__init__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/dummy.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_assertions.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_loader.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testpatch.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/simple_server.py'...
Compiling '/usr/local/lib/python3.8/xdrlib.py'...
Compiling '/usr/local/lib/python3.8/xmlrpc/client.py'...

Compiling '/usr/local/lib/python3.8/test/test_finalization.py'...
Compiling '/usr/local/lib/python3.8/test/test_flufl.py'...
Compiling '/usr/local/lib/python3.8/test/test_fnmatch.py'...
Compiling '/usr/local/lib/python3.8/test/test_fractions.py'...
Compiling '/usr/local/lib/python3.8/test/test_generators.py'...
Compiling '/usr/local/lib/python3.8/test/test_grammar.py'...
Compiling '/usr/local/lib/python3.8/test/test_imaplib.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data02/one/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/extension/test_case_sensitivity.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/__init__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/frozen/test_finder.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test___loader__.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/import_/test_fromlist.py'...
Compiling '/usr/local/lib/python3.8/test/test_importlib/test_abc.py'...
Compiling '/usr/local/lib/python3.8/test/test_isinstance.py'...
Compiling '/usr/local/lib/python3.8/test/test_iterlen.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/__main__.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_dump.py'...
Compiling '/usr/local/lib/python3.8/test/test_json/test_fail.py'...
Compiling '/usr/local/lib/python3.8/test/test_long.py'...
Compiling '/usr/local/lib/python3.8/test/test_math.py'...
Compiling '/usr/local/lib/python3.8/test/test_pipes.py'...
Compiling '/usr/local/lib/python3.8/test/test_pkgutil.py'...
Compiling '/usr/local/lib/python3.8/test/test_posix.py'...
Compiling '/usr/local/lib/python3.8/test/test_random.py'...
Compiling '/usr/local/lib/python3.8/test/test_repl.py'...
Compiling '/usr/local/lib/python3.8/test/test_resource.py'...
Compiling '/usr/local/lib/python3.8/test/test_robotparser.py'...
Compiling '/usr/local/lib/python3.8/test/test_scope.py'...
Compiling '/usr/local/lib/python3.8/test/test_set.py'...
Compiling '/usr/local/lib/python3.8/test/test_string_literals.py'...
Compiling '/usr/local/lib/python3.8/test/test_struct.py'...
Compiling '/usr/local/lib/python3.8/test/test_sunau.py'...
Compiling '/usr/local/lib/python3.8/test/test_super.py'...
Compiling '/usr/local/lib/python3.8/test/test_symtable.py'...
Compiling '/usr/local/lib/python3.8/test/test_sys_settrace.py'...
Compiling '/usr/local/lib/python3.8/test/test_threading.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_gprof2html.py'...
Compiling '/usr/local/lib/python3.8/test/test_tools/test_md5sum.py'...
Compiling '/usr/local/lib/python3.8/test/test_trace.py'...
Compiling '/usr/local/lib/python3.8/test/test_type_comments.py'...
Compiling '/usr/local/lib/python3.8/test/test_unary.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_file.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicode_identifiers.py'...
Compiling '/usr/local/lib/python3.8/test/test_unicodedata.py'...
Compiling '/usr/local/lib/python3.8/test/test_urllib.py'...
Compiling '/usr/local/lib/python3.8/test/test_utf8_mode.py'...
Compiling '/usr/local/lib/python3.8/test/test_wait3.py'...
Compiling '/usr/local/lib/python3.8/test/test_wave.py'...
Compiling '/usr/local/lib/python3.8/test/test_wsgiref.py'...
Compiling '/usr/local/lib/python3.8/test/test_xxtestfuzz.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipfile64.py'...
Compiling '/usr/local/lib/python3.8/test/test_zipimport_support.py'...
Compiling '/usr/local/lib/python3.8/test/testcodec.py'...
Compiling '/usr/local/lib/python3.8/test/tf_inherit_check.py'...
Compiling '/usr/local/lib/python3.8/tkinter/__main__.py'...
Compiling '/usr/local/lib/python3.8/tkinter/colorchooser.py'...
Compiling '/usr/local/lib/python3.8/tkinter/constants.py'...
Compiling '/usr/local/lib/python3.8/tkinter/filedialog.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/support.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_loadtk.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_text.py'...
Compiling '/usr/local/lib/python3.8/tkinter/test/test_tkinter/test_widgets.py'...
Compiling '/usr/local/lib/python3.8/tty.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/__init__.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/__main__.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/forest.py'...
Compiling '/usr/local/lib/python3.8/turtledemo/planet_and_moon.py'...
Compiling '/usr/local/lib/python3.8/unittest/__main__.py'...
Compiling '/usr/local/lib/python3.8/unittest/async_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/result.py'...
Compiling '/usr/local/lib/python3.8/unittest/runner.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/_test_warnings.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_async_case.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_break.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/test_runner.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testsentinel.py'...
Compiling '/usr/local/lib/python3.8/unittest/test/testmock/testwith.py'...
Compiling '/usr/local/lib/python3.8/uu.py'...
Compiling '/usr/local/lib/python3.8/uuid.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/__init__.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/headers.py'...
Compiling '/usr/local/lib/python3.8/wsgiref/validate.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/minicompat.py'...
Compiling '/usr/local/lib/python3.8/xml/dom/pulldom.py'...
Compiling '/usr/local/lib/python3.8/xml/etree/ElementPath.py'...
Compiling '/usr/local/lib/python3.8/xml/sax/xmlreader.py'...
Compiling '/usr/local/lib/python3.8/zipfile.py'...
Listing '/usr/local/lib/python3.8/asyncio'...
Listing '/usr/local/lib/python3.8/collections'...
Listing '/usr/local/lib/python3.8/concurrent'...
Listing '/usr/local/lib/python3.8/concurrent/futures'...
Listing '/usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu'...
Listing '/usr/local/lib/python3.8/ctypes'...
Listing '/usr/local/lib/python3.8/ctypes/macholib'...
Listing '/usr/local/lib/python3.8/ctypes/test'...
Listing '/usr/local/lib/python3.8/curses'...
Listing '/usr/local/lib/python3.8/dbm'...
Listing '/usr/local/lib/python3.8/distutils'...
Listing '/usr/local/lib/python3.8/distutils/command'...
Listing '/usr/local/lib/python3.8/distutils/tests'...
Listing '/usr/local/lib/python3.8/email'...
Listing '/usr/local/lib/python3.8/email/mime'...
Listing '/usr/local/lib/python3.8/encodings'...
Listing '/usr/local/lib/python3.8/ensurepip'...
Listing '/usr/local/lib/python3.8/ensurepip/_bundled'...
Listing '/usr/local/lib/python3.8/html'...
Listing '/usr/local/lib/python3.8/http'...
Listing '/usr/local/lib/python3.8/idlelib'...
Listing '/usr/local/lib/python3.8/idlelib/Icons'...
Listing '/usr/local/lib/python3.8/idlelib/idle_test'...
Listing '/usr/local/lib/python3.8/importlib'...
Listing '/usr/local/lib/python3.8/json'...
Listing '/usr/local/lib/python3.8/lib-dynload'...
Listing '/usr/local/lib/python3.8/lib2to3'...
Listing '/usr/local/lib/python3.8/lib2to3/fixes'...
Listing '/usr/local/lib/python3.8/lib2to3/pgen2'...
Listing '/usr/local/lib/python3.8/lib2to3/tests'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data/fixers'...
Listing '/usr/local/lib/python3.8/lib2to3/tests/data/fixers/myfixes'...
Listing '/usr/local/lib/python3.8/logging'...
Listing '/usr/local/lib/python3.8/multiprocessing'...
Listing '/usr/local/lib/python3.8/multiprocessing/dummy'...
Listing '/usr/local/lib/python3.8/pydoc_data'...
Listing '/usr/local/lib/python3.8/site-packages'...
Listing '/usr/local/lib/python3.8/sqlite3'...
Listing '/usr/local/lib/python3.8/sqlite3/test'...
Listing '/usr/local/lib/python3.8/test'...
Listing '/usr/local/lib/python3.8/test/audiodata'...
Listing '/usr/local/lib/python3.8/test/capath'...
Listing '/usr/local/lib/python3.8/test/cjkencodings'...
Listing '/usr/local/lib/python3.8/test/data'...
Listing '/usr/local/lib/python3.8/test/decimaltestdata'...
Listing '/usr/local/lib/python3.8/test/dtracedata'...
Listing '/usr/local/lib/python3.8/test/eintrdata'...
Listing '/usr/local/lib/python3.8/test/encoded_modules'...
Listing '/usr/local/lib/python3.8/test/imghdrdata'...
Listing '/usr/local/lib/python3.8/test/libregrtest'...
Listing '/usr/local/lib/python3.8/test/sndhdrdata'...
Listing '/usr/local/lib/python3.8/test/subprocessdata'...
Listing '/usr/local/lib/python3.8/test/support'...
Listing '/usr/local/lib/python3.8/test/test_asyncio'...
Listing '/usr/local/lib/python3.8/test/test_email'...
Listing '/usr/local/lib/python3.8/test/test_email/data'...
Listing '/usr/local/lib/python3.8/test/test_import'...
Listing '/usr/local/lib/python3.8/test/test_import/data'...
Listing '/usr/local/lib/python3.8/test/test_import/data/circular_imports'...
Listing '/usr/local/lib/python3.8/test/test_import/data/circular_imports/subpkg'...
Listing '/usr/local/lib/python3.8/test/test_import/data/package'...
Listing '/usr/local/lib/python3.8/test/test_import/data/package2'...
Listing '/usr/local/lib/python3.8/test/test_importlib'...
Listing '/usr/local/lib/python3.8/test/test_importlib/builtin'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data01'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data01/subdirectory'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02/one'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data02/two'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/data03/namespace/portion2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/extension'...
Listing '/usr/local/lib/python3.8/test/test_importlib/frozen'...
Listing '/usr/local/lib/python3.8/test/test_importlib/import_'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/both_portions/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/module_and_namespace_package/a_test'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/not_a_namespace_pkg/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion1/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/portion2/foo'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project1/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project2/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent'...
Listing '/usr/local/lib/python3.8/test/test_importlib/namespace_pkgs/project3/parent/child'...
Listing '/usr/local/lib/python3.8/test/test_importlib/source'...
Listing '/usr/local/lib/python3.8/test/test_importlib/zipdata01'...
Listing '/usr/local/lib/python3.8/test/test_importlib/zipdata02'...
Listing '/usr/local/lib/python3.8/test/test_json'...
Listing '/usr/local/lib/python3.8/test/test_tools'...
Listing '/usr/local/lib/python3.8/test/test_warnings'...
Listing '/usr/local/lib/python3.8/test/test_warnings/data'...
Listing '/usr/local/lib/python3.8/test/tracedmodules'...
Listing '/usr/local/lib/python3.8/test/xmltestdata'...
Listing '/usr/local/lib/python3.8/test/xmltestdata/c14n-20'...
Listing '/usr/local/lib/python3.8/test/ziptestdata'...
Listing '/usr/local/lib/python3.8/tkinter'...
Listing '/usr/local/lib/python3.8/tkinter/test'...
Listing '/usr/local/lib/python3.8/tkinter/test/test_tkinter'...
Listing '/usr/local/lib/python3.8/tkinter/test/test_ttk'...
Listing '/usr/local/lib/python3.8/turtledemo'...
Listing '/usr/local/lib/python3.8/unittest'...
Listing '/usr/local/lib/python3.8/unittest/test'...
Listing '/usr/local/lib/python3.8/unittest/test/testmock'...
Listing '/usr/local/lib/python3.8/urllib'...
Listing '/usr/local/lib/python3.8/venv'...
Listing '/usr/local/lib/python3.8/venv/scripts'...
Listing '/usr/local/lib/python3.8/venv/scripts/common'...
Listing '/usr/local/lib/python3.8/venv/scripts/posix'...
Listing '/usr/local/lib/python3.8/wsgiref'...
Listing '/usr/local/lib/python3.8/xml'...
Listing '/usr/local/lib/python3.8/xml/dom'...
Listing '/usr/local/lib/python3.8/xml/etree'...
Listing '/usr/local/lib/python3.8/xml/parsers'...
Listing '/usr/local/lib/python3.8/xml/sax'...
Listing '/usr/local/lib/python3.8/xmlrpc'...
PYTHONPATH=/usr/local/lib/python3.8  \
	./python -E -Wi /usr/local/lib/python3.8/compileall.py \
	-j0 -d /usr/local/lib/python3.8/site-packages -f \
	-x badsyntax /usr/local/lib/python3.8/site-packages
Listing '/usr/local/lib/python3.8/site-packages'...
PYTHONPATH=/usr/local/lib/python3.8  \
	./python -E -Wi -O /usr/local/lib/python3.8/compileall.py \
	-j0 -d /usr/local/lib/python3.8/site-packages -f \
	-x badsyntax /usr/local/lib/python3.8/site-packages
Listing '/usr/local/lib/python3.8/site-packages'...
PYTHONPATH=/usr/local/lib/python3.8  \
	./python -E -Wi -OO /usr/local/lib/python3.8/compileall.py \
	-j0 -d /usr/local/lib/python3.8/site-packages -f \
	-x badsyntax /usr/local/lib/python3.8/site-packages
Listing '/usr/local/lib/python3.8/site-packages'...
PYTHONPATH=/usr/local/lib/python3.8  \
	./python -E -m lib2to3.pgen2.driver /usr/local/lib/python3.8/lib2to3/Grammar.txt
Generating grammar tables from /usr/local/lib/python3.8/lib2to3/Grammar.txt
Writing grammar tables to /usr/local/lib/python3.8/lib2to3/Grammar3.8.5.final.0.pickle
PYTHONPATH=/usr/local/lib/python3.8  \
	./python -E -m lib2to3.pgen2.driver /usr/local/lib/python3.8/lib2to3/PatternGrammar.txt
Generating grammar tables from /usr/local/lib/python3.8/lib2to3/PatternGrammar.txt
Writing grammar tables to /usr/local/lib/python3.8/lib2to3/PatternGrammar3.8.5.final.0.pickle
if test "xupgrade" != "xno"  ; then \
	case upgrade in \
		upgrade) ensurepip="--upgrade" ;; \
		install|*) ensurepip="" ;; \
	esac; \
	 ./python -E -m ensurepip \
		$ensurepip --root=/ ; \
fi
Looking in links: /tmp/tmp56fv_sok
Processing /tmp/tmp56fv_sok/setuptools-47.1.0-py3-none-any.whl
Processing /tmp/tmp56fv_sok/pip-20.1.1-py2.py3-none-any.whl
Installing collected packages: setuptools, pip
Successfully installed pip-20.1.1 setuptools-47.1.0
Removing intermediate container 573dfb76f54d
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Running in d1b499ddf105
Removing intermediate container d1b499ddf105
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_104056
20200813_104542 - Build completed successfully.


Already up to date.
[master 8c30a8b] Automatic build 20200813_104056
 2 files changed, 13778 insertions(+), 12 deletions(-)
20200813_104551 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Retrying in 5 seconds
eb2e93e4340b: Pushed
0d05320c72ac: Retrying in 4 seconds
0d05320c72ac: Retrying in 3 seconds
0d05320c72ac: Retrying in 2 seconds
0d05320c72ac: Retrying in 1 second
f0d20cb8103a: Retrying in 5 seconds
f0d20cb8103a: Retrying in 4 seconds
f0d20cb8103a: Retrying in 3 seconds
f0d20cb8103a: Retrying in 2 seconds
f0d20cb8103a: Retrying in 1 second
0d05320c72ac: Retrying in 10 seconds
0d05320c72ac: Retrying in 9 seconds
0d05320c72ac: Retrying in 8 seconds
0d05320c72ac: Retrying in 7 seconds
0d05320c72ac: Retrying in 6 seconds
0d05320c72ac: Retrying in 5 seconds
0d05320c72ac: Retrying in 4 seconds
0d05320c72ac: Retrying in 3 seconds
0d05320c72ac: Retrying in 2 seconds
0d05320c72ac: Retrying in 1 second
4aa65369d2be: Retrying in 5 seconds
4aa65369d2be: Retrying in 4 seconds
4aa65369d2be: Retrying in 3 seconds
4aa65369d2be: Retrying in 2 seconds
4aa65369d2be: Retrying in 1 second
0d05320c72ac: Pushed
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
ca957f31f870: Pushed
20200813_112201 - Starting Build.

Sending build context to Docker daemon  5.613MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_112201
20200813_112202 - Build completed successfully.


Already up to date.
[master 813ab09] Automatic build 20200813_112201
 1 file changed, 80 insertions(+)
20200813_112211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0d05320c72ac: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
4aa65369d2be: 4aa65369d2be: Pushed
Pushed
929ffb29f4ca: 929ffb29f4ca: Pushed
Pushed
f0d20cb8103a: Pushed
f0d20cb8103a: Pushed
20200813_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_113247 - Docker push completed successfully.


20200813_113247 - All completed successfully
20200813_104056: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_113247 - Docker push completed successfully.


20200813_113247 - All completed successfully
20200813_122201 - Starting Build.

Sending build context to Docker daemon  5.754MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_122201
20200813_122201 - Build completed successfully.


Already up to date.
[master a281459] Automatic build 20200813_122201
 1 file changed, 71 insertions(+)
20200813_122210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200813_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_122217 - Docker push completed successfully.


20200813_122217 - All completed successfully
20200813_132201 - Starting Build.

Sending build context to Docker daemon  5.897MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_132201
20200813_132201 - Build completed successfully.


Already up to date.
[master 4330f9d] Automatic build 20200813_132201
 1 file changed, 63 insertions(+)
20200813_132209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_132216 - Docker push completed successfully.


20200813_132216 - All completed successfully
20200813_142201 - Starting Build.

Sending build context to Docker daemon  6.039MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_142201
20200813_142202 - Build completed successfully.


Already up to date.
[master f40fa1c] Automatic build 20200813_142201
 1 file changed, 61 insertions(+)
20200813_142210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_142216 - Docker push completed successfully.


20200813_142216 - All completed successfully
20200813_152201 - Starting Build.

Sending build context to Docker daemon  6.181MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_152201
20200813_152201 - Build completed successfully.


Already up to date.
[master 43b992d] Automatic build 20200813_152201
 1 file changed, 63 insertions(+)
20200813_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_152217 - Docker push completed successfully.


20200813_152217 - All completed successfully
20200813_162201 - Starting Build.

Sending build context to Docker daemon  6.324MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_162201
20200813_162201 - Build completed successfully.


Already up to date.
[master 4677708] Automatic build 20200813_162201
 1 file changed, 63 insertions(+)
20200813_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200813_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_162218 - Docker push completed successfully.


20200813_162218 - All completed successfully
20200813_172201 - Starting Build.

Sending build context to Docker daemon  6.466MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_172201
20200813_172201 - Build completed successfully.


Already up to date.
[master 79c2653] Automatic build 20200813_172201
 1 file changed, 63 insertions(+)
20200813_172209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200813_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_172216 - Docker push completed successfully.


20200813_172216 - All completed successfully
20200813_182201 - Starting Build.

Sending build context to Docker daemon  6.609MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_182201
20200813_182201 - Build completed successfully.


Already up to date.
[master 91b3e89] Automatic build 20200813_182201
 1 file changed, 63 insertions(+)
20200813_182212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_182220 - Docker push completed successfully.


20200813_182220 - All completed successfully
20200813_192201 - Starting Build.

Sending build context to Docker daemon  6.752MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_192201
20200813_192201 - Build completed successfully.


Already up to date.
[master b0d1dd8] Automatic build 20200813_192201
 1 file changed, 63 insertions(+)
20200813_192210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_192218 - Docker push completed successfully.


20200813_192218 - All completed successfully
20200813_202201 - Starting Build.

Sending build context to Docker daemon  6.895MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_202201
20200813_202201 - Build completed successfully.


Already up to date.
[master 6165941] Automatic build 20200813_202201
 1 file changed, 63 insertions(+)
20200813_202210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200813_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_202218 - Docker push completed successfully.


20200813_202218 - All completed successfully
20200813_212201 - Starting Build.

Sending build context to Docker daemon  7.037MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_212201
20200813_212202 - Build completed successfully.


Already up to date.
[master 4a41f09] Automatic build 20200813_212201
 1 file changed, 62 insertions(+)
20200813_212211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200813_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_212218 - Docker push completed successfully.


20200813_212218 - All completed successfully
20200813_222201 - Starting Build.

Sending build context to Docker daemon  7.182MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_222201
20200813_222201 - Build completed successfully.


Already up to date.
[master 49bb13b] Automatic build 20200813_222201
 1 file changed, 63 insertions(+)
20200813_222211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200813_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_222220 - Docker push completed successfully.


20200813_222220 - All completed successfully
20200813_232201 - Starting Build.

Sending build context to Docker daemon  7.324MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200813_232201
20200813_232201 - Build completed successfully.


Already up to date.
[master 277d0ab] Automatic build 20200813_232201
 1 file changed, 63 insertions(+)
20200813_232211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200813_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200813_232220 - Docker push completed successfully.


20200813_232220 - All completed successfully
20200814_002201 - Starting Build.

Sending build context to Docker daemon  7.468MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_002201
20200814_002202 - Build completed successfully.


Already up to date.
[master a255627] Automatic build 20200814_002201
 1 file changed, 63 insertions(+)
20200814_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200814_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_002219 - Docker push completed successfully.


20200814_002219 - All completed successfully
20200814_012201 - Starting Build.

Sending build context to Docker daemon  7.612MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_012201
20200814_012201 - Build completed successfully.


Already up to date.
[master 68683b4] Automatic build 20200814_012201
 1 file changed, 63 insertions(+)
20200814_012211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200814_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_012220 - Docker push completed successfully.


20200814_012220 - All completed successfully
20200814_022201 - Starting Build.

Sending build context to Docker daemon  7.755MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_022201
20200814_022201 - Build completed successfully.


Already up to date.
[master 10cd65f] Automatic build 20200814_022201
 1 file changed, 62 insertions(+)
20200814_022210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200814_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_022218 - Docker push completed successfully.


20200814_022218 - All completed successfully
20200814_032201 - Starting Build.

Sending build context to Docker daemon  7.898MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_032201
20200814_032201 - Build completed successfully.


Already up to date.
[master b5b3d49] Automatic build 20200814_032201
 1 file changed, 63 insertions(+)
20200814_032212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_032219 - Docker push completed successfully.


20200814_032219 - All completed successfully
20200814_042201 - Starting Build.

Sending build context to Docker daemon  8.042MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_042201
20200814_042201 - Build completed successfully.


Already up to date.
[master f2cf33e] Automatic build 20200814_042201
 1 file changed, 62 insertions(+)
20200814_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200814_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_042218 - Docker push completed successfully.


20200814_042218 - All completed successfully
20200814_052201 - Starting Build.

Sending build context to Docker daemon  8.186MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_052201
20200814_052201 - Build completed successfully.


Already up to date.
[master 83a7f41] Automatic build 20200814_052201
 1 file changed, 62 insertions(+)
20200814_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200814_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_052218 - Docker push completed successfully.


20200814_052218 - All completed successfully
20200814_062201 - Starting Build.

Sending build context to Docker daemon   8.33MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_062201
20200814_062202 - Build completed successfully.


Already up to date.
[master 6c85737] Automatic build 20200814_062201
 1 file changed, 63 insertions(+)
20200814_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_062218 - Docker push completed successfully.


20200814_062218 - All completed successfully
20200814_072201 - Starting Build.

Sending build context to Docker daemon  8.475MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_072201
20200814_072201 - Build completed successfully.


Already up to date.
[master bab742d] Automatic build 20200814_072201
 1 file changed, 62 insertions(+)
20200814_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200814_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_072218 - Docker push completed successfully.


20200814_072218 - All completed successfully
20200814_082201 - Starting Build.

Sending build context to Docker daemon  8.618MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_082201
20200814_082201 - Build completed successfully.


Already up to date.
[master b737c4a] Automatic build 20200814_082201
 1 file changed, 62 insertions(+)
20200814_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_082217 - Docker push completed successfully.


20200814_082217 - All completed successfully
20200814_092201 - Starting Build.

Sending build context to Docker daemon  8.763MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_092201
20200814_092202 - Build completed successfully.


Already up to date.
[master bf19af9] Automatic build 20200814_092201
 1 file changed, 63 insertions(+)
20200814_092211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_092221 - Docker push completed successfully.


20200814_092221 - All completed successfully
20200814_102201 - Starting Build.

Sending build context to Docker daemon  8.908MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_102201
20200814_102201 - Build completed successfully.


Already up to date.
[master c1cd82f] Automatic build 20200814_102201
 1 file changed, 63 insertions(+)
20200814_102212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_102224 - Docker push completed successfully.


20200814_102224 - All completed successfully
20200814_112201 - Starting Build.

Sending build context to Docker daemon  9.052MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_112201
20200814_112201 - Build completed successfully.


Already up to date.
[master 4cdf767] Automatic build 20200814_112201
 1 file changed, 62 insertions(+)
20200814_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_112219 - Docker push completed successfully.


20200814_112219 - All completed successfully
20200814_122201 - Starting Build.

Sending build context to Docker daemon  9.197MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_122201
20200814_122201 - Build completed successfully.


Already up to date.
[master 720b59a] Automatic build 20200814_122201
 1 file changed, 63 insertions(+)
20200814_122219 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200814_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_122230 - Docker push completed successfully.


20200814_122230 - All completed successfully
20200814_132201 - Starting Build.

Sending build context to Docker daemon  9.341MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_132201
20200814_132202 - Build completed successfully.


Already up to date.
[master 9f1bbff] Automatic build 20200814_132201
 1 file changed, 63 insertions(+)
20200814_132212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200814_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_132225 - Docker push completed successfully.


20200814_132225 - All completed successfully
20200814_142201 - Starting Build.

Sending build context to Docker daemon  9.486MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_142201
20200814_142202 - Build completed successfully.


Already up to date.
[master e5d9046] Automatic build 20200814_142201
 1 file changed, 62 insertions(+)
20200814_142211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200814_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_142220 - Docker push completed successfully.


20200814_142220 - All completed successfully
20200814_152201 - Starting Build.

Sending build context to Docker daemon  9.631MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_152201
20200814_152202 - Build completed successfully.


Already up to date.
[master 85d9c4c] Automatic build 20200814_152201
 1 file changed, 63 insertions(+)
20200814_152211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200814_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_152219 - Docker push completed successfully.


20200814_152219 - All completed successfully
20200814_162201 - Starting Build.

Sending build context to Docker daemon  9.777MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_162201
20200814_162201 - Build completed successfully.


Already up to date.
[master 8735009] Automatic build 20200814_162201
 1 file changed, 63 insertions(+)
20200814_162211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200814_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_162222 - Docker push completed successfully.


20200814_162222 - All completed successfully
20200814_172201 - Starting Build.

Sending build context to Docker daemon  9.922MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_172201
20200814_172202 - Build completed successfully.


Already up to date.
[master c81a335] Automatic build 20200814_172201
 1 file changed, 63 insertions(+)
20200814_172211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200814_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_172219 - Docker push completed successfully.


20200814_172219 - All completed successfully
20200814_182201 - Starting Build.

Sending build context to Docker daemon  10.07MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_182201
20200814_182202 - Build completed successfully.


Already up to date.
[master 3e21bbf] Automatic build 20200814_182201
 1 file changed, 63 insertions(+)
20200814_182210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0d05320c72ac: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_182218 - Docker push completed successfully.


20200814_182218 - All completed successfully
20200814_192201 - Starting Build.

Sending build context to Docker daemon  10.21MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_192201
20200814_192203 - Build completed successfully.


Already up to date.
[master e4844e2] Automatic build 20200814_192201
 1 file changed, 64 insertions(+)
20200814_192212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_192221 - Docker push completed successfully.


20200814_192221 - All completed successfully
20200814_202202 - Starting Build.

Sending build context to Docker daemon  10.36MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_202202
20200814_202202 - Build completed successfully.


Already up to date.
[master 04c8ee5] Automatic build 20200814_202202
 1 file changed, 63 insertions(+)
20200814_202211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0d05320c72ac: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_202202: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_202219 - Docker push completed successfully.


20200814_202219 - All completed successfully
20200814_212201 - Starting Build.

Sending build context to Docker daemon   10.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_212201
20200814_212201 - Build completed successfully.


Already up to date.
[master 7262cac] Automatic build 20200814_212201
 1 file changed, 64 insertions(+)
20200814_212210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0d05320c72ac: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_212218 - Docker push completed successfully.


20200814_212218 - All completed successfully
20200814_222201 - Starting Build.

Sending build context to Docker daemon  10.65MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_222201
20200814_222201 - Build completed successfully.


Already up to date.
[master 007d9d2] Automatic build 20200814_222201
 1 file changed, 63 insertions(+)
20200814_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0d05320c72ac: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200814_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_222218 - Docker push completed successfully.


20200814_222218 - All completed successfully
20200814_232201 - Starting Build.

Sending build context to Docker daemon   10.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200814_232201
20200814_232201 - Build completed successfully.


Already up to date.
[master ed59377] Automatic build 20200814_232201
 1 file changed, 64 insertions(+)
20200814_232216 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Mounted from blairy/requests
4aa65369d2be: Retrying in 5 seconds
4aa65369d2be: Retrying in 4 seconds
4aa65369d2be: Retrying in 3 seconds
4aa65369d2be: Retrying in 2 seconds
4aa65369d2be: Retrying in 1 second
4aa65369d2be: Pushed
20200814_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200814_235356 - Docker push completed successfully.


20200814_235356 - All completed successfully
20200815_002201 - Starting Build.

Sending build context to Docker daemon  10.94MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_002201
20200815_002202 - Build completed successfully.


Already up to date.
[master 28f0304] Automatic build 20200815_002201
 1 file changed, 69 insertions(+)
20200815_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200815_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_002221 - Docker push completed successfully.


20200815_002221 - All completed successfully
20200815_042201 - Starting Build.

Sending build context to Docker daemon  11.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_042201
20200815_042202 - Build completed successfully.


Already up to date.
[master cba80dc] Automatic build 20200815_042201
 1 file changed, 64 insertions(+)
20200815_042211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0d05320c72ac: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
20200815_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_042219 - Docker push completed successfully.


20200815_042219 - All completed successfully
20200815_052201 - Starting Build.

Sending build context to Docker daemon  11.23MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_052201
20200815_052201 - Build completed successfully.


Already up to date.
[master 4e40fc2] Automatic build 20200815_052201
 1 file changed, 64 insertions(+)
20200815_052209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
0d05320c72ac: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200815_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_052217 - Docker push completed successfully.


20200815_052217 - All completed successfully
20200815_062201 - Starting Build.

Sending build context to Docker daemon  11.38MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_062201
20200815_062201 - Build completed successfully.


Already up to date.
[master 84afde6] Automatic build 20200815_062201
 1 file changed, 64 insertions(+)
20200815_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200815_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_062217 - Docker push completed successfully.


20200815_062217 - All completed successfully
20200815_072201 - Starting Build.

Sending build context to Docker daemon  11.53MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_072201
20200815_072202 - Build completed successfully.


Already up to date.
[master 3a3754e] Automatic build 20200815_072201
 1 file changed, 64 insertions(+)
20200815_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
0d05320c72ac: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200815_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_072218 - Docker push completed successfully.


20200815_072218 - All completed successfully
20200815_082201 - Starting Build.

Sending build context to Docker daemon  11.67MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_082201
20200815_082202 - Build completed successfully.


Already up to date.
[master 1dcaba7] Automatic build 20200815_082201
 1 file changed, 64 insertions(+)
20200815_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
0d05320c72ac: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
0d05320c72ac: Layer already exists
20200815_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_082218 - Docker push completed successfully.


20200815_082218 - All completed successfully
20200815_092201 - Starting Build.

Sending build context to Docker daemon  11.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_092201
20200815_092201 - Build completed successfully.


Already up to date.
[master be0916f] Automatic build 20200815_092201
 1 file changed, 64 insertions(+)
20200815_092210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200815_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_092218 - Docker push completed successfully.


20200815_092218 - All completed successfully
20200815_102201 - Starting Build.

Sending build context to Docker daemon  11.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_102201
20200815_102201 - Build completed successfully.


Already up to date.
[master f9f93d0] Automatic build 20200815_102201
 1 file changed, 63 insertions(+)
20200815_102209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200815_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_102218 - Docker push completed successfully.


20200815_102218 - All completed successfully
20200815_112201 - Starting Build.

Sending build context to Docker daemon  12.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_112201
20200815_112202 - Build completed successfully.


Already up to date.
[master a455f55] Automatic build 20200815_112201
 1 file changed, 63 insertions(+)
20200815_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200815_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_112218 - Docker push completed successfully.


20200815_112218 - All completed successfully
20200815_122201 - Starting Build.

Sending build context to Docker daemon  12.26MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_122201
20200815_122202 - Build completed successfully.


Already up to date.
[master 6333f95] Automatic build 20200815_122201
 1 file changed, 61 insertions(+)
20200815_122210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200815_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_122220 - Docker push completed successfully.


20200815_122220 - All completed successfully
20200815_132201 - Starting Build.

Sending build context to Docker daemon  12.41MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_132201
20200815_132201 - Build completed successfully.


Already up to date.
[master 1cd8628] Automatic build 20200815_132201
 1 file changed, 63 insertions(+)
20200815_132211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200815_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_132226 - Docker push completed successfully.


20200815_132226 - All completed successfully
20200815_142201 - Starting Build.

Sending build context to Docker daemon  12.56MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_142201
20200815_142201 - Build completed successfully.


Already up to date.
[master 05efa06] Automatic build 20200815_142201
 1 file changed, 63 insertions(+)
20200815_142211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200815_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_142219 - Docker push completed successfully.


20200815_142219 - All completed successfully
20200815_152201 - Starting Build.

Sending build context to Docker daemon   12.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_152201
20200815_152201 - Build completed successfully.


Already up to date.
[master 9b9c306] Automatic build 20200815_152201
 1 file changed, 63 insertions(+)
20200815_152211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200815_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_152221 - Docker push completed successfully.


20200815_152221 - All completed successfully
20200815_162201 - Starting Build.

Sending build context to Docker daemon  12.85MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_162201
20200815_162201 - Build completed successfully.


Already up to date.
[master 0119640] Automatic build 20200815_162201
 1 file changed, 63 insertions(+)
20200815_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200815_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_162217 - Docker push completed successfully.


20200815_162217 - All completed successfully
20200815_172201 - Starting Build.

Sending build context to Docker daemon     13MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_172201
20200815_172201 - Build completed successfully.


Already up to date.
[master 6105548] Automatic build 20200815_172201
 1 file changed, 63 insertions(+)
20200815_172211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200815_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_172220 - Docker push completed successfully.


20200815_172220 - All completed successfully
20200815_182201 - Starting Build.

Sending build context to Docker daemon  13.15MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_182201
20200815_182201 - Build completed successfully.


Already up to date.
[master 27a7a87] Automatic build 20200815_182201
 1 file changed, 63 insertions(+)
20200815_182211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200815_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_182220 - Docker push completed successfully.


20200815_182220 - All completed successfully
20200815_192201 - Starting Build.

Sending build context to Docker daemon  13.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_192201
20200815_192201 - Build completed successfully.


Already up to date.
[master 1e3c4ff] Automatic build 20200815_192201
 1 file changed, 63 insertions(+)
20200815_192210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200815_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_192221 - Docker push completed successfully.


20200815_192221 - All completed successfully
20200815_202201 - Starting Build.

Sending build context to Docker daemon  13.44MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_202201
20200815_202201 - Build completed successfully.


Already up to date.
[master 6f96924] Automatic build 20200815_202201
 1 file changed, 63 insertions(+)
20200815_202211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200815_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_202220 - Docker push completed successfully.


20200815_202220 - All completed successfully
20200815_212201 - Starting Build.

Sending build context to Docker daemon  13.59MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_212201
20200815_212201 - Build completed successfully.


Already up to date.
[master c78fc66] Automatic build 20200815_212201
 1 file changed, 63 insertions(+)
20200815_212210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200815_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_212222 - Docker push completed successfully.


20200815_212222 - All completed successfully
20200815_222201 - Starting Build.

Sending build context to Docker daemon  13.74MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_222201
20200815_222202 - Build completed successfully.


Already up to date.
[master e864e69] Automatic build 20200815_222201
 1 file changed, 63 insertions(+)
20200815_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200815_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_222221 - Docker push completed successfully.


20200815_222221 - All completed successfully
20200815_232201 - Starting Build.

Sending build context to Docker daemon  13.89MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200815_232201
20200815_232201 - Build completed successfully.


Already up to date.
[master 0e5c796] Automatic build 20200815_232201
 1 file changed, 63 insertions(+)
20200815_232210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200815_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200815_232218 - Docker push completed successfully.


20200815_232218 - All completed successfully
20200816_002201 - Starting Build.

Sending build context to Docker daemon  14.03MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_002201
20200816_002202 - Build completed successfully.


Already up to date.
[master 79f0ddd] Automatic build 20200816_002201
 1 file changed, 63 insertions(+)
20200816_002210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200816_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_002218 - Docker push completed successfully.


20200816_002218 - All completed successfully
20200816_012201 - Starting Build.

Sending build context to Docker daemon  14.18MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_012201
20200816_012202 - Build completed successfully.


Already up to date.
[master 2135209] Automatic build 20200816_012201
 1 file changed, 63 insertions(+)
20200816_012211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200816_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_012222 - Docker push completed successfully.


20200816_012222 - All completed successfully
20200816_022201 - Starting Build.

Sending build context to Docker daemon  14.33MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_022201
20200816_022201 - Build completed successfully.


Already up to date.
[master cd91c8f] Automatic build 20200816_022201
 1 file changed, 63 insertions(+)
20200816_022211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200816_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_022221 - Docker push completed successfully.


20200816_022221 - All completed successfully
20200816_032201 - Starting Build.

Sending build context to Docker daemon  14.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_032201
20200816_032201 - Build completed successfully.


Already up to date.
[master 32a45d2] Automatic build 20200816_032201
 1 file changed, 62 insertions(+)
20200816_032212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200816_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_032221 - Docker push completed successfully.


20200816_032221 - All completed successfully
20200816_042201 - Starting Build.

Sending build context to Docker daemon  14.63MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_042201
20200816_042202 - Build completed successfully.


Already up to date.
[master f46fc03] Automatic build 20200816_042201
 1 file changed, 63 insertions(+)
20200816_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200816_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_042219 - Docker push completed successfully.


20200816_042219 - All completed successfully
20200816_052201 - Starting Build.

Sending build context to Docker daemon  14.78MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_052201
20200816_052202 - Build completed successfully.


Already up to date.
[master 8acf750] Automatic build 20200816_052201
 1 file changed, 63 insertions(+)
20200816_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200816_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_052217 - Docker push completed successfully.


20200816_052217 - All completed successfully
20200816_062201 - Starting Build.

Sending build context to Docker daemon  14.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_062201
20200816_062201 - Build completed successfully.


Already up to date.
[master d1d84de] Automatic build 20200816_062201
 1 file changed, 63 insertions(+)
20200816_062209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200816_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_062217 - Docker push completed successfully.


20200816_062217 - All completed successfully
20200816_072201 - Starting Build.

Sending build context to Docker daemon  15.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_072201
20200816_072202 - Build completed successfully.


Already up to date.
[master 6b98008] Automatic build 20200816_072201
 1 file changed, 63 insertions(+)
20200816_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200816_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_072218 - Docker push completed successfully.


20200816_072218 - All completed successfully
20200816_082201 - Starting Build.

Sending build context to Docker daemon  15.23MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_082201
20200816_082201 - Build completed successfully.


Already up to date.
[master 6fe91f6] Automatic build 20200816_082201
 1 file changed, 62 insertions(+)
20200816_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200816_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_082218 - Docker push completed successfully.


20200816_082218 - All completed successfully
20200816_092201 - Starting Build.

Sending build context to Docker daemon  15.37MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_092201
20200816_092201 - Build completed successfully.


Already up to date.
[master 3f0579c] Automatic build 20200816_092201
 1 file changed, 63 insertions(+)
20200816_092209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200816_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_092217 - Docker push completed successfully.


20200816_092217 - All completed successfully
20200816_102201 - Starting Build.

Sending build context to Docker daemon  15.52MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_102201
20200816_102201 - Build completed successfully.


Already up to date.
[master 28e3037] Automatic build 20200816_102201
 1 file changed, 62 insertions(+)
20200816_102210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200816_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_102220 - Docker push completed successfully.


20200816_102220 - All completed successfully
20200816_112201 - Starting Build.

Sending build context to Docker daemon  15.67MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_112201
20200816_112201 - Build completed successfully.


Already up to date.
[master c65bcf2] Automatic build 20200816_112201
 1 file changed, 63 insertions(+)
20200816_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200816_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_112219 - Docker push completed successfully.


20200816_112219 - All completed successfully
20200816_122201 - Starting Build.

Sending build context to Docker daemon  15.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_122201
20200816_122202 - Build completed successfully.


Already up to date.
[master 4eaabb1] Automatic build 20200816_122201
 1 file changed, 63 insertions(+)
20200816_122211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200816_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_122220 - Docker push completed successfully.


20200816_122220 - All completed successfully
20200816_132201 - Starting Build.

Sending build context to Docker daemon  15.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_132201
20200816_132201 - Build completed successfully.


Already up to date.
[master 36b1e23] Automatic build 20200816_132201
 1 file changed, 62 insertions(+)
20200816_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200816_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_132220 - Docker push completed successfully.


20200816_132220 - All completed successfully
20200816_142201 - Starting Build.

Sending build context to Docker daemon  16.12MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_142201
20200816_142202 - Build completed successfully.


Already up to date.
[master 54fb585] Automatic build 20200816_142201
 1 file changed, 63 insertions(+)
20200816_142212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200816_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_142222 - Docker push completed successfully.


20200816_142222 - All completed successfully
20200816_152201 - Starting Build.

Sending build context to Docker daemon  16.27MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_152201
20200816_152201 - Build completed successfully.


Already up to date.
[master ed168ce] Automatic build 20200816_152201
 1 file changed, 63 insertions(+)
20200816_152211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200816_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_152219 - Docker push completed successfully.


20200816_152219 - All completed successfully
20200816_162201 - Starting Build.

Sending build context to Docker daemon  16.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_162201
20200816_162202 - Build completed successfully.


Already up to date.
[master f4cff76] Automatic build 20200816_162201
 1 file changed, 61 insertions(+)
20200816_162211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200816_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_162222 - Docker push completed successfully.


20200816_162222 - All completed successfully
20200816_172201 - Starting Build.

Sending build context to Docker daemon  16.57MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_172201
20200816_172201 - Build completed successfully.


Already up to date.
[master 26da6ce] Automatic build 20200816_172201
 1 file changed, 63 insertions(+)
20200816_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200816_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_172221 - Docker push completed successfully.


20200816_172221 - All completed successfully
20200816_182201 - Starting Build.

Sending build context to Docker daemon  16.72MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_182201
20200816_182202 - Build completed successfully.


Already up to date.
[master 2332d3d] Automatic build 20200816_182201
 1 file changed, 63 insertions(+)
20200816_182210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200816_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_182219 - Docker push completed successfully.


20200816_182219 - All completed successfully
20200816_192201 - Starting Build.

Sending build context to Docker daemon  16.87MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_192201
20200816_192201 - Build completed successfully.


Already up to date.
[master da23532] Automatic build 20200816_192201
 1 file changed, 63 insertions(+)
20200816_192210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200816_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_192218 - Docker push completed successfully.


20200816_192218 - All completed successfully
20200816_202201 - Starting Build.

Sending build context to Docker daemon  17.02MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_202201
20200816_202202 - Build completed successfully.


Already up to date.
[master 6115c18] Automatic build 20200816_202201
 1 file changed, 63 insertions(+)
20200816_202210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200816_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_202218 - Docker push completed successfully.


20200816_202218 - All completed successfully
20200816_212201 - Starting Build.

Sending build context to Docker daemon  17.17MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_212201
20200816_212202 - Build completed successfully.


Already up to date.
[master 72a8ff9] Automatic build 20200816_212201
 1 file changed, 63 insertions(+)
20200816_212211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200816_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_212219 - Docker push completed successfully.


20200816_212219 - All completed successfully
20200816_222201 - Starting Build.

Sending build context to Docker daemon  17.33MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_222201
20200816_222202 - Build completed successfully.


Already up to date.
[master a16746d] Automatic build 20200816_222201
 1 file changed, 63 insertions(+)
20200816_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200816_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_222218 - Docker push completed successfully.


20200816_222218 - All completed successfully
20200816_232201 - Starting Build.

Sending build context to Docker daemon  17.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200816_232201
20200816_232201 - Build completed successfully.


Already up to date.
[master 0f9662c] Automatic build 20200816_232201
 1 file changed, 63 insertions(+)
20200816_232209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200816_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200816_232217 - Docker push completed successfully.


20200816_232217 - All completed successfully
20200817_002201 - Starting Build.

Sending build context to Docker daemon  17.63MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_002201
20200817_002201 - Build completed successfully.


Already up to date.
[master c68a26c] Automatic build 20200817_002201
 1 file changed, 62 insertions(+)
20200817_002210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200817_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_002218 - Docker push completed successfully.


20200817_002218 - All completed successfully
20200817_012201 - Starting Build.

Sending build context to Docker daemon  17.78MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_012201
20200817_012201 - Build completed successfully.


Already up to date.
[master 5dbfb85] Automatic build 20200817_012201
 1 file changed, 63 insertions(+)
20200817_012210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200817_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_012217 - Docker push completed successfully.


20200817_012218 - All completed successfully
20200817_022201 - Starting Build.

Sending build context to Docker daemon  17.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_022201
20200817_022201 - Build completed successfully.


Already up to date.
[master 1970fd7] Automatic build 20200817_022201
 1 file changed, 61 insertions(+)
20200817_022210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200817_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_022218 - Docker push completed successfully.


20200817_022218 - All completed successfully
20200817_032201 - Starting Build.

Sending build context to Docker daemon  18.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_032201
20200817_032202 - Build completed successfully.


Already up to date.
[master 7b993c9] Automatic build 20200817_032201
 1 file changed, 63 insertions(+)
20200817_032210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200817_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_032218 - Docker push completed successfully.


20200817_032218 - All completed successfully
20200817_042201 - Starting Build.

Sending build context to Docker daemon  18.23MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_042201
20200817_042201 - Build completed successfully.


Already up to date.
[master 303a5aa] Automatic build 20200817_042201
 1 file changed, 63 insertions(+)
20200817_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200817_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_042218 - Docker push completed successfully.


20200817_042218 - All completed successfully
20200817_052201 - Starting Build.

Sending build context to Docker daemon  18.38MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_052201
20200817_052201 - Build completed successfully.


Already up to date.
[master 3af3a45] Automatic build 20200817_052201
 1 file changed, 63 insertions(+)
20200817_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200817_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_052217 - Docker push completed successfully.


20200817_052217 - All completed successfully
20200817_062201 - Starting Build.

Sending build context to Docker daemon  18.53MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_062201
20200817_062201 - Build completed successfully.


Already up to date.
[master 028a2e5] Automatic build 20200817_062201
 1 file changed, 63 insertions(+)
20200817_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200817_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_062218 - Docker push completed successfully.


20200817_062218 - All completed successfully
20200817_072201 - Starting Build.

Sending build context to Docker daemon  18.69MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_072201
20200817_072201 - Build completed successfully.


Already up to date.
[master cd50ae2] Automatic build 20200817_072201
 1 file changed, 62 insertions(+)
20200817_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200817_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_072218 - Docker push completed successfully.


20200817_072218 - All completed successfully
20200817_082201 - Starting Build.

Sending build context to Docker daemon  18.84MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_082201
20200817_082202 - Build completed successfully.


20200817_082202 - git
[master eadc6ed] Automatic build 20200817_082201
 1 file changed, 62 insertions(+)
20200817_082202 - git
20200817_082202 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200817_082202 - Docker push FAILED!!


20200817_092201 - Starting Build.

Sending build context to Docker daemon  18.99MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_092201
20200817_092202 - Build completed successfully.


Already up to date.
[master 5ec2d8f] Automatic build 20200817_092201
 1 file changed, 43 insertions(+)
20200817_092211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200817_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_092221 - Docker push completed successfully.


20200817_092221 - All completed successfully
20200817_102201 - Starting Build.

Sending build context to Docker daemon  19.14MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_102201
20200817_102202 - Build completed successfully.


Already up to date.
[master e623155] Automatic build 20200817_102201
 1 file changed, 63 insertions(+)
20200817_102211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200817_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_102221 - Docker push completed successfully.


20200817_102221 - All completed successfully
20200817_112201 - Starting Build.

Sending build context to Docker daemon  19.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_112201
20200817_112202 - Build completed successfully.


Already up to date.
[master 8082348] Automatic build 20200817_112201
 1 file changed, 63 insertions(+)
20200817_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200817_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_112221 - Docker push completed successfully.


20200817_112221 - All completed successfully
20200817_122201 - Starting Build.

Sending build context to Docker daemon  19.44MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_122201
20200817_122201 - Build completed successfully.


Already up to date.
[master c283b0c] Automatic build 20200817_122201
 1 file changed, 63 insertions(+)
20200817_122210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200817_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_122217 - Docker push completed successfully.


20200817_122217 - All completed successfully
20200817_132201 - Starting Build.

Sending build context to Docker daemon   19.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_132201
20200817_132202 - Build completed successfully.


Already up to date.
[master 5ca8210] Automatic build 20200817_132201
 1 file changed, 63 insertions(+)
20200817_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200817_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_132218 - Docker push completed successfully.


20200817_132218 - All completed successfully
20200817_142201 - Starting Build.

Sending build context to Docker daemon  19.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_142201
20200817_142201 - Build completed successfully.


Already up to date.
[master 35e6073] Automatic build 20200817_142201
 1 file changed, 62 insertions(+)
20200817_142209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200817_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_142216 - Docker push completed successfully.


20200817_142216 - All completed successfully
20200817_152201 - Starting Build.

Sending build context to Docker daemon   19.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_152201
20200817_152201 - Build completed successfully.


Already up to date.
[master e396a20] Automatic build 20200817_152201
 1 file changed, 63 insertions(+)
20200817_152209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200817_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_152216 - Docker push completed successfully.


20200817_152216 - All completed successfully
20200817_162201 - Starting Build.

Sending build context to Docker daemon  20.05MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_162201
20200817_162201 - Build completed successfully.


Already up to date.
[master 3823017] Automatic build 20200817_162201
 1 file changed, 62 insertions(+)
20200817_162215 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200817_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_162223 - Docker push completed successfully.


20200817_162223 - All completed successfully
20200817_172201 - Starting Build.

Sending build context to Docker daemon  20.21MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_172201
20200817_172201 - Build completed successfully.


Already up to date.
[master 3de22b7] Automatic build 20200817_172201
 1 file changed, 63 insertions(+)
20200817_172211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200817_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_172219 - Docker push completed successfully.


20200817_172219 - All completed successfully
20200817_182201 - Starting Build.

Sending build context to Docker daemon  20.36MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_182201
20200817_182201 - Build completed successfully.


Already up to date.
[master d47fd59] Automatic build 20200817_182201
 1 file changed, 63 insertions(+)
20200817_182211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200817_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_182222 - Docker push completed successfully.


20200817_182222 - All completed successfully
20200817_202201 - Starting Build.

Sending build context to Docker daemon  20.51MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_202201
20200817_202202 - Build completed successfully.


Already up to date.
[master 0128cb6] Automatic build 20200817_202201
 1 file changed, 63 insertions(+)
20200817_202211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200817_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_202222 - Docker push completed successfully.


20200817_202222 - All completed successfully
20200817_212201 - Starting Build.

Sending build context to Docker daemon  20.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_212201
20200817_212201 - Build completed successfully.


Already up to date.
[master e5fec64] Automatic build 20200817_212201
 1 file changed, 63 insertions(+)
20200817_212216 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
20200817_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_212228 - Docker push completed successfully.


20200817_212228 - All completed successfully
20200817_222201 - Starting Build.

Sending build context to Docker daemon  20.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_222201
20200817_222201 - Build completed successfully.


Already up to date.
[master 7bd6f89] Automatic build 20200817_222201
 1 file changed, 63 insertions(+)
20200817_222211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200817_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_222218 - Docker push completed successfully.


20200817_222218 - All completed successfully
20200817_232201 - Starting Build.

Sending build context to Docker daemon  20.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200817_232201
20200817_232201 - Build completed successfully.


Already up to date.
[master ca93bc8] Automatic build 20200817_232201
 1 file changed, 63 insertions(+)
20200817_232211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200817_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200817_232220 - Docker push completed successfully.


20200817_232220 - All completed successfully
20200818_002201 - Starting Build.

Sending build context to Docker daemon  21.12MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_002201
20200818_002201 - Build completed successfully.


Already up to date.
[master a644b2f] Automatic build 20200818_002201
 1 file changed, 62 insertions(+)
20200818_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200818_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_002221 - Docker push completed successfully.


20200818_002221 - All completed successfully
20200818_012201 - Starting Build.

Sending build context to Docker daemon  21.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_012201
20200818_012203 - Build completed successfully.


Already up to date.
[master a0d18b3] Automatic build 20200818_012201
 1 file changed, 63 insertions(+)
20200818_012214 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200818_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_012224 - Docker push completed successfully.


20200818_012224 - All completed successfully
20200818_022201 - Starting Build.

Sending build context to Docker daemon  21.43MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_022201
20200818_022202 - Build completed successfully.


Already up to date.
[master db2ee82] Automatic build 20200818_022201
 1 file changed, 63 insertions(+)
20200818_022212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200818_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_022220 - Docker push completed successfully.


20200818_022220 - All completed successfully
20200818_032201 - Starting Build.

Sending build context to Docker daemon  21.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_032201
20200818_032202 - Build completed successfully.


Already up to date.
[master 399c27a] Automatic build 20200818_032201
 1 file changed, 63 insertions(+)
20200818_032210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200818_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_032218 - Docker push completed successfully.


20200818_032218 - All completed successfully
20200818_042201 - Starting Build.

Sending build context to Docker daemon  21.74MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_042201
20200818_042201 - Build completed successfully.


Already up to date.
[master 33e7c9a] Automatic build 20200818_042201
 1 file changed, 63 insertions(+)
20200818_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200818_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_042218 - Docker push completed successfully.


20200818_042218 - All completed successfully
20200818_052201 - Starting Build.

Sending build context to Docker daemon  21.89MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_052201
20200818_052201 - Build completed successfully.


Already up to date.
[master 112ec56] Automatic build 20200818_052201
 1 file changed, 63 insertions(+)
20200818_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200818_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_052218 - Docker push completed successfully.


20200818_052218 - All completed successfully
20200818_062201 - Starting Build.

Sending build context to Docker daemon  22.05MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_062201
20200818_062202 - Build completed successfully.


Already up to date.
[master 1c6d80a] Automatic build 20200818_062201
 1 file changed, 63 insertions(+)
20200818_062212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200818_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_062219 - Docker push completed successfully.


20200818_062219 - All completed successfully
20200818_072201 - Starting Build.

Sending build context to Docker daemon   22.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_072201
20200818_072201 - Build completed successfully.


Already up to date.
[master d5d27a7] Automatic build 20200818_072201
 1 file changed, 63 insertions(+)
20200818_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200818_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_072218 - Docker push completed successfully.


20200818_072218 - All completed successfully
20200818_082201 - Starting Build.

Sending build context to Docker daemon  22.36MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_082201
20200818_082201 - Build completed successfully.


Already up to date.
[master e39ae3a] Automatic build 20200818_082201
 1 file changed, 63 insertions(+)
20200818_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200818_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_082218 - Docker push completed successfully.


20200818_082218 - All completed successfully
20200818_092201 - Starting Build.

Sending build context to Docker daemon  22.51MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_092201
20200818_092202 - Build completed successfully.


Already up to date.
[master 9cc9224] Automatic build 20200818_092201
 1 file changed, 63 insertions(+)
20200818_092211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200818_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_092218 - Docker push completed successfully.


20200818_092218 - All completed successfully
20200818_102201 - Starting Build.

Sending build context to Docker daemon  22.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_102201
20200818_102201 - Build completed successfully.


Already up to date.
[master fc081af] Automatic build 20200818_102201
 1 file changed, 63 insertions(+)
20200818_102210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200818_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_102217 - Docker push completed successfully.


20200818_102217 - All completed successfully
20200818_112201 - Starting Build.

Sending build context to Docker daemon  22.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_112201
20200818_112201 - Build completed successfully.


Already up to date.
[master ee5e9e5] Automatic build 20200818_112201
 1 file changed, 63 insertions(+)
20200818_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200818_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_112218 - Docker push completed successfully.


20200818_112218 - All completed successfully
20200818_122201 - Starting Build.

Sending build context to Docker daemon  22.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_122201
20200818_122202 - Build completed successfully.


Already up to date.
[master 28a9a6a] Automatic build 20200818_122201
 1 file changed, 62 insertions(+)
20200818_122211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200818_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_122219 - Docker push completed successfully.


20200818_122219 - All completed successfully
20200818_132201 - Starting Build.

Sending build context to Docker daemon  23.13MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_132201
20200818_132201 - Build completed successfully.


Already up to date.
[master b44bb7c] Automatic build 20200818_132201
 1 file changed, 63 insertions(+)
20200818_132209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200818_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_132217 - Docker push completed successfully.


20200818_132217 - All completed successfully
20200818_142201 - Starting Build.

Sending build context to Docker daemon  23.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_142201
20200818_142201 - Build completed successfully.


Already up to date.
[master ec1edd1] Automatic build 20200818_142201
 1 file changed, 63 insertions(+)
20200818_142210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200818_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_142218 - Docker push completed successfully.


20200818_142218 - All completed successfully
20200818_152201 - Starting Build.

Sending build context to Docker daemon  23.44MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_152201
20200818_152202 - Build completed successfully.


Already up to date.
[master 741213a] Automatic build 20200818_152201
 1 file changed, 63 insertions(+)
20200818_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200818_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_152218 - Docker push completed successfully.


20200818_152218 - All completed successfully
20200818_162201 - Starting Build.

Sending build context to Docker daemon  23.59MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_162201
20200818_162201 - Build completed successfully.


Already up to date.
[master 950f2ca] Automatic build 20200818_162201
 1 file changed, 63 insertions(+)
20200818_162211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200818_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_162219 - Docker push completed successfully.


20200818_162219 - All completed successfully
20200818_172201 - Starting Build.

Sending build context to Docker daemon  23.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_172201
20200818_172201 - Build completed successfully.


Already up to date.
[master bd8fb47] Automatic build 20200818_172201
 1 file changed, 63 insertions(+)
20200818_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200818_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_172218 - Docker push completed successfully.


20200818_172218 - All completed successfully
20200818_182201 - Starting Build.

Sending build context to Docker daemon   23.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_182201
20200818_182201 - Build completed successfully.


Already up to date.
[master fd4bebd] Automatic build 20200818_182201
 1 file changed, 61 insertions(+)
20200818_182210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200818_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_182218 - Docker push completed successfully.


20200818_182218 - All completed successfully
20200818_192201 - Starting Build.

Sending build context to Docker daemon  24.06MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_192201
20200818_192201 - Build completed successfully.


Already up to date.
[master 71c0879] Automatic build 20200818_192201
 1 file changed, 63 insertions(+)
20200818_192210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200818_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_192218 - Docker push completed successfully.


20200818_192218 - All completed successfully
20200818_202201 - Starting Build.

Sending build context to Docker daemon  24.21MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_202201
20200818_202201 - Build completed successfully.


Already up to date.
[master 9ac2fcf] Automatic build 20200818_202201
 1 file changed, 63 insertions(+)
20200818_202210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200818_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_202218 - Docker push completed successfully.


20200818_202218 - All completed successfully
20200818_212201 - Starting Build.

Sending build context to Docker daemon  24.37MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_212201
20200818_212202 - Build completed successfully.


Already up to date.
[master 1ebd409] Automatic build 20200818_212201
 1 file changed, 63 insertions(+)
20200818_212210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200818_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_212218 - Docker push completed successfully.


20200818_212218 - All completed successfully
20200818_222201 - Starting Build.

Sending build context to Docker daemon  24.52MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_222201
20200818_222202 - Build completed successfully.


Already up to date.
[master f846a67] Automatic build 20200818_222201
 1 file changed, 63 insertions(+)
20200818_222212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200818_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_222220 - Docker push completed successfully.


20200818_222220 - All completed successfully
20200818_232201 - Starting Build.

Sending build context to Docker daemon  24.68MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200818_232201
20200818_232201 - Build completed successfully.


Already up to date.
[master d08e5c9] Automatic build 20200818_232201
 1 file changed, 63 insertions(+)
20200818_232210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200818_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200818_232218 - Docker push completed successfully.


20200818_232218 - All completed successfully
20200819_002201 - Starting Build.

Sending build context to Docker daemon  24.83MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_002201
20200819_002202 - Build completed successfully.


Already up to date.
[master 498b688] Automatic build 20200819_002201
 1 file changed, 63 insertions(+)
20200819_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_002218 - Docker push completed successfully.


20200819_002218 - All completed successfully
20200819_012201 - Starting Build.

Sending build context to Docker daemon  24.99MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_012201
20200819_012201 - Build completed successfully.


Already up to date.
[master f4f42f3] Automatic build 20200819_012201
 1 file changed, 63 insertions(+)
20200819_012211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_012219 - Docker push completed successfully.


20200819_012219 - All completed successfully
20200819_022201 - Starting Build.

Sending build context to Docker daemon  25.15MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_022201
20200819_022201 - Build completed successfully.


Already up to date.
[master eba7ff0] Automatic build 20200819_022201
 1 file changed, 62 insertions(+)
20200819_022210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_022218 - Docker push completed successfully.


20200819_022218 - All completed successfully
20200819_032201 - Starting Build.

Sending build context to Docker daemon   25.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_032201
20200819_032201 - Build completed successfully.


Already up to date.
[master 7945ce5] Automatic build 20200819_032201
 1 file changed, 63 insertions(+)
20200819_032211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_032218 - Docker push completed successfully.


20200819_032218 - All completed successfully
20200819_042201 - Starting Build.

Sending build context to Docker daemon  25.46MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_042201
20200819_042201 - Build completed successfully.


Already up to date.
[master a3bb8c4] Automatic build 20200819_042201
 1 file changed, 63 insertions(+)
20200819_042211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_042219 - Docker push completed successfully.


20200819_042219 - All completed successfully
20200819_052201 - Starting Build.

Sending build context to Docker daemon  25.61MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_052201
20200819_052201 - Build completed successfully.


Already up to date.
[master 42e3541] Automatic build 20200819_052201
 1 file changed, 63 insertions(+)
20200819_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200819_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_052217 - Docker push completed successfully.


20200819_052217 - All completed successfully
20200819_062201 - Starting Build.

Sending build context to Docker daemon  25.77MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_062201
20200819_062201 - Build completed successfully.


Already up to date.
[master 232389e] Automatic build 20200819_062201
 1 file changed, 63 insertions(+)
20200819_062211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200819_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_062219 - Docker push completed successfully.


20200819_062219 - All completed successfully
20200819_072201 - Starting Build.

Sending build context to Docker daemon  25.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_072201
20200819_072202 - Build completed successfully.


Already up to date.
[master dff509b] Automatic build 20200819_072201
 1 file changed, 62 insertions(+)
20200819_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200819_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_072217 - Docker push completed successfully.


20200819_072217 - All completed successfully
20200819_082201 - Starting Build.

Sending build context to Docker daemon  26.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_082201
20200819_082202 - Build completed successfully.


Already up to date.
[master be578d2] Automatic build 20200819_082201
 1 file changed, 63 insertions(+)
20200819_082211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_082219 - Docker push completed successfully.


20200819_082219 - All completed successfully
20200819_092201 - Starting Build.

Sending build context to Docker daemon  26.24MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_092201
20200819_092201 - Build completed successfully.


Already up to date.
[master b1f80e4] Automatic build 20200819_092201
 1 file changed, 63 insertions(+)
20200819_092210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_092217 - Docker push completed successfully.


20200819_092217 - All completed successfully
20200819_102201 - Starting Build.

Sending build context to Docker daemon   26.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_102201
20200819_102201 - Build completed successfully.


Already up to date.
[master a524c2b] Automatic build 20200819_102201
 1 file changed, 63 insertions(+)
20200819_102209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200819_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_102217 - Docker push completed successfully.


20200819_102217 - All completed successfully
20200819_112201 - Starting Build.

Sending build context to Docker daemon  26.55MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_112201
20200819_112202 - Build completed successfully.


Already up to date.
[master 37d86f9] Automatic build 20200819_112201
 1 file changed, 63 insertions(+)
20200819_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200819_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_112217 - Docker push completed successfully.


20200819_112217 - All completed successfully
20200819_122201 - Starting Build.

Sending build context to Docker daemon  26.71MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_122201
20200819_122201 - Build completed successfully.


Already up to date.
[master 51bd10b] Automatic build 20200819_122201
 1 file changed, 63 insertions(+)
20200819_122210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200819_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_122218 - Docker push completed successfully.


20200819_122218 - All completed successfully
20200819_132201 - Starting Build.

Sending build context to Docker daemon  26.87MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_132201
20200819_132201 - Build completed successfully.


Already up to date.
[master 5f1a3c5] Automatic build 20200819_132201
 1 file changed, 62 insertions(+)
20200819_132211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200819_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_132219 - Docker push completed successfully.


20200819_132219 - All completed successfully
20200819_142201 - Starting Build.

Sending build context to Docker daemon  27.02MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_142201
20200819_142202 - Build completed successfully.


Already up to date.
[master 25e7b7a] Automatic build 20200819_142201
 1 file changed, 63 insertions(+)
20200819_142210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200819_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_142218 - Docker push completed successfully.


20200819_142218 - All completed successfully
20200819_152201 - Starting Build.

Sending build context to Docker daemon  27.18MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_152201
20200819_152201 - Build completed successfully.


Already up to date.
[master 40e938e] Automatic build 20200819_152201
 1 file changed, 63 insertions(+)
20200819_152209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200819_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_152221 - Docker push completed successfully.


20200819_152221 - All completed successfully
20200819_162201 - Starting Build.

Sending build context to Docker daemon  27.34MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_162201
20200819_162201 - Build completed successfully.


Already up to date.
[master ddab9b8] Automatic build 20200819_162201
 1 file changed, 63 insertions(+)
20200819_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200819_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_162218 - Docker push completed successfully.


20200819_162218 - All completed successfully
20200819_172201 - Starting Build.

Sending build context to Docker daemon  27.49MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_172201
20200819_172202 - Build completed successfully.


Already up to date.
[master 633d86e] Automatic build 20200819_172201
 1 file changed, 63 insertions(+)
20200819_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200819_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_172217 - Docker push completed successfully.


20200819_172217 - All completed successfully
20200819_182201 - Starting Build.

Sending build context to Docker daemon  27.65MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_182201
20200819_182202 - Build completed successfully.


Already up to date.
[master 09c00ea] Automatic build 20200819_182201
 1 file changed, 63 insertions(+)
20200819_182210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200819_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_182218 - Docker push completed successfully.


20200819_182218 - All completed successfully
20200819_192201 - Starting Build.

Sending build context to Docker daemon  27.81MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_192201
20200819_192202 - Build completed successfully.


Already up to date.
[master 12f9888] Automatic build 20200819_192201
 1 file changed, 63 insertions(+)
20200819_192212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200819_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_192219 - Docker push completed successfully.


20200819_192219 - All completed successfully
20200819_202201 - Starting Build.

Sending build context to Docker daemon  27.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_202201
20200819_202201 - Build completed successfully.


Already up to date.
[master 7f3ca97] Automatic build 20200819_202201
 1 file changed, 62 insertions(+)
20200819_202209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200819_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_202217 - Docker push completed successfully.


20200819_202217 - All completed successfully
20200819_212201 - Starting Build.

Sending build context to Docker daemon  28.12MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_212201
20200819_212201 - Build completed successfully.


Already up to date.
[master 4e303eb] Automatic build 20200819_212201
 1 file changed, 63 insertions(+)
20200819_212211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200819_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_212219 - Docker push completed successfully.


20200819_212219 - All completed successfully
20200819_222201 - Starting Build.

Sending build context to Docker daemon  28.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_222201
20200819_222202 - Build completed successfully.


Already up to date.
[master c1e386c] Automatic build 20200819_222201
 1 file changed, 62 insertions(+)
20200819_222211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200819_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_222218 - Docker push completed successfully.


20200819_222218 - All completed successfully
20200819_232201 - Starting Build.

Sending build context to Docker daemon  28.44MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200819_232201
20200819_232201 - Build completed successfully.


Already up to date.
[master 10bb800] Automatic build 20200819_232201
 1 file changed, 63 insertions(+)
20200819_232212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200819_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200819_232220 - Docker push completed successfully.


20200819_232220 - All completed successfully
20200820_002201 - Starting Build.

Sending build context to Docker daemon   28.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_002201
20200820_002202 - Build completed successfully.


Already up to date.
[master b0b26a3] Automatic build 20200820_002201
 1 file changed, 62 insertions(+)
20200820_002214 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200820_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_002221 - Docker push completed successfully.


20200820_002221 - All completed successfully
20200820_012201 - Starting Build.

Sending build context to Docker daemon  28.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_012201
20200820_012201 - Build completed successfully.


Already up to date.
[master 9ad24a8] Automatic build 20200820_012201
 1 file changed, 63 insertions(+)
20200820_012211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200820_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_012218 - Docker push completed successfully.


20200820_012218 - All completed successfully
20200820_022201 - Starting Build.

Sending build context to Docker daemon  28.91MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_022201
20200820_022201 - Build completed successfully.


Already up to date.
[master 475d6fa] Automatic build 20200820_022201
 1 file changed, 63 insertions(+)
20200820_022212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200820_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_022220 - Docker push completed successfully.


20200820_022220 - All completed successfully
20200820_032201 - Starting Build.

Sending build context to Docker daemon  29.07MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_032201
20200820_032201 - Build completed successfully.


Already up to date.
[master 32c8f0d] Automatic build 20200820_032201
 1 file changed, 63 insertions(+)
20200820_032210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
929ffb29f4ca: Layer already exists
20200820_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_032220 - Docker push completed successfully.


20200820_032220 - All completed successfully
20200820_042201 - Starting Build.

Sending build context to Docker daemon  29.23MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_042201
20200820_042201 - Build completed successfully.


Already up to date.
[master fe46fe2] Automatic build 20200820_042201
 1 file changed, 62 insertions(+)
20200820_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200820_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_042218 - Docker push completed successfully.


20200820_042218 - All completed successfully
20200820_052201 - Starting Build.

Sending build context to Docker daemon  29.39MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_052201
20200820_052202 - Build completed successfully.


Already up to date.
[master a787d9e] Automatic build 20200820_052201
 1 file changed, 63 insertions(+)
20200820_052212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200820_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_052220 - Docker push completed successfully.


20200820_052220 - All completed successfully
20200820_062201 - Starting Build.

Sending build context to Docker daemon  29.55MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_062201
20200820_062202 - Build completed successfully.


Already up to date.
[master 3f71772] Automatic build 20200820_062201
 1 file changed, 63 insertions(+)
20200820_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200820_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_062218 - Docker push completed successfully.


20200820_062218 - All completed successfully
20200820_072201 - Starting Build.

Sending build context to Docker daemon  29.71MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_072201
20200820_072201 - Build completed successfully.


Already up to date.
[master 9b5a40e] Automatic build 20200820_072201
 1 file changed, 63 insertions(+)
20200820_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200820_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_072218 - Docker push completed successfully.


20200820_072218 - All completed successfully
20200820_082201 - Starting Build.

Sending build context to Docker daemon  29.86MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_082201
20200820_082201 - Build completed successfully.


Already up to date.
[master 81b5052] Automatic build 20200820_082201
 1 file changed, 63 insertions(+)
20200820_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200820_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_082218 - Docker push completed successfully.


20200820_082218 - All completed successfully
20200820_092201 - Starting Build.

Sending build context to Docker daemon  30.02MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_092201
20200820_092201 - Build completed successfully.


Already up to date.
[master b78be46] Automatic build 20200820_092201
 1 file changed, 63 insertions(+)
20200820_092212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200820_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_092221 - Docker push completed successfully.


20200820_092221 - All completed successfully
20200820_102201 - Starting Build.

Sending build context to Docker daemon  30.18MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_102201
20200820_102201 - Build completed successfully.


Already up to date.
[master cf9b299] Automatic build 20200820_102201
 1 file changed, 62 insertions(+)
20200820_102210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200820_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_102218 - Docker push completed successfully.


20200820_102218 - All completed successfully
20200820_112201 - Starting Build.

Sending build context to Docker daemon  30.34MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_112201
20200820_112202 - Build completed successfully.


Already up to date.
[master bc6cdd0] Automatic build 20200820_112201
 1 file changed, 63 insertions(+)
20200820_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200820_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_112218 - Docker push completed successfully.


20200820_112218 - All completed successfully
20200820_122201 - Starting Build.

Sending build context to Docker daemon   30.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_122201
20200820_122201 - Build completed successfully.


Already up to date.
[master ceb193f] Automatic build 20200820_122201
 1 file changed, 63 insertions(+)
20200820_122212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200820_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_122220 - Docker push completed successfully.


20200820_122220 - All completed successfully
20200820_132201 - Starting Build.

Sending build context to Docker daemon  30.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_132201
20200820_132201 - Build completed successfully.


Already up to date.
[master 188ad32] Automatic build 20200820_132201
 1 file changed, 62 insertions(+)
20200820_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200820_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_132218 - Docker push completed successfully.


20200820_132218 - All completed successfully
20200820_142201 - Starting Build.

Sending build context to Docker daemon  30.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_142201
20200820_142201 - Build completed successfully.


Already up to date.
[master a325700] Automatic build 20200820_142201
 1 file changed, 63 insertions(+)
20200820_142209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200820_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_142216 - Docker push completed successfully.


20200820_142216 - All completed successfully
20200820_152201 - Starting Build.

Sending build context to Docker daemon  30.98MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_152201
20200820_152202 - Build completed successfully.


Already up to date.
[master 47b19fa] Automatic build 20200820_152201
 1 file changed, 63 insertions(+)
20200820_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200820_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_152217 - Docker push completed successfully.


20200820_152217 - All completed successfully
20200820_162201 - Starting Build.

Sending build context to Docker daemon  31.14MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_162201
20200820_162201 - Build completed successfully.


Already up to date.
[master 2a95291] Automatic build 20200820_162201
 1 file changed, 62 insertions(+)
20200820_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200820_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_162218 - Docker push completed successfully.


20200820_162218 - All completed successfully
20200820_172201 - Starting Build.

Sending build context to Docker daemon   31.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_172201
20200820_172201 - Build completed successfully.


Already up to date.
[master 2573333] Automatic build 20200820_172201
 1 file changed, 63 insertions(+)
20200820_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200820_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_172218 - Docker push completed successfully.


20200820_172218 - All completed successfully
20200820_182201 - Starting Build.

Sending build context to Docker daemon  31.46MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_182201
20200820_182202 - Build completed successfully.


Already up to date.
[master e79e877] Automatic build 20200820_182201
 1 file changed, 63 insertions(+)
20200820_182212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200820_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_182219 - Docker push completed successfully.


20200820_182219 - All completed successfully
20200820_192201 - Starting Build.

Sending build context to Docker daemon  31.61MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_192201
20200820_192201 - Build completed successfully.


Already up to date.
[master e736726] Automatic build 20200820_192201
 1 file changed, 63 insertions(+)
20200820_192211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200820_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_192218 - Docker push completed successfully.


20200820_192218 - All completed successfully
20200820_202201 - Starting Build.

Sending build context to Docker daemon  31.78MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_202201
20200820_202201 - Build completed successfully.


Already up to date.
[master a8840ab] Automatic build 20200820_202201
 1 file changed, 63 insertions(+)
20200820_202214 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200820_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_202224 - Docker push completed successfully.


20200820_202224 - All completed successfully
20200820_212201 - Starting Build.

Sending build context to Docker daemon  31.94MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_212201
20200820_212201 - Build completed successfully.


Already up to date.
[master 6775ab9] Automatic build 20200820_212201
 1 file changed, 63 insertions(+)
20200820_212212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200820_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_212223 - Docker push completed successfully.


20200820_212223 - All completed successfully
20200820_222201 - Starting Build.

Sending build context to Docker daemon   32.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_222201
20200820_222201 - Build completed successfully.


Already up to date.
[master 7a2f26f] Automatic build 20200820_222201
 1 file changed, 63 insertions(+)
20200820_222213 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200820_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_222221 - Docker push completed successfully.


20200820_222221 - All completed successfully
20200820_232201 - Starting Build.

Sending build context to Docker daemon  32.26MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200820_232201
20200820_232202 - Build completed successfully.


Already up to date.
[master 4ec86f1] Automatic build 20200820_232201
 1 file changed, 63 insertions(+)
20200820_232212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200820_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200820_232220 - Docker push completed successfully.


20200820_232220 - All completed successfully
20200821_002201 - Starting Build.

Sending build context to Docker daemon  32.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_002201
20200821_002201 - Build completed successfully.


Already up to date.
[master 91c0f8a] Automatic build 20200821_002201
 1 file changed, 63 insertions(+)
20200821_002214 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200821_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_002221 - Docker push completed successfully.


20200821_002221 - All completed successfully
20200821_012201 - Starting Build.

Sending build context to Docker daemon  32.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_012201
20200821_012202 - Build completed successfully.


Already up to date.
[master 5648805] Automatic build 20200821_012201
 1 file changed, 63 insertions(+)
20200821_012214 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200821_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_012221 - Docker push completed successfully.


20200821_012221 - All completed successfully
20200821_022201 - Starting Build.

Sending build context to Docker daemon  32.74MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_022201
20200821_022202 - Build completed successfully.


Already up to date.
[master 57a1289] Automatic build 20200821_022201
 1 file changed, 63 insertions(+)
20200821_022211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200821_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_022219 - Docker push completed successfully.


20200821_022219 - All completed successfully
20200821_092201 - Starting Build.

Sending build context to Docker daemon   32.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_092201
20200821_092201 - Build completed successfully.


Already up to date.
[master 9b71b00] Automatic build 20200821_092201
 1 file changed, 62 insertions(+)
20200821_092211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200821_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_092220 - Docker push completed successfully.


20200821_092220 - All completed successfully
20200821_102201 - Starting Build.

Sending build context to Docker daemon  33.06MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_102201
20200821_102201 - Build completed successfully.


Already up to date.
[master fb0a7df] Automatic build 20200821_102201
 1 file changed, 63 insertions(+)
20200821_102211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200821_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_102222 - Docker push completed successfully.


20200821_102222 - All completed successfully
20200821_112201 - Starting Build.

Sending build context to Docker daemon  33.22MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_112201
20200821_112201 - Build completed successfully.


20200821_112201 - git
[master 10a1366] Automatic build 20200821_112201
 1 file changed, 63 insertions(+)
20200821_112201 - git
20200821_112201 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200821_112201 - Docker push FAILED!!


20200821_122201 - Starting Build.

Sending build context to Docker daemon  33.38MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_122201
20200821_122201 - Build completed successfully.


20200821_122412 - git
[master c35f0b7] Automatic build 20200821_122201
 1 file changed, 43 insertions(+)
20200821_122623 - git
20200821_122623 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200821_122623 - Docker push FAILED!!


20200821_132201 - Starting Build.

Sending build context to Docker daemon  33.54MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_132201
20200821_132201 - Build completed successfully.


Already up to date.
[master 1149a14] Automatic build 20200821_132201
 1 file changed, 43 insertions(+)
20200821_132211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200821_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_132219 - Docker push completed successfully.


20200821_132219 - All completed successfully
20200821_142201 - Starting Build.

Sending build context to Docker daemon   33.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_142201
20200821_142202 - Build completed successfully.


Already up to date.
[master 42c38ca] Automatic build 20200821_142201
 1 file changed, 63 insertions(+)
20200821_142211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200821_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_142220 - Docker push completed successfully.


20200821_142220 - All completed successfully
20200821_152201 - Starting Build.

Sending build context to Docker daemon  33.86MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_152201
20200821_152201 - Build completed successfully.


Already up to date.
[master b167056] Automatic build 20200821_152201
 1 file changed, 63 insertions(+)
20200821_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200821_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_152220 - Docker push completed successfully.


20200821_152220 - All completed successfully
20200821_162201 - Starting Build.

Sending build context to Docker daemon  34.03MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_162201
20200821_162202 - Build completed successfully.


Already up to date.
[master 877e2d7] Automatic build 20200821_162201
 1 file changed, 63 insertions(+)
20200821_162257 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200821_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_162319 - Docker push completed successfully.


20200821_162319 - All completed successfully
20200821_172202 - Starting Build.

Sending build context to Docker daemon  34.19MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_172202
20200821_172202 - Build completed successfully.


20200821_172205 - git
[master b0b6d0f] Automatic build 20200821_172202
 1 file changed, 63 insertions(+)
20200821_172207 - git
20200821_172207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200821_172202: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_172216 - Docker push completed successfully.


20200821_172216 - All completed successfully
20200821_182201 - Starting Build.

Sending build context to Docker daemon  34.35MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_182201
20200821_182201 - Build completed successfully.


20200821_182201 - git
[master 8211647] Automatic build 20200821_182201
 1 file changed, 64 insertions(+)
20200821_182202 - git
20200821_182202 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200821_182202 - Docker push FAILED!!


20200821_192201 - Starting Build.

Sending build context to Docker daemon  34.51MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_192201
20200821_192202 - Build completed successfully.


20200821_192204 - git
[master 1d8753c] Automatic build 20200821_192201
 1 file changed, 43 insertions(+)
20200821_192207 - git
20200821_192207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200821_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_192214 - Docker push completed successfully.


20200821_192214 - All completed successfully
20200821_202201 - Starting Build.

Sending build context to Docker daemon  34.67MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_202201
20200821_202202 - Build completed successfully.


20200821_202204 - git
[master a42a358] Automatic build 20200821_202201
 1 file changed, 64 insertions(+)
20200821_202207 - git
20200821_202207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200821_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_202216 - Docker push completed successfully.


20200821_202216 - All completed successfully
20200821_212201 - Starting Build.

Sending build context to Docker daemon  34.83MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_212201
20200821_212202 - Build completed successfully.


20200821_212205 - git
[master 91d071c] Automatic build 20200821_212201
 1 file changed, 63 insertions(+)
20200821_212207 - git
20200821_212207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200821_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_212217 - Docker push completed successfully.


20200821_212217 - All completed successfully
20200821_222201 - Starting Build.

Sending build context to Docker daemon     35MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_222201
20200821_222202 - Build completed successfully.


20200821_222204 - git
[master fadc0ae] Automatic build 20200821_222201
 1 file changed, 64 insertions(+)
20200821_222207 - git
20200821_222207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200821_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_222215 - Docker push completed successfully.


20200821_222215 - All completed successfully
20200821_232201 - Starting Build.

Sending build context to Docker daemon  35.16MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200821_232201
20200821_232202 - Build completed successfully.


20200821_232204 - git
[master 27a24b2] Automatic build 20200821_232201
 1 file changed, 64 insertions(+)
20200821_232207 - git
20200821_232207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200821_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200821_232215 - Docker push completed successfully.


20200821_232215 - All completed successfully
20200822_002201 - Starting Build.

Sending build context to Docker daemon  35.32MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_002201
20200822_002202 - Build completed successfully.


20200822_002204 - git
[master cc43bdd] Automatic build 20200822_002201
 1 file changed, 64 insertions(+)
20200822_002207 - git
20200822_002207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200822_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_002214 - Docker push completed successfully.


20200822_002214 - All completed successfully
20200822_012201 - Starting Build.

Sending build context to Docker daemon  35.49MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_012201
20200822_012203 - Build completed successfully.


20200822_012205 - git
[master ce0f128] Automatic build 20200822_012201
 1 file changed, 63 insertions(+)
20200822_012208 - git
20200822_012208 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200822_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_012216 - Docker push completed successfully.


20200822_012216 - All completed successfully
20200822_022201 - Starting Build.

Sending build context to Docker daemon  35.65MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_022201
20200822_022203 - Build completed successfully.


20200822_022205 - git
[master 72dbc8a] Automatic build 20200822_022201
 1 file changed, 64 insertions(+)
20200822_022207 - git
20200822_022207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200822_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_022215 - Docker push completed successfully.


20200822_022215 - All completed successfully
20200822_032201 - Starting Build.

Sending build context to Docker daemon  35.81MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_032201
20200822_032202 - Build completed successfully.


20200822_032204 - git
[master 330ea55] Automatic build 20200822_032201
 1 file changed, 63 insertions(+)
20200822_032206 - git
20200822_032206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200822_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_032214 - Docker push completed successfully.


20200822_032214 - All completed successfully
20200822_042201 - Starting Build.

Sending build context to Docker daemon  35.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_042201
20200822_042201 - Build completed successfully.


20200822_042204 - git
[master 9cc6c65] Automatic build 20200822_042201
 1 file changed, 64 insertions(+)
20200822_042206 - git
20200822_042206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200822_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_042213 - Docker push completed successfully.


20200822_042213 - All completed successfully
20200822_052201 - Starting Build.

Sending build context to Docker daemon  36.14MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_052201
20200822_052201 - Build completed successfully.


20200822_052203 - git
[master 16653a9] Automatic build 20200822_052201
 1 file changed, 64 insertions(+)
20200822_052206 - git
20200822_052206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200822_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_052213 - Docker push completed successfully.


20200822_052213 - All completed successfully
20200822_062201 - Starting Build.

Sending build context to Docker daemon   36.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_062201
20200822_062201 - Build completed successfully.


20200822_062204 - git
[master dc8802b] Automatic build 20200822_062201
 1 file changed, 64 insertions(+)
20200822_062206 - git
20200822_062206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200822_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_062214 - Docker push completed successfully.


20200822_062214 - All completed successfully
20200822_072201 - Starting Build.

Sending build context to Docker daemon  36.46MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_072201
20200822_072201 - Build completed successfully.


20200822_072204 - git
[master 0119cc9] Automatic build 20200822_072201
 1 file changed, 62 insertions(+)
20200822_072206 - git
20200822_072206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200822_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_072214 - Docker push completed successfully.


20200822_072214 - All completed successfully
20200822_082201 - Starting Build.

Sending build context to Docker daemon  36.63MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_082201
20200822_082201 - Build completed successfully.


20200822_082204 - git
[master e460670] Automatic build 20200822_082201
 1 file changed, 64 insertions(+)
20200822_082206 - git
20200822_082206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200822_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_082216 - Docker push completed successfully.


20200822_082216 - All completed successfully
20200822_092201 - Starting Build.

Sending build context to Docker daemon  36.79MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_092201
20200822_092201 - Build completed successfully.


20200822_092204 - git
[master 427cbaf] Automatic build 20200822_092201
 1 file changed, 64 insertions(+)
20200822_092207 - git
20200822_092207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200822_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_092218 - Docker push completed successfully.


20200822_092218 - All completed successfully
20200822_102201 - Starting Build.

Sending build context to Docker daemon  36.96MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_102201
20200822_102201 - Build completed successfully.


20200822_102204 - git
[master c134359] Automatic build 20200822_102201
 1 file changed, 64 insertions(+)
20200822_102207 - git
20200822_102207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200822_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_102215 - Docker push completed successfully.


20200822_102215 - All completed successfully
20200822_112201 - Starting Build.

Sending build context to Docker daemon  37.12MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_112201
20200822_112201 - Build completed successfully.


20200822_112204 - git
[master 6c99e59] Automatic build 20200822_112201
 1 file changed, 63 insertions(+)
20200822_112207 - git
20200822_112207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200822_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_112217 - Docker push completed successfully.


20200822_112217 - All completed successfully
20200822_122201 - Starting Build.

Sending build context to Docker daemon  37.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_122201
20200822_122201 - Build completed successfully.


20200822_122204 - git
[master adc421b] Automatic build 20200822_122201
 1 file changed, 64 insertions(+)
20200822_122207 - git
20200822_122207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200822_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_122216 - Docker push completed successfully.


20200822_122216 - All completed successfully
20200822_132202 - Starting Build.

Sending build context to Docker daemon  37.45MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_132202
20200822_132202 - Build completed successfully.


20200822_132205 - git
[master d0f7b32] Automatic build 20200822_132202
 1 file changed, 64 insertions(+)
20200822_132209 - git
20200822_132209 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200822_132202: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_132244 - Docker push completed successfully.


20200822_132244 - All completed successfully
20200822_142201 - Starting Build.

Sending build context to Docker daemon  37.61MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_142201
20200822_142201 - Build completed successfully.


20200822_142204 - git
[master ab89221] Automatic build 20200822_142201
 1 file changed, 64 insertions(+)
20200822_142207 - git
20200822_142207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200822_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_142215 - Docker push completed successfully.


20200822_142215 - All completed successfully
20200822_152201 - Starting Build.

Sending build context to Docker daemon  37.78MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_152201
20200822_152201 - Build completed successfully.


20200822_152204 - git
[master 72a6c1c] Automatic build 20200822_152201
 1 file changed, 64 insertions(+)
20200822_152207 - git
20200822_152207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
0d05320c72ac: Layer already exists
20200822_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_152216 - Docker push completed successfully.


20200822_152216 - All completed successfully
20200822_162201 - Starting Build.

Sending build context to Docker daemon  37.94MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_162201
20200822_162201 - Build completed successfully.


20200822_162203 - git
[master 6a19361] Automatic build 20200822_162201
 1 file changed, 64 insertions(+)
20200822_162206 - git
20200822_162206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200822_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_162215 - Docker push completed successfully.


20200822_162215 - All completed successfully
20200822_172201 - Starting Build.

Sending build context to Docker daemon  38.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_172201
20200822_172201 - Build completed successfully.


20200822_172203 - git
[master 267561c] Automatic build 20200822_172201
 1 file changed, 64 insertions(+)
20200822_172206 - git
20200822_172206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200822_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_172214 - Docker push completed successfully.


20200822_172214 - All completed successfully
20200822_182201 - Starting Build.

Sending build context to Docker daemon  38.27MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_182201
20200822_182202 - Build completed successfully.


20200822_182204 - git
[master 8131546] Automatic build 20200822_182201
 1 file changed, 64 insertions(+)
20200822_182207 - git
20200822_182207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200822_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_182215 - Docker push completed successfully.


20200822_182215 - All completed successfully
20200822_192201 - Starting Build.

Sending build context to Docker daemon  38.43MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_192201
20200822_192201 - Build completed successfully.


20200822_192204 - git
[master 3920c8a] Automatic build 20200822_192201
 1 file changed, 64 insertions(+)
20200822_192207 - git
20200822_192207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200822_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_192216 - Docker push completed successfully.


20200822_192216 - All completed successfully
20200822_202201 - Starting Build.

Sending build context to Docker daemon   38.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_202201
20200822_202202 - Build completed successfully.


20200822_202205 - git
[master 42248fc] Automatic build 20200822_202201
 1 file changed, 64 insertions(+)
20200822_202207 - git
20200822_202207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200822_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_202218 - Docker push completed successfully.


20200822_202218 - All completed successfully
20200822_212201 - Starting Build.

Sending build context to Docker daemon  38.76MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_212201
20200822_212201 - Build completed successfully.


20200822_212204 - git
[master 8be4b0e] Automatic build 20200822_212201
 1 file changed, 63 insertions(+)
20200822_212207 - git
20200822_212207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200822_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_212221 - Docker push completed successfully.


20200822_212221 - All completed successfully
20200822_222201 - Starting Build.

Sending build context to Docker daemon  38.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_222201
20200822_222202 - Build completed successfully.


20200822_222204 - git
[master 068e127] Automatic build 20200822_222201
 1 file changed, 63 insertions(+)
20200822_222206 - git
20200822_222206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200822_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_222214 - Docker push completed successfully.


20200822_222214 - All completed successfully
20200822_232201 - Starting Build.

Sending build context to Docker daemon  39.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200822_232201
20200822_232202 - Build completed successfully.


20200822_232205 - git
[master 837bad6] Automatic build 20200822_232201
 1 file changed, 63 insertions(+)
20200822_232208 - git
20200822_232208 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200822_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200822_232217 - Docker push completed successfully.


20200822_232217 - All completed successfully
20200823_002201 - Starting Build.

Sending build context to Docker daemon  39.26MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_002201
20200823_002201 - Build completed successfully.


20200823_002205 - git
[master 6822fb1] Automatic build 20200823_002201
 1 file changed, 64 insertions(+)
20200823_002207 - git
20200823_002207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200823_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_002215 - Docker push completed successfully.


20200823_002215 - All completed successfully
20200823_012201 - Starting Build.

Sending build context to Docker daemon  39.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_012201
20200823_012202 - Build completed successfully.


20200823_012204 - git
[master 85011b4] Automatic build 20200823_012201
 1 file changed, 64 insertions(+)
20200823_012206 - git
20200823_012206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200823_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_012214 - Docker push completed successfully.


20200823_012214 - All completed successfully
20200823_022201 - Starting Build.

Sending build context to Docker daemon  39.59MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_022201
20200823_022202 - Build completed successfully.


20200823_022205 - git
[master c060d79] Automatic build 20200823_022201
 1 file changed, 64 insertions(+)
20200823_022207 - git
20200823_022207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200823_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_022215 - Docker push completed successfully.


20200823_022215 - All completed successfully
20200823_032201 - Starting Build.

Sending build context to Docker daemon  39.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_032201
20200823_032202 - Build completed successfully.


20200823_032204 - git
[master 823dfe9] Automatic build 20200823_032201
 1 file changed, 63 insertions(+)
20200823_032206 - git
20200823_032206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200823_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_032215 - Docker push completed successfully.


20200823_032215 - All completed successfully
20200823_042201 - Starting Build.

Sending build context to Docker daemon  39.92MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_042201
20200823_042201 - Build completed successfully.


20200823_042204 - git
[master 2a9b98e] Automatic build 20200823_042201
 1 file changed, 64 insertions(+)
20200823_042206 - git
20200823_042206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200823_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_042213 - Docker push completed successfully.


20200823_042213 - All completed successfully
20200823_052201 - Starting Build.

Sending build context to Docker daemon  40.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_052201
20200823_052202 - Build completed successfully.


20200823_052204 - git
[master bd2c622] Automatic build 20200823_052201
 1 file changed, 63 insertions(+)
20200823_052206 - git
20200823_052206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200823_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_052214 - Docker push completed successfully.


20200823_052214 - All completed successfully
20200823_062201 - Starting Build.

Sending build context to Docker daemon  40.25MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_062201
20200823_062201 - Build completed successfully.


20200823_062203 - git
[master 198ef47] Automatic build 20200823_062201
 1 file changed, 63 insertions(+)
20200823_062206 - git
20200823_062206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200823_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_062213 - Docker push completed successfully.


20200823_062213 - All completed successfully
20200823_072201 - Starting Build.

Sending build context to Docker daemon  40.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_072201
20200823_072201 - Build completed successfully.


20200823_072204 - git
[master 52b2af1] Automatic build 20200823_072201
 1 file changed, 64 insertions(+)
20200823_072206 - git
20200823_072206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200823_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_072214 - Docker push completed successfully.


20200823_072214 - All completed successfully
20200823_082201 - Starting Build.

Sending build context to Docker daemon  40.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_082201
20200823_082201 - Build completed successfully.


20200823_082203 - git
[master d201abf] Automatic build 20200823_082201
 1 file changed, 64 insertions(+)
20200823_082206 - git
20200823_082206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200823_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_082213 - Docker push completed successfully.


20200823_082213 - All completed successfully
20200823_092201 - Starting Build.

Sending build context to Docker daemon  40.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_092201
20200823_092202 - Build completed successfully.


20200823_092204 - git
[master ddd8cea] Automatic build 20200823_092201
 1 file changed, 64 insertions(+)
20200823_092207 - git
20200823_092207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200823_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_092215 - Docker push completed successfully.


20200823_092215 - All completed successfully
20200823_102201 - Starting Build.

Sending build context to Docker daemon  40.91MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_102201
20200823_102202 - Build completed successfully.


20200823_102205 - git
[master 241e2fe] Automatic build 20200823_102201
 1 file changed, 64 insertions(+)
20200823_102207 - git
20200823_102207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
20200823_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_102219 - Docker push completed successfully.


20200823_102219 - All completed successfully
20200823_112201 - Starting Build.

Sending build context to Docker daemon  41.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_112201
20200823_112202 - Build completed successfully.


20200823_112205 - git
[master 2e32ad9] Automatic build 20200823_112201
 1 file changed, 64 insertions(+)
20200823_112209 - git
20200823_112209 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200823_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_112225 - Docker push completed successfully.


20200823_112225 - All completed successfully
20200823_122201 - Starting Build.

Sending build context to Docker daemon  41.25MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_122201
20200823_122202 - Build completed successfully.


20200823_122204 - git
[master 8bf257a] Automatic build 20200823_122201
 1 file changed, 63 insertions(+)
20200823_122207 - git
20200823_122207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200823_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_122221 - Docker push completed successfully.


20200823_122221 - All completed successfully
20200823_132201 - Starting Build.

Sending build context to Docker daemon  41.41MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_132201
20200823_132202 - Build completed successfully.


20200823_132204 - git
[master 9e1e5bc] Automatic build 20200823_132201
 1 file changed, 64 insertions(+)
20200823_132207 - git
20200823_132207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200823_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_132216 - Docker push completed successfully.


20200823_132216 - All completed successfully
20200823_142201 - Starting Build.

Sending build context to Docker daemon  41.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_142201
20200823_142201 - Build completed successfully.


20200823_142204 - git
[master dcf917a] Automatic build 20200823_142201
 1 file changed, 64 insertions(+)
20200823_142206 - git
20200823_142206 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200823_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_142215 - Docker push completed successfully.


20200823_142215 - All completed successfully
20200823_152201 - Starting Build.

Sending build context to Docker daemon  41.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_152201
20200823_152201 - Build completed successfully.


20200823_152204 - git
[master c71acbf] Automatic build 20200823_152201
 1 file changed, 64 insertions(+)
20200823_152207 - git
20200823_152207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200823_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_152222 - Docker push completed successfully.


20200823_152222 - All completed successfully
20200823_162201 - Starting Build.

Sending build context to Docker daemon  41.91MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_162201
20200823_162202 - Build completed successfully.


20200823_162205 - git
[master 21596b7] Automatic build 20200823_162201
 1 file changed, 64 insertions(+)
20200823_162207 - git
20200823_162207 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200823_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_162218 - Docker push completed successfully.


20200823_162218 - All completed successfully
20200823_172201 - Starting Build.

Sending build context to Docker daemon  42.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_172201
20200823_172201 - Build completed successfully.


20200823_172201 - git
[master 61a6e36] Automatic build 20200823_172201
 1 file changed, 64 insertions(+)
20200823_172201 - git
20200823_172201 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200823_172202 - Docker push FAILED!!


20200823_192201 - Starting Build.

Sending build context to Docker daemon  42.25MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_192201
20200823_192201 - Build completed successfully.


Already up to date.
[master 03fe5c5] Automatic build 20200823_192201
 1 file changed, 43 insertions(+)
20200823_192214 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200823_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_192222 - Docker push completed successfully.


20200823_192222 - All completed successfully
20200823_202201 - Starting Build.

Sending build context to Docker daemon  42.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_202201
20200823_202201 - Build completed successfully.


Already up to date.
[master dab5eee] Automatic build 20200823_202201
 1 file changed, 63 insertions(+)
20200823_202210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200823_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_202217 - Docker push completed successfully.


20200823_202217 - All completed successfully
20200823_212201 - Starting Build.

Sending build context to Docker daemon  42.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_212201
20200823_212201 - Build completed successfully.


Already up to date.
[master f87c61f] Automatic build 20200823_212201
 1 file changed, 63 insertions(+)
20200823_212211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200823_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_212219 - Docker push completed successfully.


20200823_212219 - All completed successfully
20200823_222201 - Starting Build.

Sending build context to Docker daemon  42.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_222201
20200823_222201 - Build completed successfully.


Already up to date.
[master 5b58e54] Automatic build 20200823_222201
 1 file changed, 63 insertions(+)
20200823_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200823_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_222217 - Docker push completed successfully.


20200823_222217 - All completed successfully
20200823_232201 - Starting Build.

Sending build context to Docker daemon  42.92MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200823_232201
20200823_232201 - Build completed successfully.


Already up to date.
[master 58d8a0c] Automatic build 20200823_232201
 1 file changed, 63 insertions(+)
20200823_232210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200823_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200823_232218 - Docker push completed successfully.


20200823_232218 - All completed successfully
20200824_002201 - Starting Build.

Sending build context to Docker daemon  43.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_002201
20200824_002201 - Build completed successfully.


Already up to date.
[master 68b0a51] Automatic build 20200824_002201
 1 file changed, 63 insertions(+)
20200824_002210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200824_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_002218 - Docker push completed successfully.


20200824_002218 - All completed successfully
20200824_012201 - Starting Build.

Sending build context to Docker daemon  43.26MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_012201
20200824_012202 - Build completed successfully.


Already up to date.
[master 282b52b] Automatic build 20200824_012201
 1 file changed, 63 insertions(+)
20200824_012210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200824_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_012217 - Docker push completed successfully.


20200824_012217 - All completed successfully
20200824_022201 - Starting Build.

Sending build context to Docker daemon  43.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_022201
20200824_022202 - Build completed successfully.


Already up to date.
[master 3a48ff2] Automatic build 20200824_022201
 1 file changed, 63 insertions(+)
20200824_022212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200824_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_022219 - Docker push completed successfully.


20200824_022219 - All completed successfully
20200824_032201 - Starting Build.

Sending build context to Docker daemon  43.59MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_032201
20200824_032202 - Build completed successfully.


Already up to date.
[master 817f772] Automatic build 20200824_032201
 1 file changed, 63 insertions(+)
20200824_032211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200824_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_032218 - Docker push completed successfully.


20200824_032218 - All completed successfully
20200824_042201 - Starting Build.

Sending build context to Docker daemon  43.76MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_042201
20200824_042202 - Build completed successfully.


Already up to date.
[master cbce60e] Automatic build 20200824_042201
 1 file changed, 62 insertions(+)
20200824_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200824_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_042217 - Docker push completed successfully.


20200824_042217 - All completed successfully
20200824_052201 - Starting Build.

Sending build context to Docker daemon  43.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_052201
20200824_052201 - Build completed successfully.


Already up to date.
[master ffc8721] Automatic build 20200824_052201
 1 file changed, 63 insertions(+)
20200824_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200824_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_052217 - Docker push completed successfully.


20200824_052217 - All completed successfully
20200824_062201 - Starting Build.

Sending build context to Docker daemon   44.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_062201
20200824_062201 - Build completed successfully.


Already up to date.
[master cee5da1] Automatic build 20200824_062201
 1 file changed, 63 insertions(+)
20200824_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200824_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_062217 - Docker push completed successfully.


20200824_062217 - All completed successfully
20200824_072201 - Starting Build.

Sending build context to Docker daemon  44.27MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_072201
20200824_072201 - Build completed successfully.


Already up to date.
[master 382282d] Automatic build 20200824_072201
 1 file changed, 63 insertions(+)
20200824_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200824_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_072217 - Docker push completed successfully.


20200824_072217 - All completed successfully
20200824_082201 - Starting Build.

Sending build context to Docker daemon  44.44MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_082201
20200824_082201 - Build completed successfully.


Already up to date.
[master 817db4d] Automatic build 20200824_082201
 1 file changed, 62 insertions(+)
20200824_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200824_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_082217 - Docker push completed successfully.


20200824_082217 - All completed successfully
20200824_092201 - Starting Build.

Sending build context to Docker daemon   44.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_092201
20200824_092202 - Build completed successfully.


Already up to date.
[master 39e37b4] Automatic build 20200824_092201
 1 file changed, 63 insertions(+)
20200824_092210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200824_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_092218 - Docker push completed successfully.


20200824_092218 - All completed successfully
20200824_102201 - Starting Build.

Sending build context to Docker daemon  44.77MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_102201
20200824_102201 - Build completed successfully.


Already up to date.
[master 6596d00] Automatic build 20200824_102201
 1 file changed, 63 insertions(+)
20200824_102209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200824_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_102218 - Docker push completed successfully.


20200824_102218 - All completed successfully
20200824_112201 - Starting Build.

Sending build context to Docker daemon  44.94MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_112201
20200824_112201 - Build completed successfully.


Already up to date.
[master 0f467cc] Automatic build 20200824_112201
 1 file changed, 63 insertions(+)
20200824_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200824_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_112218 - Docker push completed successfully.


20200824_112218 - All completed successfully
20200824_122201 - Starting Build.

Sending build context to Docker daemon  45.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_122201
20200824_122202 - Build completed successfully.


Already up to date.
[master 62c7286] Automatic build 20200824_122201
 1 file changed, 63 insertions(+)
20200824_122209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200824_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_122217 - Docker push completed successfully.


20200824_122217 - All completed successfully
20200824_132201 - Starting Build.

Sending build context to Docker daemon  45.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_132201
20200824_132202 - Build completed successfully.


Already up to date.
[master 6b7fd3b] Automatic build 20200824_132201
 1 file changed, 63 insertions(+)
20200824_132211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200824_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_132218 - Docker push completed successfully.


20200824_132218 - All completed successfully
20200824_142201 - Starting Build.

Sending build context to Docker daemon  45.45MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_142201
20200824_142202 - Build completed successfully.


Already up to date.
[master 45b2705] Automatic build 20200824_142201
 1 file changed, 63 insertions(+)
20200824_142210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200824_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_142218 - Docker push completed successfully.


20200824_142218 - All completed successfully
20200824_152201 - Starting Build.

Sending build context to Docker daemon  45.62MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_152201
20200824_152201 - Build completed successfully.


Already up to date.
[master 1093617] Automatic build 20200824_152201
 1 file changed, 63 insertions(+)
20200824_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200824_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_152217 - Docker push completed successfully.


20200824_152217 - All completed successfully
20200824_162201 - Starting Build.

Sending build context to Docker daemon  45.79MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_162201
20200824_162202 - Build completed successfully.


Already up to date.
[master 2c32982] Automatic build 20200824_162201
 1 file changed, 63 insertions(+)
20200824_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200824_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_162217 - Docker push completed successfully.


20200824_162217 - All completed successfully
20200824_172201 - Starting Build.

Sending build context to Docker daemon  45.96MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_172201
20200824_172202 - Build completed successfully.


Already up to date.
[master 37374a5] Automatic build 20200824_172201
 1 file changed, 63 insertions(+)
20200824_172211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200824_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_172219 - Docker push completed successfully.


20200824_172219 - All completed successfully
20200824_182201 - Starting Build.

Sending build context to Docker daemon  46.13MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_182201
20200824_182201 - Build completed successfully.


Already up to date.
[master 86b78f0] Automatic build 20200824_182201
 1 file changed, 62 insertions(+)
20200824_182211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200824_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_182219 - Docker push completed successfully.


20200824_182219 - All completed successfully
20200824_192201 - Starting Build.

Sending build context to Docker daemon   46.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_192201
20200824_192201 - Build completed successfully.


Already up to date.
[master 0fcbbeb] Automatic build 20200824_192201
 1 file changed, 63 insertions(+)
20200824_192211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200824_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_192218 - Docker push completed successfully.


20200824_192218 - All completed successfully
20200824_202201 - Starting Build.

Sending build context to Docker daemon  46.47MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_202201
20200824_202201 - Build completed successfully.


Already up to date.
[master f750f60] Automatic build 20200824_202201
 1 file changed, 63 insertions(+)
20200824_202211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200824_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_202219 - Docker push completed successfully.


20200824_202219 - All completed successfully
20200824_212201 - Starting Build.

Sending build context to Docker daemon  46.64MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_212201
20200824_212201 - Build completed successfully.


Already up to date.
[master 1836b96] Automatic build 20200824_212201
 1 file changed, 63 insertions(+)
20200824_212211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200824_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_212219 - Docker push completed successfully.


20200824_212219 - All completed successfully
20200824_222201 - Starting Build.

Sending build context to Docker daemon  46.81MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_222201
20200824_222202 - Build completed successfully.


Already up to date.
[master 028e45c] Automatic build 20200824_222201
 1 file changed, 63 insertions(+)
20200824_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200824_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_222218 - Docker push completed successfully.


20200824_222218 - All completed successfully
20200824_232201 - Starting Build.

Sending build context to Docker daemon  46.98MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200824_232201
20200824_232201 - Build completed successfully.


Already up to date.
[master 9aa6ff7] Automatic build 20200824_232201
 1 file changed, 63 insertions(+)
20200824_232210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200824_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200824_232218 - Docker push completed successfully.


20200824_232218 - All completed successfully
20200825_002201 - Starting Build.

Sending build context to Docker daemon  47.15MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_002201
20200825_002202 - Build completed successfully.


Already up to date.
[master a12902f] Automatic build 20200825_002201
 1 file changed, 63 insertions(+)
20200825_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200825_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_002218 - Docker push completed successfully.


20200825_002218 - All completed successfully
20200825_012201 - Starting Build.

Sending build context to Docker daemon  47.32MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_012201
20200825_012201 - Build completed successfully.


Already up to date.
[master 1f7388f] Automatic build 20200825_012201
 1 file changed, 63 insertions(+)
20200825_012211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200825_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_012218 - Docker push completed successfully.


20200825_012218 - All completed successfully
20200825_022201 - Starting Build.

Sending build context to Docker daemon  47.49MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_022201
20200825_022201 - Build completed successfully.


Already up to date.
[master a954e3e] Automatic build 20200825_022201
 1 file changed, 63 insertions(+)
20200825_022211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200825_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_022218 - Docker push completed successfully.


20200825_022218 - All completed successfully
20200825_032201 - Starting Build.

Sending build context to Docker daemon  47.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_032201
20200825_032201 - Build completed successfully.


Already up to date.
[master 418a8b9] Automatic build 20200825_032201
 1 file changed, 63 insertions(+)
20200825_032210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200825_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_032218 - Docker push completed successfully.


20200825_032218 - All completed successfully
20200825_042201 - Starting Build.

Sending build context to Docker daemon  47.83MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_042201
20200825_042201 - Build completed successfully.


Already up to date.
[master 32e82dd] Automatic build 20200825_042201
 1 file changed, 63 insertions(+)
20200825_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200825_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_042218 - Docker push completed successfully.


20200825_042218 - All completed successfully
20200825_052201 - Starting Build.

Sending build context to Docker daemon     48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_052201
20200825_052201 - Build completed successfully.


Already up to date.
[master f5bec76] Automatic build 20200825_052201
 1 file changed, 63 insertions(+)
20200825_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200825_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_052218 - Docker push completed successfully.


20200825_052218 - All completed successfully
20200825_062201 - Starting Build.

Sending build context to Docker daemon  48.18MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_062201
20200825_062201 - Build completed successfully.


Already up to date.
[master 91b8fbb] Automatic build 20200825_062201
 1 file changed, 63 insertions(+)
20200825_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200825_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_062217 - Docker push completed successfully.


20200825_062217 - All completed successfully
20200825_072201 - Starting Build.

Sending build context to Docker daemon  48.35MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_072201
20200825_072201 - Build completed successfully.


Already up to date.
[master 8eb7ab3] Automatic build 20200825_072201
 1 file changed, 63 insertions(+)
20200825_072210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200825_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_072219 - Docker push completed successfully.


20200825_072219 - All completed successfully
20200825_082201 - Starting Build.

Sending build context to Docker daemon  48.52MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_082201
20200825_082201 - Build completed successfully.


Already up to date.
[master 58fdf13] Automatic build 20200825_082201
 1 file changed, 63 insertions(+)
20200825_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200825_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_082219 - Docker push completed successfully.


20200825_082219 - All completed successfully
20200825_092201 - Starting Build.

Sending build context to Docker daemon  48.69MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_092201
20200825_092202 - Build completed successfully.


Already up to date.
[master f6d9821] Automatic build 20200825_092201
 1 file changed, 63 insertions(+)
20200825_092210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200825_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_092219 - Docker push completed successfully.


20200825_092219 - All completed successfully
20200825_102201 - Starting Build.

Sending build context to Docker daemon  48.86MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_102201
20200825_102201 - Build completed successfully.


Already up to date.
[master fd77b09] Automatic build 20200825_102201
 1 file changed, 63 insertions(+)
20200825_102211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200825_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_102219 - Docker push completed successfully.


20200825_102219 - All completed successfully
20200825_112201 - Starting Build.

Sending build context to Docker daemon  49.03MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_112201
20200825_112201 - Build completed successfully.


Already up to date.
[master 37d02b8] Automatic build 20200825_112201
 1 file changed, 63 insertions(+)
20200825_112210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200825_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_112218 - Docker push completed successfully.


20200825_112218 - All completed successfully
20200825_122201 - Starting Build.

Sending build context to Docker daemon   49.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_122201
20200825_122201 - Build completed successfully.


Already up to date.
[master 5be59c2] Automatic build 20200825_122201
 1 file changed, 62 insertions(+)
20200825_122209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200825_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_122217 - Docker push completed successfully.


20200825_122217 - All completed successfully
20200825_132201 - Starting Build.

Sending build context to Docker daemon  49.38MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_132201
20200825_132202 - Build completed successfully.


Already up to date.
[master 87688b0] Automatic build 20200825_132201
 1 file changed, 63 insertions(+)
20200825_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200825_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_132218 - Docker push completed successfully.


20200825_132218 - All completed successfully
20200825_142201 - Starting Build.

Sending build context to Docker daemon  49.55MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_142201
20200825_142202 - Build completed successfully.


Already up to date.
[master b9985ef] Automatic build 20200825_142201
 1 file changed, 63 insertions(+)
20200825_142211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200825_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_142219 - Docker push completed successfully.


20200825_142219 - All completed successfully
20200825_152201 - Starting Build.

Sending build context to Docker daemon  49.72MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_152201
20200825_152202 - Build completed successfully.


Already up to date.
[master feebe71] Automatic build 20200825_152201
 1 file changed, 63 insertions(+)
20200825_152211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200825_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_152218 - Docker push completed successfully.


20200825_152218 - All completed successfully
20200825_162201 - Starting Build.

Sending build context to Docker daemon  49.89MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_162201
20200825_162202 - Build completed successfully.


Already up to date.
[master 1d44c4e] Automatic build 20200825_162201
 1 file changed, 61 insertions(+)
20200825_162210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200825_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_162218 - Docker push completed successfully.


20200825_162218 - All completed successfully
20200825_172201 - Starting Build.

Sending build context to Docker daemon  50.06MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_172201
20200825_172201 - Build completed successfully.


Already up to date.
[master c311946] Automatic build 20200825_172201
 1 file changed, 62 insertions(+)
20200825_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200825_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_172217 - Docker push completed successfully.


20200825_172217 - All completed successfully
20200825_182201 - Starting Build.

Sending build context to Docker daemon  50.24MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_182201
20200825_182201 - Build completed successfully.


Already up to date.
[master 647bb95] Automatic build 20200825_182201
 1 file changed, 63 insertions(+)
20200825_182212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200825_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_182221 - Docker push completed successfully.


20200825_182221 - All completed successfully
20200825_192201 - Starting Build.

Sending build context to Docker daemon  50.41MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_192201
20200825_192201 - Build completed successfully.


Already up to date.
[master 816911f] Automatic build 20200825_192201
 1 file changed, 62 insertions(+)
20200825_192211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200825_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_192220 - Docker push completed successfully.


20200825_192220 - All completed successfully
20200825_202201 - Starting Build.

Sending build context to Docker daemon  50.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_202201
20200825_202202 - Build completed successfully.


Already up to date.
[master 4dc2dfd] Automatic build 20200825_202201
 1 file changed, 63 insertions(+)
20200825_202211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200825_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_202220 - Docker push completed successfully.


20200825_202220 - All completed successfully
20200825_212201 - Starting Build.

Sending build context to Docker daemon  50.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_212201
20200825_212202 - Build completed successfully.


Already up to date.
[master 4ea0152] Automatic build 20200825_212201
 1 file changed, 63 insertions(+)
20200825_212210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200825_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_212218 - Docker push completed successfully.


20200825_212218 - All completed successfully
20200825_222201 - Starting Build.

Sending build context to Docker daemon  50.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_222201
20200825_222201 - Build completed successfully.


Already up to date.
[master dc3ca71] Automatic build 20200825_222201
 1 file changed, 63 insertions(+)
20200825_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200825_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_222217 - Docker push completed successfully.


20200825_222217 - All completed successfully
20200825_232201 - Starting Build.

Sending build context to Docker daemon   51.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200825_232201
20200825_232201 - Build completed successfully.


Already up to date.
[master 73cc6a9] Automatic build 20200825_232201
 1 file changed, 63 insertions(+)
20200825_232211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200825_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200825_232218 - Docker push completed successfully.


20200825_232218 - All completed successfully
20200826_002201 - Starting Build.

Sending build context to Docker daemon  51.27MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_002201
20200826_002202 - Build completed successfully.


Already up to date.
[master 5758035] Automatic build 20200826_002201
 1 file changed, 63 insertions(+)
20200826_002211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200826_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_002219 - Docker push completed successfully.


20200826_002219 - All completed successfully
20200826_012201 - Starting Build.

Sending build context to Docker daemon  51.45MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_012201
20200826_012202 - Build completed successfully.


Already up to date.
[master cfa5829] Automatic build 20200826_012201
 1 file changed, 63 insertions(+)
20200826_012212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200826_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_012221 - Docker push completed successfully.


20200826_012221 - All completed successfully
20200826_022201 - Starting Build.

Sending build context to Docker daemon  51.62MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_022201
20200826_022201 - Build completed successfully.


Already up to date.
[master 5a302d0] Automatic build 20200826_022201
 1 file changed, 63 insertions(+)
20200826_022211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200826_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_022218 - Docker push completed successfully.


20200826_022218 - All completed successfully
20200826_032201 - Starting Build.

Sending build context to Docker daemon  51.79MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_032201
20200826_032201 - Build completed successfully.


Already up to date.
[master 3e9b6e9] Automatic build 20200826_032201
 1 file changed, 62 insertions(+)
20200826_032210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200826_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_032218 - Docker push completed successfully.


20200826_032218 - All completed successfully
20200826_042201 - Starting Build.

Sending build context to Docker daemon  51.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_042201
20200826_042201 - Build completed successfully.


Already up to date.
[master 8d2adeb] Automatic build 20200826_042201
 1 file changed, 62 insertions(+)
20200826_042210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200826_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_042218 - Docker push completed successfully.


20200826_042218 - All completed successfully
20200826_052201 - Starting Build.

Sending build context to Docker daemon  52.14MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_052201
20200826_052202 - Build completed successfully.


Already up to date.
[master e9deb10] Automatic build 20200826_052201
 1 file changed, 63 insertions(+)
20200826_052210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200826_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_052218 - Docker push completed successfully.


20200826_052218 - All completed successfully
20200826_062201 - Starting Build.

Sending build context to Docker daemon  52.31MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_062201
20200826_062201 - Build completed successfully.


Already up to date.
[master bbddffa] Automatic build 20200826_062201
 1 file changed, 63 insertions(+)
20200826_062807 - git
20200826_062807 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200826_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_062816 - Docker push completed successfully.


20200826_062816 - All completed successfully
20200826_072201 - Starting Build.

Sending build context to Docker daemon  52.49MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_072201
20200826_072201 - Build completed successfully.


Already up to date.
[master 7165962] Automatic build 20200826_072201
 1 file changed, 64 insertions(+)
20200826_072211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200826_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_072218 - Docker push completed successfully.


20200826_072218 - All completed successfully
20200826_082201 - Starting Build.

Sending build context to Docker daemon  52.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_082201
20200826_082201 - Build completed successfully.


Already up to date.
[master a45cd26] Automatic build 20200826_082201
 1 file changed, 63 insertions(+)
20200826_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200826_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_082218 - Docker push completed successfully.


20200826_082218 - All completed successfully
20200826_092201 - Starting Build.

Sending build context to Docker daemon  52.84MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_092201
20200826_092202 - Build completed successfully.


Already up to date.
[master de69f25] Automatic build 20200826_092201
 1 file changed, 63 insertions(+)
20200826_092210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200826_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_092218 - Docker push completed successfully.


20200826_092218 - All completed successfully
20200826_102201 - Starting Build.

Sending build context to Docker daemon  53.01MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_102201
20200826_102201 - Build completed successfully.


Already up to date.
[master 1a96ea5] Automatic build 20200826_102201
 1 file changed, 63 insertions(+)
20200826_102211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200826_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_102218 - Docker push completed successfully.


20200826_102218 - All completed successfully
20200826_112201 - Starting Build.

Sending build context to Docker daemon  53.19MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_112201
20200826_112202 - Build completed successfully.


Already up to date.
[master 1c6874c] Automatic build 20200826_112201
 1 file changed, 62 insertions(+)
20200826_112211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200826_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_112219 - Docker push completed successfully.


20200826_112219 - All completed successfully
20200826_122201 - Starting Build.

Sending build context to Docker daemon  53.36MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_122201
20200826_122202 - Build completed successfully.


Already up to date.
[master 59d9469] Automatic build 20200826_122201
 1 file changed, 63 insertions(+)
20200826_122211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200826_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_122218 - Docker push completed successfully.


20200826_122218 - All completed successfully
20200826_132201 - Starting Build.

Sending build context to Docker daemon  53.53MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_132201
20200826_132202 - Build completed successfully.


Already up to date.
[master 132a202] Automatic build 20200826_132201
 1 file changed, 63 insertions(+)
20200826_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200826_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_132217 - Docker push completed successfully.


20200826_132217 - All completed successfully
20200826_142201 - Starting Build.

Sending build context to Docker daemon  53.71MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_142201
20200826_142201 - Build completed successfully.


Already up to date.
[master 65c346d] Automatic build 20200826_142201
 1 file changed, 63 insertions(+)
20200826_142209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200826_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_142217 - Docker push completed successfully.


20200826_142217 - All completed successfully
20200826_152201 - Starting Build.

Sending build context to Docker daemon  53.88MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_152201
20200826_152201 - Build completed successfully.


Already up to date.
[master 00246ef] Automatic build 20200826_152201
 1 file changed, 62 insertions(+)
20200826_152209 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200826_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_152217 - Docker push completed successfully.


20200826_152217 - All completed successfully
20200826_162201 - Starting Build.

Sending build context to Docker daemon  54.06MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_162201
20200826_162201 - Build completed successfully.


Already up to date.
[master 282d68b] Automatic build 20200826_162201
 1 file changed, 63 insertions(+)
20200826_162211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200826_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_162219 - Docker push completed successfully.


20200826_162219 - All completed successfully
20200826_172201 - Starting Build.

Sending build context to Docker daemon  54.23MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_172201
20200826_172201 - Build completed successfully.


Already up to date.
[master c8613d6] Automatic build 20200826_172201
 1 file changed, 63 insertions(+)
20200826_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200826_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_172217 - Docker push completed successfully.


20200826_172217 - All completed successfully
20200826_182201 - Starting Build.

Sending build context to Docker daemon  54.41MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_182201
20200826_182202 - Build completed successfully.


Already up to date.
[master afd405e] Automatic build 20200826_182201
 1 file changed, 62 insertions(+)
20200826_182210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200826_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_182223 - Docker push completed successfully.


20200826_182223 - All completed successfully
20200826_192201 - Starting Build.

Sending build context to Docker daemon  54.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_192201
20200826_192201 - Build completed successfully.


Already up to date.
[master 14b12ab] Automatic build 20200826_192201
 1 file changed, 62 insertions(+)
20200826_192212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200826_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_192223 - Docker push completed successfully.


20200826_192223 - All completed successfully
20200826_202201 - Starting Build.

Sending build context to Docker daemon  54.76MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_202201
20200826_202201 - Build completed successfully.


Already up to date.
[master 4b0c959] Automatic build 20200826_202201
 1 file changed, 62 insertions(+)
20200826_202210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200826_202201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_202218 - Docker push completed successfully.


20200826_202218 - All completed successfully
20200826_212201 - Starting Build.

Sending build context to Docker daemon  54.94MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_212201
20200826_212202 - Build completed successfully.


Already up to date.
[master dc14cd6] Automatic build 20200826_212201
 1 file changed, 63 insertions(+)
20200826_212212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200826_212201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_212221 - Docker push completed successfully.


20200826_212221 - All completed successfully
20200826_222201 - Starting Build.

Sending build context to Docker daemon  55.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_222201
20200826_222202 - Build completed successfully.


Already up to date.
[master 12a33af] Automatic build 20200826_222201
 1 file changed, 63 insertions(+)
20200826_222210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200826_222201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_222219 - Docker push completed successfully.


20200826_222219 - All completed successfully
20200826_232201 - Starting Build.

Sending build context to Docker daemon  55.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200826_232201
20200826_232202 - Build completed successfully.


Already up to date.
[master 59726d1] Automatic build 20200826_232201
 1 file changed, 62 insertions(+)
20200826_232211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200826_232201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200826_232220 - Docker push completed successfully.


20200826_232220 - All completed successfully
20200827_002201 - Starting Build.

Sending build context to Docker daemon  55.46MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_002201
20200827_002203 - Build completed successfully.


Already up to date.
[master c381491] Automatic build 20200827_002201
 1 file changed, 63 insertions(+)
20200827_002212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200827_002201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_002220 - Docker push completed successfully.


20200827_002220 - All completed successfully
20200827_012201 - Starting Build.

Sending build context to Docker daemon  55.64MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_012201
20200827_012201 - Build completed successfully.


Already up to date.
[master 1c78c89] Automatic build 20200827_012201
 1 file changed, 63 insertions(+)
20200827_012211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200827_012201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_012218 - Docker push completed successfully.


20200827_012218 - All completed successfully
20200827_022201 - Starting Build.

Sending build context to Docker daemon  55.81MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_022201
20200827_022201 - Build completed successfully.


Already up to date.
[master f772411] Automatic build 20200827_022201
 1 file changed, 63 insertions(+)
20200827_022210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200827_022201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_022219 - Docker push completed successfully.


20200827_022219 - All completed successfully
20200827_032201 - Starting Build.

Sending build context to Docker daemon  55.99MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_032201
20200827_032201 - Build completed successfully.


Already up to date.
[master 8384149] Automatic build 20200827_032201
 1 file changed, 62 insertions(+)
20200827_032212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200827_032201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_032219 - Docker push completed successfully.


20200827_032219 - All completed successfully
20200827_042201 - Starting Build.

Sending build context to Docker daemon  56.17MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_042201
20200827_042202 - Build completed successfully.


Already up to date.
[master f63f093] Automatic build 20200827_042201
 1 file changed, 62 insertions(+)
20200827_042211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200827_042201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_042218 - Docker push completed successfully.


20200827_042218 - All completed successfully
20200827_052201 - Starting Build.

Sending build context to Docker daemon  56.34MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_052201
20200827_052202 - Build completed successfully.


Already up to date.
[master 5ef10f1] Automatic build 20200827_052201
 1 file changed, 63 insertions(+)
20200827_052211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200827_052201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_052220 - Docker push completed successfully.


20200827_052220 - All completed successfully
20200827_062201 - Starting Build.

Sending build context to Docker daemon  56.52MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_062201
20200827_062201 - Build completed successfully.


Already up to date.
[master 2d78dc8] Automatic build 20200827_062201
 1 file changed, 62 insertions(+)
20200827_062210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200827_062201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_062218 - Docker push completed successfully.


20200827_062218 - All completed successfully
20200827_072201 - Starting Build.

Sending build context to Docker daemon  56.69MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_072201
20200827_072201 - Build completed successfully.


Already up to date.
[master 2ec6a4f] Automatic build 20200827_072201
 1 file changed, 63 insertions(+)
20200827_072212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200827_072201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_072220 - Docker push completed successfully.


20200827_072220 - All completed successfully
20200827_082201 - Starting Build.

Sending build context to Docker daemon  56.87MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_082201
20200827_082201 - Build completed successfully.


Already up to date.
[master a99db60] Automatic build 20200827_082201
 1 file changed, 62 insertions(+)
20200827_082210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200827_082201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_082218 - Docker push completed successfully.


20200827_082218 - All completed successfully
20200827_092201 - Starting Build.

Sending build context to Docker daemon  57.05MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_092201
20200827_092202 - Build completed successfully.


Already up to date.
[master 23921ce] Automatic build 20200827_092201
 1 file changed, 62 insertions(+)
20200827_092210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200827_092201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_092219 - Docker push completed successfully.


20200827_092219 - All completed successfully
20200827_102201 - Starting Build.

Sending build context to Docker daemon  57.22MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_102201
20200827_102202 - Build completed successfully.


Already up to date.
[master 392e083] Automatic build 20200827_102201
 1 file changed, 62 insertions(+)
20200827_102211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200827_102201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_102219 - Docker push completed successfully.


20200827_102219 - All completed successfully
20200827_112201 - Starting Build.

Sending build context to Docker daemon   57.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_112201
20200827_112201 - Build completed successfully.


Already up to date.
[master 9ee717f] Automatic build 20200827_112201
 1 file changed, 63 insertions(+)
20200827_112214 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200827_112201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_112222 - Docker push completed successfully.


20200827_112222 - All completed successfully
20200827_122201 - Starting Build.

Sending build context to Docker daemon  57.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_122201
20200827_122201 - Build completed successfully.


Already up to date.
[master f3a393f] Automatic build 20200827_122201
 1 file changed, 63 insertions(+)
20200827_122211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200827_122201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_122221 - Docker push completed successfully.


20200827_122221 - All completed successfully
20200827_132201 - Starting Build.

Sending build context to Docker daemon  57.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_132201
20200827_132202 - Build completed successfully.


Already up to date.
[master 2ee677c] Automatic build 20200827_132201
 1 file changed, 63 insertions(+)
20200827_132210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200827_132201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_132218 - Docker push completed successfully.


20200827_132218 - All completed successfully
20200827_142201 - Starting Build.

Sending build context to Docker daemon  57.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_142201
20200827_142202 - Build completed successfully.


Already up to date.
[master 29d52c2] Automatic build 20200827_142201
 1 file changed, 63 insertions(+)
20200827_142212 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200827_142201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_142227 - Docker push completed successfully.


20200827_142227 - All completed successfully
20200827_152201 - Starting Build.

Sending build context to Docker daemon  58.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_152201
20200827_152202 - Build completed successfully.


Already up to date.
[master fb43395] Automatic build 20200827_152201
 1 file changed, 63 insertions(+)
20200827_152210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200827_152201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_152219 - Docker push completed successfully.


20200827_152219 - All completed successfully
20200827_162201 - Starting Build.

Sending build context to Docker daemon  58.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_162201
20200827_162201 - Build completed successfully.


Already up to date.
[master 6923808] Automatic build 20200827_162201
 1 file changed, 62 insertions(+)
20200827_162211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200827_162201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_162220 - Docker push completed successfully.


20200827_162220 - All completed successfully
20200827_172201 - Starting Build.

Sending build context to Docker daemon  58.46MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_172201
20200827_172201 - Build completed successfully.


Already up to date.
[master 442c8bf] Automatic build 20200827_172201
 1 file changed, 63 insertions(+)
20200827_172210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200827_172201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_172218 - Docker push completed successfully.


20200827_172218 - All completed successfully
20200827_182201 - Starting Build.

Sending build context to Docker daemon  58.64MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_182201
20200827_182201 - Build completed successfully.


Already up to date.
[master 787a546] Automatic build 20200827_182201
 1 file changed, 63 insertions(+)
20200827_182211 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200827_182201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_182221 - Docker push completed successfully.


20200827_182221 - All completed successfully
20200827_192201 - Starting Build.

Sending build context to Docker daemon  58.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_192201
20200827_192202 - Build completed successfully.


Already up to date.
[master 2a837e9] Automatic build 20200827_192201
 1 file changed, 63 insertions(+)
20200827_192210 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200827_192201: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_192216 - Docker push completed successfully.


20200827_192216 - All completed successfully
20200827_202201 - Starting Build.

Sending build context to Docker daemon     59MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_202201
20200827_202202 - Build completed successfully.


20200827_202202 - git
[master e8eaf45] Automatic build 20200827_202201
 1 file changed, 63 insertions(+)
20200827_202202 - git
20200827_202202 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200827_202202 - Docker push FAILED!!


20200827_211701 - Starting Build.

Sending build context to Docker daemon  59.17MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_211701
20200827_211702 - Build completed successfully.


Already up to date.
[master c8cf336] Automatic build 20200827_211701
 1 file changed, 43 insertions(+)
20200827_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
0d05320c72ac: Layer already exists
20200827_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_211720 - Docker push completed successfully.


20200827_211720 - All completed successfully
20200827_221701 - Starting Build.

Sending build context to Docker daemon  59.35MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_221701
20200827_221701 - Build completed successfully.


Already up to date.
[master 9a1df53] Automatic build 20200827_221701
 1 file changed, 63 insertions(+)
20200827_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200827_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_221718 - Docker push completed successfully.


20200827_221718 - All completed successfully
20200827_231701 - Starting Build.

Sending build context to Docker daemon  59.53MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200827_231701
20200827_231702 - Build completed successfully.


Already up to date.
[master 25f7904] Automatic build 20200827_231701
 1 file changed, 63 insertions(+)
20200827_231713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200827_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200827_231720 - Docker push completed successfully.


20200827_231720 - All completed successfully
20200828_001701 - Starting Build.

Sending build context to Docker daemon  59.71MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_001701
20200828_001702 - Build completed successfully.


Already up to date.
[master 0f7f0fa] Automatic build 20200828_001701
 1 file changed, 63 insertions(+)
20200828_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200828_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_001719 - Docker push completed successfully.


20200828_001719 - All completed successfully
20200828_011701 - Starting Build.

Sending build context to Docker daemon  59.89MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_011701
20200828_011702 - Build completed successfully.


Already up to date.
[master a8110d0] Automatic build 20200828_011701
 1 file changed, 63 insertions(+)
20200828_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200828_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_011720 - Docker push completed successfully.


20200828_011720 - All completed successfully
20200828_021701 - Starting Build.

Sending build context to Docker daemon  60.06MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_021701
20200828_021702 - Build completed successfully.


Already up to date.
[master 1598fbb] Automatic build 20200828_021701
 1 file changed, 63 insertions(+)
20200828_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200828_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_021718 - Docker push completed successfully.


20200828_021718 - All completed successfully
20200828_031701 - Starting Build.

Sending build context to Docker daemon  60.24MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_031701
20200828_031701 - Build completed successfully.


Already up to date.
[master 50754f6] Automatic build 20200828_031701
 1 file changed, 62 insertions(+)
20200828_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200828_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_031718 - Docker push completed successfully.


20200828_031718 - All completed successfully
20200828_041701 - Starting Build.

Sending build context to Docker daemon  60.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_041701
20200828_041702 - Build completed successfully.


Already up to date.
[master 8792c4c] Automatic build 20200828_041701
 1 file changed, 62 insertions(+)
20200828_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200828_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_041718 - Docker push completed successfully.


20200828_041718 - All completed successfully
20200828_051701 - Starting Build.

Sending build context to Docker daemon   60.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_051701
20200828_051701 - Build completed successfully.


Already up to date.
[master ff1c935] Automatic build 20200828_051701
 1 file changed, 63 insertions(+)
20200828_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200828_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_051718 - Docker push completed successfully.


20200828_051718 - All completed successfully
20200828_061701 - Starting Build.

Sending build context to Docker daemon  60.78MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_061701
20200828_061701 - Build completed successfully.


Already up to date.
[master d35ec5e] Automatic build 20200828_061701
 1 file changed, 63 insertions(+)
20200828_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200828_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_061719 - Docker push completed successfully.


20200828_061719 - All completed successfully
20200828_071701 - Starting Build.

Sending build context to Docker daemon  60.96MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_071701
20200828_071702 - Build completed successfully.


Already up to date.
[master 8ced4b8] Automatic build 20200828_071701
 1 file changed, 63 insertions(+)
20200828_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200828_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_071719 - Docker push completed successfully.


20200828_071719 - All completed successfully
20200828_081701 - Starting Build.

Sending build context to Docker daemon  61.14MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_081701
20200828_081701 - Build completed successfully.


Already up to date.
[master 1ff2557] Automatic build 20200828_081701
 1 file changed, 62 insertions(+)
20200828_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200828_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_081718 - Docker push completed successfully.


20200828_081718 - All completed successfully
20200828_091701 - Starting Build.

Sending build context to Docker daemon  61.32MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_091701
20200828_091701 - Build completed successfully.


Already up to date.
[master 6b6e8db] Automatic build 20200828_091701
 1 file changed, 63 insertions(+)
20200828_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200828_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_091718 - Docker push completed successfully.


20200828_091718 - All completed successfully
20200828_101701 - Starting Build.

Sending build context to Docker daemon  61.49MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_101701
20200828_101702 - Build completed successfully.


Already up to date.
[master 02cdf24] Automatic build 20200828_101701
 1 file changed, 62 insertions(+)
20200828_101739 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200828_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_101755 - Docker push completed successfully.


20200828_101755 - All completed successfully
20200828_111701 - Starting Build.

Sending build context to Docker daemon  61.67MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_111701
20200828_111701 - Build completed successfully.


Already up to date.
[master 3b59fbc] Automatic build 20200828_111701
 1 file changed, 62 insertions(+)
20200828_111846 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200828_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_111900 - Docker push completed successfully.


20200828_111900 - All completed successfully
20200828_121701 - Starting Build.

Sending build context to Docker daemon  61.85MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_121701
20200828_121702 - Build completed successfully.


20200828_121702 - git
[master cc6de84] Automatic build 20200828_121701
 1 file changed, 63 insertions(+)
20200828_121702 - git
20200828_121702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200828_121702 - Docker push FAILED!!


20200828_131701 - Starting Build.

Sending build context to Docker daemon  62.03MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_131701
20200828_131702 - Build completed successfully.


20200828_131702 - git
[master a72dadf] Automatic build 20200828_131701
 1 file changed, 43 insertions(+)
20200828_131702 - git
20200828_131702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200828_131702 - Docker push FAILED!!


20200828_141701 - Starting Build.

Sending build context to Docker daemon  62.21MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_141701
20200828_141702 - Build completed successfully.


Already up to date.
[master 5aa9e66] Automatic build 20200828_141701
 1 file changed, 43 insertions(+)
20200828_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200828_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_141720 - Docker push completed successfully.


20200828_141720 - All completed successfully
20200828_151701 - Starting Build.

Sending build context to Docker daemon  62.39MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_151701
20200828_151701 - Build completed successfully.


Already up to date.
[master a44ddfc] Automatic build 20200828_151701
 1 file changed, 63 insertions(+)
20200828_154019 - git
20200828_154019 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200828_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_154028 - Docker push completed successfully.


20200828_154028 - All completed successfully
20200828_161701 - Starting Build.

Sending build context to Docker daemon  62.57MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_161701
20200828_161702 - Build completed successfully.


Already up to date.
[master ae180e4] Automatic build 20200828_161701
 1 file changed, 64 insertions(+)
20200828_161712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200828_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_161721 - Docker push completed successfully.


20200828_161721 - All completed successfully
20200828_171701 - Starting Build.

Sending build context to Docker daemon  62.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_171701
20200828_171703 - Build completed successfully.


Already up to date.
[master 14a3ced] Automatic build 20200828_171701
 1 file changed, 63 insertions(+)
20200828_171713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200828_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_171722 - Docker push completed successfully.


20200828_171722 - All completed successfully
20200828_181701 - Starting Build.

Sending build context to Docker daemon  62.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_181701
20200828_181701 - Build completed successfully.


20200828_181701 - git
[master 1555d2e] Automatic build 20200828_181701
 1 file changed, 63 insertions(+)
20200828_181701 - git
20200828_181701 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200828_181701 - Docker push FAILED!!


20200828_191701 - Starting Build.

Sending build context to Docker daemon  63.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_191701
20200828_191702 - Build completed successfully.


20200828_191702 - git
[master d68de4e] Automatic build 20200828_191701
 1 file changed, 43 insertions(+)
20200828_191702 - git
20200828_191702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200828_191702 - Docker push FAILED!!


20200828_201701 - Starting Build.

Sending build context to Docker daemon  63.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_201701
20200828_201701 - Build completed successfully.


20200828_201701 - git
[master 5e37f89] Automatic build 20200828_201701
 1 file changed, 43 insertions(+)
20200828_201701 - git
20200828_201701 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200828_201701 - Docker push FAILED!!


20200828_211701 - Starting Build.

Sending build context to Docker daemon  63.47MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_211701
20200828_211701 - Build completed successfully.


20200828_211701 - git
[master b9fe683] Automatic build 20200828_211701
 1 file changed, 43 insertions(+)
20200828_211701 - git
20200828_211701 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200828_211701 - Docker push FAILED!!


20200828_221701 - Starting Build.

Sending build context to Docker daemon  63.65MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_221701
20200828_221702 - Build completed successfully.


20200828_221702 - git
[master c194ab4] Automatic build 20200828_221701
 1 file changed, 43 insertions(+)
20200828_221702 - git
20200828_221702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200828_221702 - Docker push FAILED!!


20200828_231701 - Starting Build.

Sending build context to Docker daemon  63.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200828_231701
20200828_231701 - Build completed successfully.


Already up to date.
[master e06275a] Automatic build 20200828_231701
 1 file changed, 43 insertions(+)
20200828_231713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200828_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200828_231720 - Docker push completed successfully.


20200828_231720 - All completed successfully
20200829_001701 - Starting Build.

Sending build context to Docker daemon  64.01MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_001701
20200829_001701 - Build completed successfully.


Already up to date.
[master 65fcebc] Automatic build 20200829_001701
 1 file changed, 62 insertions(+)
20200829_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200829_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_001719 - Docker push completed successfully.


20200829_001719 - All completed successfully
20200829_011701 - Starting Build.

Sending build context to Docker daemon  64.19MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_011701
20200829_011701 - Build completed successfully.


Already up to date.
[master 4ac3a77] Automatic build 20200829_011701
 1 file changed, 62 insertions(+)
20200829_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200829_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_011720 - Docker push completed successfully.


20200829_011720 - All completed successfully
20200829_021701 - Starting Build.

Sending build context to Docker daemon  64.37MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_021701
20200829_021702 - Build completed successfully.


Already up to date.
[master 6965314] Automatic build 20200829_021701
 1 file changed, 63 insertions(+)
20200829_021712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200829_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_021721 - Docker push completed successfully.


20200829_021721 - All completed successfully
20200829_031702 - Starting Build.

Sending build context to Docker daemon  64.55MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_031702
20200829_031702 - Build completed successfully.


Already up to date.
[master 1ca8a85] Automatic build 20200829_031702
 1 file changed, 63 insertions(+)
20200829_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200829_031702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_031718 - Docker push completed successfully.


20200829_031718 - All completed successfully
20200829_171701 - Starting Build.

Sending build context to Docker daemon  64.73MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_171701
20200829_171702 - Build completed successfully.


Already up to date.
[master c68df11] Automatic build 20200829_171701
 1 file changed, 63 insertions(+)
20200829_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200829_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_171718 - Docker push completed successfully.


20200829_171718 - All completed successfully
20200829_181701 - Starting Build.

Sending build context to Docker daemon  64.91MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_181701
20200829_181702 - Build completed successfully.


Already up to date.
[master 75ff92c] Automatic build 20200829_181701
 1 file changed, 63 insertions(+)
20200829_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200829_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_181717 - Docker push completed successfully.


20200829_181717 - All completed successfully
20200829_191701 - Starting Build.

Sending build context to Docker daemon  65.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_191701
20200829_191702 - Build completed successfully.


Already up to date.
[master 6c597bf] Automatic build 20200829_191701
 1 file changed, 63 insertions(+)
20200829_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200829_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_191718 - Docker push completed successfully.


20200829_191718 - All completed successfully
20200829_201701 - Starting Build.

Sending build context to Docker daemon  65.27MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_201701
20200829_201701 - Build completed successfully.


Already up to date.
[master b6407b4] Automatic build 20200829_201701
 1 file changed, 63 insertions(+)
20200829_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200829_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_201718 - Docker push completed successfully.


20200829_201718 - All completed successfully
20200829_211701 - Starting Build.

Sending build context to Docker daemon  65.45MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_211701
20200829_211701 - Build completed successfully.


Already up to date.
[master 4bddd77] Automatic build 20200829_211701
 1 file changed, 63 insertions(+)
20200829_211710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200829_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_211717 - Docker push completed successfully.


20200829_211717 - All completed successfully
20200829_221701 - Starting Build.

Sending build context to Docker daemon  65.63MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_221701
20200829_221702 - Build completed successfully.


Already up to date.
[master c8e6049] Automatic build 20200829_221701
 1 file changed, 62 insertions(+)
20200829_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200829_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_221718 - Docker push completed successfully.


20200829_221718 - All completed successfully
20200829_231701 - Starting Build.

Sending build context to Docker daemon  65.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200829_231701
20200829_231701 - Build completed successfully.


Already up to date.
[master bf31262] Automatic build 20200829_231701
 1 file changed, 63 insertions(+)
20200829_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200829_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200829_231718 - Docker push completed successfully.


20200829_231718 - All completed successfully
20200830_001701 - Starting Build.

Sending build context to Docker daemon     66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_001701
20200830_001702 - Build completed successfully.


Already up to date.
[master 8718431] Automatic build 20200830_001701
 1 file changed, 63 insertions(+)
20200830_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200830_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_001719 - Docker push completed successfully.


20200830_001719 - All completed successfully
20200830_011701 - Starting Build.

Sending build context to Docker daemon  66.18MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_011701
20200830_011702 - Build completed successfully.


Already up to date.
[master 5d7e7d3] Automatic build 20200830_011701
 1 file changed, 62 insertions(+)
20200830_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
eb2e93e4340b: Layer already exists
20200830_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_011722 - Docker push completed successfully.


20200830_011722 - All completed successfully
20200830_021701 - Starting Build.

Sending build context to Docker daemon  66.36MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_021701
20200830_021702 - Build completed successfully.


Already up to date.
[master 21da629] Automatic build 20200830_021701
 1 file changed, 63 insertions(+)
20200830_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200830_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_021721 - Docker push completed successfully.


20200830_021721 - All completed successfully
20200830_031701 - Starting Build.

Sending build context to Docker daemon  66.54MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_031701
20200830_031702 - Build completed successfully.


Already up to date.
[master 1e385a6] Automatic build 20200830_031701
 1 file changed, 63 insertions(+)
20200830_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200830_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_031718 - Docker push completed successfully.


20200830_031718 - All completed successfully
20200830_041701 - Starting Build.

Sending build context to Docker daemon  66.73MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_041701
20200830_041701 - Build completed successfully.


Already up to date.
[master ea73e65] Automatic build 20200830_041701
 1 file changed, 63 insertions(+)
20200830_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200830_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_041718 - Docker push completed successfully.


20200830_041718 - All completed successfully
20200830_051701 - Starting Build.

Sending build context to Docker daemon  66.91MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_051701
20200830_051702 - Build completed successfully.


Already up to date.
[master a637625] Automatic build 20200830_051701
 1 file changed, 63 insertions(+)
20200830_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200830_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_051718 - Docker push completed successfully.


20200830_051718 - All completed successfully
20200830_061701 - Starting Build.

Sending build context to Docker daemon  67.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_061701
20200830_061702 - Build completed successfully.


Already up to date.
[master c2813e4] Automatic build 20200830_061701
 1 file changed, 63 insertions(+)
20200830_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200830_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_061718 - Docker push completed successfully.


20200830_061718 - All completed successfully
20200830_071701 - Starting Build.

Sending build context to Docker daemon  67.27MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_071701
20200830_071702 - Build completed successfully.


Already up to date.
[master 7934ca3] Automatic build 20200830_071701
 1 file changed, 63 insertions(+)
20200830_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200830_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_071719 - Docker push completed successfully.


20200830_071719 - All completed successfully
20200830_081701 - Starting Build.

Sending build context to Docker daemon  67.46MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_081701
20200830_081702 - Build completed successfully.


Already up to date.
[master 19655c5] Automatic build 20200830_081701
 1 file changed, 63 insertions(+)
20200830_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200830_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_081718 - Docker push completed successfully.


20200830_081718 - All completed successfully
20200830_091701 - Starting Build.

Sending build context to Docker daemon  67.64MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_091701
20200830_091701 - Build completed successfully.


Already up to date.
[master 3d7cf70] Automatic build 20200830_091701
 1 file changed, 62 insertions(+)
20200830_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200830_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_091720 - Docker push completed successfully.


20200830_091720 - All completed successfully
20200830_101701 - Starting Build.

Sending build context to Docker daemon  67.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_101701
20200830_101702 - Build completed successfully.


Already up to date.
[master 1dc19e1] Automatic build 20200830_101701
 1 file changed, 63 insertions(+)
20200830_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200830_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_101719 - Docker push completed successfully.


20200830_101719 - All completed successfully
20200830_111701 - Starting Build.

Sending build context to Docker daemon     68MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_111701
20200830_111701 - Build completed successfully.


Already up to date.
[master 69a9903] Automatic build 20200830_111701
 1 file changed, 63 insertions(+)
20200830_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200830_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_111719 - Docker push completed successfully.


20200830_111719 - All completed successfully
20200830_121701 - Starting Build.

Sending build context to Docker daemon  68.19MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_121701
20200830_121702 - Build completed successfully.


Already up to date.
[master b01181c] Automatic build 20200830_121701
 1 file changed, 63 insertions(+)
20200830_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200830_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_121719 - Docker push completed successfully.


20200830_121719 - All completed successfully
20200830_131701 - Starting Build.

Sending build context to Docker daemon  68.37MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_131701
20200830_131702 - Build completed successfully.


Already up to date.
[master c70f8d3] Automatic build 20200830_131701
 1 file changed, 63 insertions(+)
20200830_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200830_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_131719 - Docker push completed successfully.


20200830_131719 - All completed successfully
20200830_141701 - Starting Build.

Sending build context to Docker daemon  68.55MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_141701
20200830_141702 - Build completed successfully.


Already up to date.
[master 2670f67] Automatic build 20200830_141701
 1 file changed, 63 insertions(+)
20200830_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200830_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_141721 - Docker push completed successfully.


20200830_141721 - All completed successfully
20200830_151701 - Starting Build.

Sending build context to Docker daemon  68.74MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_151701
20200830_151702 - Build completed successfully.


Already up to date.
[master f88d418] Automatic build 20200830_151701
 1 file changed, 63 insertions(+)
20200830_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200830_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_151719 - Docker push completed successfully.


20200830_151719 - All completed successfully
20200830_161701 - Starting Build.

Sending build context to Docker daemon  68.92MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_161701
20200830_161701 - Build completed successfully.


Already up to date.
[master d1f6ad1] Automatic build 20200830_161701
 1 file changed, 62 insertions(+)
20200830_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200830_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_161719 - Docker push completed successfully.


20200830_161719 - All completed successfully
20200830_171701 - Starting Build.

Sending build context to Docker daemon   69.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_171701
20200830_171701 - Build completed successfully.


Already up to date.
[master 545c5b8] Automatic build 20200830_171701
 1 file changed, 63 insertions(+)
20200830_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200830_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_171719 - Docker push completed successfully.


20200830_171719 - All completed successfully
20200830_181701 - Starting Build.

Sending build context to Docker daemon  69.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_181701
20200830_181701 - Build completed successfully.


Already up to date.
[master a01e113] Automatic build 20200830_181701
 1 file changed, 63 insertions(+)
20200830_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200830_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_181718 - Docker push completed successfully.


20200830_181718 - All completed successfully
20200830_191701 - Starting Build.

Sending build context to Docker daemon  69.47MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_191701
20200830_191701 - Build completed successfully.


Already up to date.
[master 9e85691] Automatic build 20200830_191701
 1 file changed, 63 insertions(+)
20200830_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200830_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_191718 - Docker push completed successfully.


20200830_191718 - All completed successfully
20200830_201701 - Starting Build.

Sending build context to Docker daemon  69.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_201701
20200830_201702 - Build completed successfully.


Already up to date.
[master f76e599] Automatic build 20200830_201701
 1 file changed, 63 insertions(+)
20200830_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200830_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_201719 - Docker push completed successfully.


20200830_201719 - All completed successfully
20200830_211701 - Starting Build.

Sending build context to Docker daemon  69.84MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_211701
20200830_211702 - Build completed successfully.


Already up to date.
[master 038fa22] Automatic build 20200830_211701
 1 file changed, 63 insertions(+)
20200830_211710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200830_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_211718 - Docker push completed successfully.


20200830_211718 - All completed successfully
20200830_221701 - Starting Build.

Sending build context to Docker daemon  70.03MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_221701
20200830_221702 - Build completed successfully.


Already up to date.
[master da7f958] Automatic build 20200830_221701
 1 file changed, 63 insertions(+)
20200830_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200830_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_221718 - Docker push completed successfully.


20200830_221718 - All completed successfully
20200830_231701 - Starting Build.

Sending build context to Docker daemon  70.21MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200830_231701
20200830_231701 - Build completed successfully.


Already up to date.
[master 9b9a35a] Automatic build 20200830_231701
 1 file changed, 63 insertions(+)
20200830_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200830_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200830_231718 - Docker push completed successfully.


20200830_231718 - All completed successfully
20200831_001701 - Starting Build.

Sending build context to Docker daemon  70.39MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_001701
20200831_001702 - Build completed successfully.


Already up to date.
[master b02b3dd] Automatic build 20200831_001701
 1 file changed, 63 insertions(+)
20200831_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200831_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_001719 - Docker push completed successfully.


20200831_001719 - All completed successfully
20200831_011701 - Starting Build.

Sending build context to Docker daemon  70.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_011701
20200831_011701 - Build completed successfully.


Already up to date.
[master 9c6d488] Automatic build 20200831_011701
 1 file changed, 63 insertions(+)
20200831_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200831_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_011718 - Docker push completed successfully.


20200831_011718 - All completed successfully
20200831_021701 - Starting Build.

Sending build context to Docker daemon  70.76MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_021701
20200831_021702 - Build completed successfully.


Already up to date.
[master 6ceb05f] Automatic build 20200831_021701
 1 file changed, 63 insertions(+)
20200831_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200831_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_021718 - Docker push completed successfully.


20200831_021718 - All completed successfully
20200831_031701 - Starting Build.

Sending build context to Docker daemon  70.95MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_031701
20200831_031701 - Build completed successfully.


Already up to date.
[master 39493eb] Automatic build 20200831_031701
 1 file changed, 62 insertions(+)
20200831_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200831_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_031718 - Docker push completed successfully.


20200831_031718 - All completed successfully
20200831_041701 - Starting Build.

Sending build context to Docker daemon  71.13MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_041701
20200831_041702 - Build completed successfully.


Already up to date.
[master 58a794a] Automatic build 20200831_041701
 1 file changed, 63 insertions(+)
20200831_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200831_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_041718 - Docker push completed successfully.


20200831_041718 - All completed successfully
20200831_051701 - Starting Build.

Sending build context to Docker daemon  71.32MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_051701
20200831_051702 - Build completed successfully.


Already up to date.
[master 8ef4686] Automatic build 20200831_051701
 1 file changed, 62 insertions(+)
20200831_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200831_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_051718 - Docker push completed successfully.


20200831_051718 - All completed successfully
20200831_061701 - Starting Build.

Sending build context to Docker daemon   71.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_061701
20200831_061702 - Build completed successfully.


Already up to date.
[master 840e197] Automatic build 20200831_061701
 1 file changed, 63 insertions(+)
20200831_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200831_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_061720 - Docker push completed successfully.


20200831_061720 - All completed successfully
20200831_071701 - Starting Build.

Sending build context to Docker daemon  71.69MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_071701
20200831_071701 - Build completed successfully.


Already up to date.
[master ec3a679] Automatic build 20200831_071701
 1 file changed, 63 insertions(+)
20200831_071712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200831_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_071720 - Docker push completed successfully.


20200831_071720 - All completed successfully
20200831_081701 - Starting Build.

Sending build context to Docker daemon  71.87MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_081701
20200831_081702 - Build completed successfully.


Already up to date.
[master 5a98677] Automatic build 20200831_081701
 1 file changed, 62 insertions(+)
20200831_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200831_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_081718 - Docker push completed successfully.


20200831_081718 - All completed successfully
20200831_091701 - Starting Build.

Sending build context to Docker daemon  72.06MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_091701
20200831_091702 - Build completed successfully.


Already up to date.
[master d78ecb8] Automatic build 20200831_091701
 1 file changed, 62 insertions(+)
20200831_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200831_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_091718 - Docker push completed successfully.


20200831_091718 - All completed successfully
20200831_101701 - Starting Build.

Sending build context to Docker daemon  72.24MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_101701
20200831_101702 - Build completed successfully.


Already up to date.
[master 736ec60] Automatic build 20200831_101701
 1 file changed, 63 insertions(+)
20200831_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200831_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_101718 - Docker push completed successfully.


20200831_101718 - All completed successfully
20200831_111701 - Starting Build.

Sending build context to Docker daemon  72.43MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_111701
20200831_111702 - Build completed successfully.


Already up to date.
[master 5144aab] Automatic build 20200831_111701
 1 file changed, 63 insertions(+)
20200831_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200831_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_111718 - Docker push completed successfully.


20200831_111718 - All completed successfully
20200831_121701 - Starting Build.

Sending build context to Docker daemon  72.61MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_121701
20200831_121702 - Build completed successfully.


Already up to date.
[master 7cee53b] Automatic build 20200831_121701
 1 file changed, 63 insertions(+)
20200831_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200831_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_121718 - Docker push completed successfully.


20200831_121718 - All completed successfully
20200831_131701 - Starting Build.

Sending build context to Docker daemon   72.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_131701
20200831_131703 - Build completed successfully.


Already up to date.
[master 661df4a] Automatic build 20200831_131701
 1 file changed, 63 insertions(+)
20200831_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200831_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_131718 - Docker push completed successfully.


20200831_131718 - All completed successfully
20200831_141701 - Starting Build.

Sending build context to Docker daemon  72.99MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_141701
20200831_141702 - Build completed successfully.


Already up to date.
[master 0adc72c] Automatic build 20200831_141701
 1 file changed, 63 insertions(+)
20200831_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200831_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_141717 - Docker push completed successfully.


20200831_141717 - All completed successfully
20200831_151701 - Starting Build.

Sending build context to Docker daemon  73.17MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_151701
20200831_151702 - Build completed successfully.


Already up to date.
[master fcc8951] Automatic build 20200831_151701
 1 file changed, 63 insertions(+)
20200831_151709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200831_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_151717 - Docker push completed successfully.


20200831_151717 - All completed successfully
20200831_161701 - Starting Build.

Sending build context to Docker daemon  73.36MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_161701
20200831_161702 - Build completed successfully.


Already up to date.
[master 14c6ca8] Automatic build 20200831_161701
 1 file changed, 63 insertions(+)
20200831_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200831_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_161719 - Docker push completed successfully.


20200831_161719 - All completed successfully
20200831_171701 - Starting Build.

Sending build context to Docker daemon  73.54MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_171701
20200831_171701 - Build completed successfully.


Already up to date.
[master 54fbc49] Automatic build 20200831_171701
 1 file changed, 63 insertions(+)
20200831_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200831_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_171718 - Docker push completed successfully.


20200831_171718 - All completed successfully
20200831_181702 - Starting Build.

Sending build context to Docker daemon  73.73MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200831_181702
20200831_181702 - Build completed successfully.


Already up to date.
[master 00d11f7] Automatic build 20200831_181702
 1 file changed, 62 insertions(+)
20200831_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200831_181702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200831_181719 - Docker push completed successfully.


20200831_181719 - All completed successfully
20200901_021701 - Starting Build.

Sending build context to Docker daemon  73.92MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_021701
20200901_021702 - Build completed successfully.


Already up to date.
[master e64cde2] Automatic build 20200901_021701
 1 file changed, 63 insertions(+)
20200901_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_021719 - Docker push completed successfully.


20200901_021719 - All completed successfully
20200901_031701 - Starting Build.

Sending build context to Docker daemon   74.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_031701
20200901_031702 - Build completed successfully.


Already up to date.
[master 3edd53e] Automatic build 20200901_031701
 1 file changed, 62 insertions(+)
20200901_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_031720 - Docker push completed successfully.


20200901_031720 - All completed successfully
20200901_041701 - Starting Build.

Sending build context to Docker daemon  74.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_041701
20200901_041702 - Build completed successfully.


Already up to date.
[master 0c032d9] Automatic build 20200901_041701
 1 file changed, 63 insertions(+)
20200901_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_041719 - Docker push completed successfully.


20200901_041719 - All completed successfully
20200901_051701 - Starting Build.

Sending build context to Docker daemon  74.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_051701
20200901_051701 - Build completed successfully.


Already up to date.
[master dbb5601] Automatic build 20200901_051701
 1 file changed, 63 insertions(+)
20200901_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_051719 - Docker push completed successfully.


20200901_051719 - All completed successfully
20200901_061701 - Starting Build.

Sending build context to Docker daemon  74.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_061701
20200901_061701 - Build completed successfully.


Already up to date.
[master 0ff39d6] Automatic build 20200901_061701
 1 file changed, 63 insertions(+)
20200901_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200901_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_061718 - Docker push completed successfully.


20200901_061718 - All completed successfully
20200901_071701 - Starting Build.

Sending build context to Docker daemon  74.85MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_071701
20200901_071702 - Build completed successfully.


Already up to date.
[master 28bc166] Automatic build 20200901_071701
 1 file changed, 62 insertions(+)
20200901_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_071718 - Docker push completed successfully.


20200901_071718 - All completed successfully
20200901_081701 - Starting Build.

Sending build context to Docker daemon  75.04MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_081701
20200901_081701 - Build completed successfully.


Already up to date.
[master d7ae70c] Automatic build 20200901_081701
 1 file changed, 62 insertions(+)
20200901_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_081718 - Docker push completed successfully.


20200901_081718 - All completed successfully
20200901_091701 - Starting Build.

Sending build context to Docker daemon  75.22MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_091701
20200901_091701 - Build completed successfully.


Already up to date.
[master 1a0e0a4] Automatic build 20200901_091701
 1 file changed, 63 insertions(+)
20200901_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_091719 - Docker push completed successfully.


20200901_091719 - All completed successfully
20200901_101701 - Starting Build.

Sending build context to Docker daemon  75.41MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_101701
20200901_101701 - Build completed successfully.


Already up to date.
[master b560112] Automatic build 20200901_101701
 1 file changed, 63 insertions(+)
20200901_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_101718 - Docker push completed successfully.


20200901_101718 - All completed successfully
20200901_111701 - Starting Build.

Sending build context to Docker daemon   75.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_111701
20200901_111702 - Build completed successfully.


Already up to date.
[master f65ede9] Automatic build 20200901_111701
 1 file changed, 61 insertions(+)
20200901_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_111718 - Docker push completed successfully.


20200901_111718 - All completed successfully
20200901_121701 - Starting Build.

Sending build context to Docker daemon  75.79MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_121701
20200901_121702 - Build completed successfully.


Already up to date.
[master 61a7b92] Automatic build 20200901_121701
 1 file changed, 63 insertions(+)
20200901_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200901_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_121718 - Docker push completed successfully.


20200901_121718 - All completed successfully
20200901_131701 - Starting Build.

Sending build context to Docker daemon  75.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_131701
20200901_131702 - Build completed successfully.


Already up to date.
[master 2ad9a47] Automatic build 20200901_131701
 1 file changed, 63 insertions(+)
20200901_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200901_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_131719 - Docker push completed successfully.


20200901_131719 - All completed successfully
20200901_141701 - Starting Build.

Sending build context to Docker daemon  76.16MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_141701
20200901_141702 - Build completed successfully.


Already up to date.
[master ef9e53b] Automatic build 20200901_141701
 1 file changed, 63 insertions(+)
20200901_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200901_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_141718 - Docker push completed successfully.


20200901_141718 - All completed successfully
20200901_151701 - Starting Build.

Sending build context to Docker daemon  76.35MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_151701
20200901_151702 - Build completed successfully.


Already up to date.
[master 63219bd] Automatic build 20200901_151701
 1 file changed, 63 insertions(+)
20200901_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200901_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_151718 - Docker push completed successfully.


20200901_151718 - All completed successfully
20200901_161701 - Starting Build.

Sending build context to Docker daemon  76.54MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_161701
20200901_161702 - Build completed successfully.


Already up to date.
[master 11a16b3] Automatic build 20200901_161701
 1 file changed, 63 insertions(+)
20200901_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200901_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_161718 - Docker push completed successfully.


20200901_161718 - All completed successfully
20200901_171701 - Starting Build.

Sending build context to Docker daemon  76.73MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_171701
20200901_171702 - Build completed successfully.


Already up to date.
[master 34ea413] Automatic build 20200901_171701
 1 file changed, 63 insertions(+)
20200901_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200901_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_171718 - Docker push completed successfully.


20200901_171718 - All completed successfully
20200901_181701 - Starting Build.

Sending build context to Docker daemon  76.91MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_181701
20200901_181701 - Build completed successfully.


Already up to date.
[master 35bc05d] Automatic build 20200901_181701
 1 file changed, 63 insertions(+)
20200901_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200901_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_181718 - Docker push completed successfully.


20200901_181718 - All completed successfully
20200901_191701 - Starting Build.

Sending build context to Docker daemon   77.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_191701
20200901_191702 - Build completed successfully.


Already up to date.
[master 3381d92] Automatic build 20200901_191701
 1 file changed, 63 insertions(+)
20200901_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200901_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_191718 - Docker push completed successfully.


20200901_191718 - All completed successfully
20200901_201701 - Starting Build.

Sending build context to Docker daemon  77.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_201701
20200901_201702 - Build completed successfully.


Already up to date.
[master 5bccac8] Automatic build 20200901_201701
 1 file changed, 63 insertions(+)
20200901_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_201719 - Docker push completed successfully.


20200901_201719 - All completed successfully
20200901_211701 - Starting Build.

Sending build context to Docker daemon  77.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_211701
20200901_211701 - Build completed successfully.


Already up to date.
[master 484355e] Automatic build 20200901_211701
 1 file changed, 63 insertions(+)
20200901_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
ca957f31f870: Waiting
0d05320c72ac: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_211721 - Docker push completed successfully.


20200901_211721 - All completed successfully
20200901_221701 - Starting Build.

Sending build context to Docker daemon  77.67MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_221701
20200901_221702 - Build completed successfully.


Already up to date.
[master d3592fe] Automatic build 20200901_221701
 1 file changed, 65 insertions(+)
20200901_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200901_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_221718 - Docker push completed successfully.


20200901_221718 - All completed successfully
20200901_231701 - Starting Build.

Sending build context to Docker daemon  77.86MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200901_231701
20200901_231701 - Build completed successfully.


Already up to date.
[master 0ab8e81] Automatic build 20200901_231701
 1 file changed, 63 insertions(+)
20200901_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200901_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200901_231719 - Docker push completed successfully.


20200901_231719 - All completed successfully
20200902_001701 - Starting Build.

Sending build context to Docker daemon  78.05MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_001701
20200902_001701 - Build completed successfully.


Already up to date.
[master 2d4da69] Automatic build 20200902_001701
 1 file changed, 63 insertions(+)
20200902_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200902_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_001718 - Docker push completed successfully.


20200902_001718 - All completed successfully
20200902_011701 - Starting Build.

Sending build context to Docker daemon  78.24MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_011701
20200902_011701 - Build completed successfully.


Already up to date.
[master b4dd611] Automatic build 20200902_011701
 1 file changed, 62 insertions(+)
20200902_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200902_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_011718 - Docker push completed successfully.


20200902_011718 - All completed successfully
20200902_021701 - Starting Build.

Sending build context to Docker daemon  78.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_021701
20200902_021702 - Build completed successfully.


Already up to date.
[master 44a594f] Automatic build 20200902_021701
 1 file changed, 63 insertions(+)
20200902_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200902_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_021718 - Docker push completed successfully.


20200902_021718 - All completed successfully
20200902_031701 - Starting Build.

Sending build context to Docker daemon  78.61MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_031701
20200902_031701 - Build completed successfully.


Already up to date.
[master 8ae5a2a] Automatic build 20200902_031701
 1 file changed, 63 insertions(+)
20200902_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200902_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_031718 - Docker push completed successfully.


20200902_031718 - All completed successfully
20200902_041701 - Starting Build.

Sending build context to Docker daemon   78.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_041701
20200902_041702 - Build completed successfully.


Already up to date.
[master e9c5b49] Automatic build 20200902_041701
 1 file changed, 63 insertions(+)
20200902_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200902_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_041718 - Docker push completed successfully.


20200902_041718 - All completed successfully
20200902_051701 - Starting Build.

Sending build context to Docker daemon  78.99MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_051701
20200902_051701 - Build completed successfully.


Already up to date.
[master dfd07c2] Automatic build 20200902_051701
 1 file changed, 63 insertions(+)
20200902_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200902_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_051742 - Docker push completed successfully.


20200902_051742 - All completed successfully
20200902_061701 - Starting Build.

Sending build context to Docker daemon  79.18MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_061701
20200902_061702 - Build completed successfully.


Already up to date.
[master 86b672e] Automatic build 20200902_061701
 1 file changed, 63 insertions(+)
20200902_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200902_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_061719 - Docker push completed successfully.


20200902_061719 - All completed successfully
20200902_071701 - Starting Build.

Sending build context to Docker daemon  79.37MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_071701
20200902_071701 - Build completed successfully.


Already up to date.
[master 735be7c] Automatic build 20200902_071701
 1 file changed, 63 insertions(+)
20200902_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200902_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_071741 - Docker push completed successfully.


20200902_071741 - All completed successfully
20200902_081701 - Starting Build.

Sending build context to Docker daemon  79.56MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_081701
20200902_081702 - Build completed successfully.


Already up to date.
[master cd248a2] Automatic build 20200902_081701
 1 file changed, 63 insertions(+)
20200902_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200902_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_081719 - Docker push completed successfully.


20200902_081719 - All completed successfully
20200902_091701 - Starting Build.

Sending build context to Docker daemon  79.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_091701
20200902_091701 - Build completed successfully.


Already up to date.
[master cb0e2c6] Automatic build 20200902_091701
 1 file changed, 63 insertions(+)
20200902_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200902_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_091718 - Docker push completed successfully.


20200902_091718 - All completed successfully
20200902_101701 - Starting Build.

Sending build context to Docker daemon  79.94MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_101701
20200902_101702 - Build completed successfully.


Already up to date.
[master 22071ca] Automatic build 20200902_101701
 1 file changed, 63 insertions(+)
20200902_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200902_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_101718 - Docker push completed successfully.


20200902_101718 - All completed successfully
20200902_111701 - Starting Build.

Sending build context to Docker daemon  80.13MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_111701
20200902_111701 - Build completed successfully.


Already up to date.
[master 7993c9d] Automatic build 20200902_111701
 1 file changed, 61 insertions(+)
20200902_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200902_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_111718 - Docker push completed successfully.


20200902_111718 - All completed successfully
20200902_121701 - Starting Build.

Sending build context to Docker daemon  80.32MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_121701
20200902_121702 - Build completed successfully.


Already up to date.
[master b6c1311] Automatic build 20200902_121701
 1 file changed, 62 insertions(+)
20200902_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200902_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_121718 - Docker push completed successfully.


20200902_121718 - All completed successfully
20200902_131701 - Starting Build.

Sending build context to Docker daemon  80.51MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_131701
20200902_131702 - Build completed successfully.


Already up to date.
[master af39bd1] Automatic build 20200902_131701
 1 file changed, 63 insertions(+)
20200902_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200902_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_131718 - Docker push completed successfully.


20200902_131718 - All completed successfully
20200902_141701 - Starting Build.

Sending build context to Docker daemon   80.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_141701
20200902_141701 - Build completed successfully.


Already up to date.
[master c342d4b] Automatic build 20200902_141701
 1 file changed, 62 insertions(+)
20200902_141709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200902_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_141717 - Docker push completed successfully.


20200902_141717 - All completed successfully
20200902_151701 - Starting Build.

Sending build context to Docker daemon  80.89MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_151701
20200902_151702 - Build completed successfully.


Already up to date.
[master 73dfb8c] Automatic build 20200902_151701
 1 file changed, 63 insertions(+)
20200902_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200902_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_151718 - Docker push completed successfully.


20200902_151718 - All completed successfully
20200902_161701 - Starting Build.

Sending build context to Docker daemon  81.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_161701
20200902_161702 - Build completed successfully.


Already up to date.
[master 27de999] Automatic build 20200902_161701
 1 file changed, 63 insertions(+)
20200902_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200902_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_161718 - Docker push completed successfully.


20200902_161718 - All completed successfully
20200902_171701 - Starting Build.

Sending build context to Docker daemon  81.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_171701
20200902_171702 - Build completed successfully.


Already up to date.
[master 3e4e67f] Automatic build 20200902_171701
 1 file changed, 63 insertions(+)
20200902_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200902_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_171719 - Docker push completed successfully.


20200902_171719 - All completed successfully
20200902_181701 - Starting Build.

Sending build context to Docker daemon  81.47MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_181701
20200902_181701 - Build completed successfully.


Already up to date.
[master 7be6be4] Automatic build 20200902_181701
 1 file changed, 63 insertions(+)
20200902_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200902_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_181718 - Docker push completed successfully.


20200902_181718 - All completed successfully
20200902_191701 - Starting Build.

Sending build context to Docker daemon  81.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_191701
20200902_191701 - Build completed successfully.


Already up to date.
[master 7fd3f75] Automatic build 20200902_191701
 1 file changed, 63 insertions(+)
20200902_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200902_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_191718 - Docker push completed successfully.


20200902_191718 - All completed successfully
20200902_201701 - Starting Build.

Sending build context to Docker daemon  81.85MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_201701
20200902_201701 - Build completed successfully.


Already up to date.
[master 6efc72f] Automatic build 20200902_201701
 1 file changed, 63 insertions(+)
20200902_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200902_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_201727 - Docker push completed successfully.


20200902_201727 - All completed successfully
20200902_211701 - Starting Build.

Sending build context to Docker daemon  82.04MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_211701
20200902_211701 - Build completed successfully.


Already up to date.
[master 81f1087] Automatic build 20200902_211701
 1 file changed, 62 insertions(+)
20200902_211710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200902_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_211718 - Docker push completed successfully.


20200902_211718 - All completed successfully
20200902_221702 - Starting Build.

Sending build context to Docker daemon  82.23MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_221702
20200902_221702 - Build completed successfully.


Already up to date.
[master a918fa0] Automatic build 20200902_221702
 1 file changed, 61 insertions(+)
20200902_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200902_221702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_221719 - Docker push completed successfully.


20200902_221719 - All completed successfully
20200902_231701 - Starting Build.

Sending build context to Docker daemon  82.42MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200902_231701
20200902_231702 - Build completed successfully.


Already up to date.
[master 019855f] Automatic build 20200902_231701
 1 file changed, 62 insertions(+)
20200902_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200902_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200902_231718 - Docker push completed successfully.


20200902_231718 - All completed successfully
20200903_001701 - Starting Build.

Sending build context to Docker daemon  82.61MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_001701
20200903_001702 - Build completed successfully.


Already up to date.
[master 5140cb2] Automatic build 20200903_001701
 1 file changed, 63 insertions(+)
20200903_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200903_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_001719 - Docker push completed successfully.


20200903_001719 - All completed successfully
20200903_011701 - Starting Build.

Sending build context to Docker daemon  82.81MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_011701
20200903_011701 - Build completed successfully.


Already up to date.
[master 1b0f79b] Automatic build 20200903_011701
 1 file changed, 62 insertions(+)
20200903_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200903_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_011718 - Docker push completed successfully.


20200903_011718 - All completed successfully
20200903_021701 - Starting Build.

Sending build context to Docker daemon     83MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_021701
20200903_021702 - Build completed successfully.


Already up to date.
[master 73266f4] Automatic build 20200903_021701
 1 file changed, 63 insertions(+)
20200903_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200903_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_021719 - Docker push completed successfully.


20200903_021719 - All completed successfully
20200903_031701 - Starting Build.

Sending build context to Docker daemon  83.19MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_031701
20200903_031702 - Build completed successfully.


Already up to date.
[master 373a5a3] Automatic build 20200903_031701
 1 file changed, 62 insertions(+)
20200903_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200903_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_031719 - Docker push completed successfully.


20200903_031719 - All completed successfully
20200903_041701 - Starting Build.

Sending build context to Docker daemon  83.38MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_041701
20200903_041701 - Build completed successfully.


Already up to date.
[master 70e110c] Automatic build 20200903_041701
 1 file changed, 63 insertions(+)
20200903_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200903_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_041718 - Docker push completed successfully.


20200903_041718 - All completed successfully
20200903_051701 - Starting Build.

Sending build context to Docker daemon  83.57MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_051701
20200903_051702 - Build completed successfully.


Already up to date.
[master b298bf8] Automatic build 20200903_051701
 1 file changed, 63 insertions(+)
20200903_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200903_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_051719 - Docker push completed successfully.


20200903_051719 - All completed successfully
20200903_061701 - Starting Build.

Sending build context to Docker daemon  83.77MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_061701
20200903_061702 - Build completed successfully.


Already up to date.
[master bc96c4f] Automatic build 20200903_061701
 1 file changed, 63 insertions(+)
20200903_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200903_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_061719 - Docker push completed successfully.


20200903_061719 - All completed successfully
20200903_071701 - Starting Build.

Sending build context to Docker daemon  83.96MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_071701
20200903_071702 - Build completed successfully.


Already up to date.
[master 9c47372] Automatic build 20200903_071701
 1 file changed, 63 insertions(+)
20200903_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200903_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_071719 - Docker push completed successfully.


20200903_071719 - All completed successfully
20200903_081701 - Starting Build.

Sending build context to Docker daemon  84.15MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_081701
20200903_081702 - Build completed successfully.


Already up to date.
[master 41b0921] Automatic build 20200903_081701
 1 file changed, 63 insertions(+)
20200903_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200903_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_081719 - Docker push completed successfully.


20200903_081719 - All completed successfully
20200903_091701 - Starting Build.

Sending build context to Docker daemon  84.34MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_091701
20200903_091701 - Build completed successfully.


Already up to date.
[master 6d41577] Automatic build 20200903_091701
 1 file changed, 63 insertions(+)
20200903_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200903_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_091719 - Docker push completed successfully.


20200903_091719 - All completed successfully
20200903_101701 - Starting Build.

Sending build context to Docker daemon  84.53MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_101701
20200903_101702 - Build completed successfully.


Already up to date.
[master 84a3863] Automatic build 20200903_101701
 1 file changed, 63 insertions(+)
20200903_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200903_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_101718 - Docker push completed successfully.


20200903_101718 - All completed successfully
20200903_111701 - Starting Build.

Sending build context to Docker daemon  84.73MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_111701
20200903_111701 - Build completed successfully.


Already up to date.
[master 3cb3520] Automatic build 20200903_111701
 1 file changed, 63 insertions(+)
20200903_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200903_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_111718 - Docker push completed successfully.


20200903_111718 - All completed successfully
20200903_121701 - Starting Build.

Sending build context to Docker daemon  84.92MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_121701
20200903_121703 - Build completed successfully.


Already up to date.
[master ce8dc4c] Automatic build 20200903_121701
 1 file changed, 63 insertions(+)
20200903_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200903_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_121727 - Docker push completed successfully.


20200903_121727 - All completed successfully
20200903_131701 - Starting Build.

Sending build context to Docker daemon  85.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_131701
20200903_131703 - Build completed successfully.


Already up to date.
[master eba9fa5] Automatic build 20200903_131701
 1 file changed, 63 insertions(+)
20200903_131712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200903_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_131735 - Docker push completed successfully.


20200903_131735 - All completed successfully
20200903_141701 - Starting Build.

Sending build context to Docker daemon   85.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_141701
20200903_141703 - Build completed successfully.


Already up to date.
[master 315eced] Automatic build 20200903_141701
 1 file changed, 63 insertions(+)
20200903_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200903_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_141726 - Docker push completed successfully.


20200903_141726 - All completed successfully
20200903_151701 - Starting Build.

Sending build context to Docker daemon   85.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_151701
20200903_151702 - Build completed successfully.


Already up to date.
[master 23f3913] Automatic build 20200903_151701
 1 file changed, 63 insertions(+)
20200903_151713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200903_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_151746 - Docker push completed successfully.


20200903_151746 - All completed successfully
20200903_161701 - Starting Build.

Sending build context to Docker daemon  85.69MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_161701
20200903_161702 - Build completed successfully.


Already up to date.
[master d2a254a] Automatic build 20200903_161701
 1 file changed, 62 insertions(+)
20200903_161712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200903_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_161743 - Docker push completed successfully.


20200903_161743 - All completed successfully
20200903_171701 - Starting Build.

Sending build context to Docker daemon  85.88MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_171701
20200903_171702 - Build completed successfully.


Already up to date.
[master cb8e5fc] Automatic build 20200903_171701
 1 file changed, 63 insertions(+)
20200903_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200903_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_171719 - Docker push completed successfully.


20200903_171719 - All completed successfully
20200903_181701 - Starting Build.

Sending build context to Docker daemon  86.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_181701
20200903_181702 - Build completed successfully.


Already up to date.
[master 40f1baa] Automatic build 20200903_181701
 1 file changed, 63 insertions(+)
20200903_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200903_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_181720 - Docker push completed successfully.


20200903_181720 - All completed successfully
20200903_191701 - Starting Build.

Sending build context to Docker daemon  86.27MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_191701
20200903_191703 - Build completed successfully.


Already up to date.
[master 4a75260] Automatic build 20200903_191701
 1 file changed, 63 insertions(+)
20200903_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200903_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_191722 - Docker push completed successfully.


20200903_191722 - All completed successfully
20200903_201701 - Starting Build.

Sending build context to Docker daemon  86.46MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_201701
20200903_201702 - Build completed successfully.


Already up to date.
[master 2fa5214] Automatic build 20200903_201701
 1 file changed, 62 insertions(+)
20200903_201714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200903_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_201724 - Docker push completed successfully.


20200903_201724 - All completed successfully
20200903_211701 - Starting Build.

Sending build context to Docker daemon  86.66MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_211701
20200903_211701 - Build completed successfully.


Already up to date.
[master 3b8de43] Automatic build 20200903_211701
 1 file changed, 63 insertions(+)
20200903_211710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200903_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_211719 - Docker push completed successfully.


20200903_211719 - All completed successfully
20200903_221701 - Starting Build.

Sending build context to Docker daemon  86.85MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_221701
20200903_221702 - Build completed successfully.


Already up to date.
[master b135a7c] Automatic build 20200903_221701
 1 file changed, 63 insertions(+)
20200903_221714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200903_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_221723 - Docker push completed successfully.


20200903_221723 - All completed successfully
20200903_231701 - Starting Build.

Sending build context to Docker daemon  87.05MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200903_231701
20200903_231702 - Build completed successfully.


Already up to date.
[master 2042aef] Automatic build 20200903_231701
 1 file changed, 63 insertions(+)
20200903_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200903_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200903_231719 - Docker push completed successfully.


20200903_231719 - All completed successfully
20200904_001701 - Starting Build.

Sending build context to Docker daemon  87.24MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_001701
20200904_001701 - Build completed successfully.


Already up to date.
[master 8c96f1a] Automatic build 20200904_001701
 1 file changed, 63 insertions(+)
20200904_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200904_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_001718 - Docker push completed successfully.


20200904_001718 - All completed successfully
20200904_011701 - Starting Build.

Sending build context to Docker daemon  87.43MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_011701
20200904_011702 - Build completed successfully.


Already up to date.
[master 3190c3a] Automatic build 20200904_011701
 1 file changed, 62 insertions(+)
20200904_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200904_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_011718 - Docker push completed successfully.


20200904_011718 - All completed successfully
20200904_021701 - Starting Build.

Sending build context to Docker daemon  87.63MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_021701
20200904_021702 - Build completed successfully.


Already up to date.
[master 0fc353e] Automatic build 20200904_021701
 1 file changed, 63 insertions(+)
20200904_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200904_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_021718 - Docker push completed successfully.


20200904_021718 - All completed successfully
20200904_031701 - Starting Build.

Sending build context to Docker daemon  87.82MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_031701
20200904_031701 - Build completed successfully.


Already up to date.
[master 94789ec] Automatic build 20200904_031701
 1 file changed, 63 insertions(+)
20200904_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200904_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_031719 - Docker push completed successfully.


20200904_031719 - All completed successfully
20200904_041701 - Starting Build.

Sending build context to Docker daemon  88.02MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_041701
20200904_041703 - Build completed successfully.


Already up to date.
[master 0066361] Automatic build 20200904_041701
 1 file changed, 63 insertions(+)
20200904_041712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200904_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_041720 - Docker push completed successfully.


20200904_041720 - All completed successfully
20200904_051701 - Starting Build.

Sending build context to Docker daemon  88.21MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_051701
20200904_051702 - Build completed successfully.


Already up to date.
[master 91ac5e6] Automatic build 20200904_051701
 1 file changed, 61 insertions(+)
20200904_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200904_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_051718 - Docker push completed successfully.


20200904_051718 - All completed successfully
20200904_061701 - Starting Build.

Sending build context to Docker daemon   88.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_061701
20200904_061701 - Build completed successfully.


Already up to date.
[master 4766421] Automatic build 20200904_061701
 1 file changed, 63 insertions(+)
20200904_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200904_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_061718 - Docker push completed successfully.


20200904_061718 - All completed successfully
20200904_071701 - Starting Build.

Sending build context to Docker daemon   88.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_071701
20200904_071702 - Build completed successfully.


Already up to date.
[master cc59336] Automatic build 20200904_071701
 1 file changed, 63 insertions(+)
20200904_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200904_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_071719 - Docker push completed successfully.


20200904_071719 - All completed successfully
20200904_081701 - Starting Build.

Sending build context to Docker daemon   88.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_081701
20200904_081702 - Build completed successfully.


Already up to date.
[master 7aee288] Automatic build 20200904_081701
 1 file changed, 62 insertions(+)
20200904_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200904_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_081721 - Docker push completed successfully.


20200904_081721 - All completed successfully
20200904_091701 - Starting Build.

Sending build context to Docker daemon  88.99MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_091701
20200904_091701 - Build completed successfully.


Already up to date.
[master af02151] Automatic build 20200904_091701
 1 file changed, 63 insertions(+)
20200904_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200904_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_091721 - Docker push completed successfully.


20200904_091721 - All completed successfully
20200904_101701 - Starting Build.

Sending build context to Docker daemon  89.19MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_101701
20200904_101701 - Build completed successfully.


Already up to date.
[master 0c98f55] Automatic build 20200904_101701
 1 file changed, 62 insertions(+)
20200904_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200904_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_101723 - Docker push completed successfully.


20200904_101723 - All completed successfully
20200904_111701 - Starting Build.

Sending build context to Docker daemon  89.38MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_111701
20200904_111701 - Build completed successfully.


Already up to date.
[master bb7685b] Automatic build 20200904_111701
 1 file changed, 62 insertions(+)
20200904_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200904_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_111720 - Docker push completed successfully.


20200904_111720 - All completed successfully
20200904_121701 - Starting Build.

Sending build context to Docker daemon  89.58MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_121701
20200904_121702 - Build completed successfully.


Already up to date.
[master caaf292] Automatic build 20200904_121701
 1 file changed, 63 insertions(+)
20200904_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200904_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_121722 - Docker push completed successfully.


20200904_121722 - All completed successfully
20200904_131701 - Starting Build.

Sending build context to Docker daemon  89.77MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_131701
20200904_131702 - Build completed successfully.


Already up to date.
[master 7b19880] Automatic build 20200904_131701
 1 file changed, 63 insertions(+)
20200904_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200904_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_131718 - Docker push completed successfully.


20200904_131718 - All completed successfully
20200904_141701 - Starting Build.

Sending build context to Docker daemon  89.97MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_141701
20200904_141702 - Build completed successfully.


Already up to date.
[master 736eeb3] Automatic build 20200904_141701
 1 file changed, 63 insertions(+)
20200904_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200904_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_141719 - Docker push completed successfully.


20200904_141719 - All completed successfully
20200904_151701 - Starting Build.

Sending build context to Docker daemon  90.16MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_151701
20200904_151702 - Build completed successfully.


Already up to date.
[master 8d01740] Automatic build 20200904_151701
 1 file changed, 63 insertions(+)
20200904_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
4aa65369d2be: Pushed
20200904_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_152625 - Docker push completed successfully.


20200904_152625 - All completed successfully
20200904_161701 - Starting Build.

Sending build context to Docker daemon  90.36MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_161701
20200904_161702 - Build completed successfully.


Already up to date.
[master 98079e6] Automatic build 20200904_161701
 1 file changed, 63 insertions(+)
20200904_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200904_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_161718 - Docker push completed successfully.


20200904_161718 - All completed successfully
20200904_171701 - Starting Build.

Sending build context to Docker daemon  90.56MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_171701
20200904_171701 - Build completed successfully.


Already up to date.
[master eb4b295] Automatic build 20200904_171701
 1 file changed, 63 insertions(+)
20200904_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200904_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_171719 - Docker push completed successfully.


20200904_171719 - All completed successfully
20200904_181701 - Starting Build.

Sending build context to Docker daemon  90.75MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_181701
20200904_181702 - Build completed successfully.


Already up to date.
[master b64a50e] Automatic build 20200904_181701
 1 file changed, 63 insertions(+)
20200904_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200904_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_181719 - Docker push completed successfully.


20200904_181719 - All completed successfully
20200904_191701 - Starting Build.

Sending build context to Docker daemon  90.95MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_191701
20200904_191701 - Build completed successfully.


Already up to date.
[master 9e76fe1] Automatic build 20200904_191701
 1 file changed, 63 insertions(+)
20200904_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200904_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_191717 - Docker push completed successfully.


20200904_191717 - All completed successfully
20200904_201701 - Starting Build.

Sending build context to Docker daemon  91.14MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_201701
20200904_201702 - Build completed successfully.


Already up to date.
[master 410c946] Automatic build 20200904_201701
 1 file changed, 63 insertions(+)
20200904_201712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200904_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_201721 - Docker push completed successfully.


20200904_201721 - All completed successfully
20200904_211701 - Starting Build.

Sending build context to Docker daemon  91.34MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_211701
20200904_211701 - Build completed successfully.


Already up to date.
[master 2565728] Automatic build 20200904_211701
 1 file changed, 63 insertions(+)
20200904_211710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200904_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_211718 - Docker push completed successfully.


20200904_211718 - All completed successfully
20200904_221701 - Starting Build.

Sending build context to Docker daemon  91.54MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_221701
20200904_221702 - Build completed successfully.


Already up to date.
[master 9f94549] Automatic build 20200904_221701
 1 file changed, 63 insertions(+)
20200904_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200904_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_221718 - Docker push completed successfully.


20200904_221718 - All completed successfully
20200904_231701 - Starting Build.

Sending build context to Docker daemon  91.73MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200904_231701
20200904_231702 - Build completed successfully.


Already up to date.
[master ff84df3] Automatic build 20200904_231701
 1 file changed, 63 insertions(+)
20200904_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200904_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200904_231719 - Docker push completed successfully.


20200904_231719 - All completed successfully
20200905_001701 - Starting Build.

Sending build context to Docker daemon  91.93MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_001701
20200905_001702 - Build completed successfully.


Already up to date.
[master fe62612] Automatic build 20200905_001701
 1 file changed, 63 insertions(+)
20200905_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200905_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_001720 - Docker push completed successfully.


20200905_001720 - All completed successfully
20200905_011701 - Starting Build.

Sending build context to Docker daemon  92.13MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_011701
20200905_011702 - Build completed successfully.


Already up to date.
[master 385826a] Automatic build 20200905_011701
 1 file changed, 63 insertions(+)
20200905_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200905_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_011718 - Docker push completed successfully.


20200905_011718 - All completed successfully
20200905_021701 - Starting Build.

Sending build context to Docker daemon  92.32MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_021701
20200905_021702 - Build completed successfully.


Already up to date.
[master 34e6f84] Automatic build 20200905_021701
 1 file changed, 63 insertions(+)
20200905_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200905_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_021718 - Docker push completed successfully.


20200905_021718 - All completed successfully
20200905_031701 - Starting Build.

Sending build context to Docker daemon  92.52MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_031701
20200905_031702 - Build completed successfully.


Already up to date.
[master 6a011fd] Automatic build 20200905_031701
 1 file changed, 63 insertions(+)
20200905_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200905_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_031718 - Docker push completed successfully.


20200905_031718 - All completed successfully
20200905_041701 - Starting Build.

Sending build context to Docker daemon  92.72MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_041701
20200905_041701 - Build completed successfully.


Already up to date.
[master f91ce97] Automatic build 20200905_041701
 1 file changed, 63 insertions(+)
20200905_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200905_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_041723 - Docker push completed successfully.


20200905_041723 - All completed successfully
20200905_051701 - Starting Build.

Sending build context to Docker daemon  92.92MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_051701
20200905_051702 - Build completed successfully.


Already up to date.
[master 452cda2] Automatic build 20200905_051701
 1 file changed, 63 insertions(+)
20200905_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_051719 - Docker push completed successfully.


20200905_051719 - All completed successfully
20200905_061701 - Starting Build.

Sending build context to Docker daemon  93.11MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_061701
20200905_061701 - Build completed successfully.


Already up to date.
[master 4e45f27] Automatic build 20200905_061701
 1 file changed, 62 insertions(+)
20200905_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200905_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_061719 - Docker push completed successfully.


20200905_061719 - All completed successfully
20200905_071701 - Starting Build.

Sending build context to Docker daemon  93.31MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_071701
20200905_071701 - Build completed successfully.


Already up to date.
[master b718776] Automatic build 20200905_071701
 1 file changed, 63 insertions(+)
20200905_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200905_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_071718 - Docker push completed successfully.


20200905_071718 - All completed successfully
20200905_081701 - Starting Build.

Sending build context to Docker daemon  93.51MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_081701
20200905_081702 - Build completed successfully.


Already up to date.
[master e093abf] Automatic build 20200905_081701
 1 file changed, 63 insertions(+)
20200905_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200905_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_081719 - Docker push completed successfully.


20200905_081719 - All completed successfully
20200905_091701 - Starting Build.

Sending build context to Docker daemon  93.71MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_091701
20200905_091702 - Build completed successfully.


Already up to date.
[master a1fd0dc] Automatic build 20200905_091701
 1 file changed, 63 insertions(+)
20200905_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200905_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_091719 - Docker push completed successfully.


20200905_091719 - All completed successfully
20200905_101701 - Starting Build.

Sending build context to Docker daemon   93.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_101701
20200905_101701 - Build completed successfully.


Already up to date.
[master 9a29b48] Automatic build 20200905_101701
 1 file changed, 63 insertions(+)
20200905_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200905_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_101722 - Docker push completed successfully.


20200905_101722 - All completed successfully
20200905_111701 - Starting Build.

Sending build context to Docker daemon   94.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_111701
20200905_111701 - Build completed successfully.


Already up to date.
[master b3eeb26] Automatic build 20200905_111701
 1 file changed, 63 insertions(+)
20200905_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_111719 - Docker push completed successfully.


20200905_111719 - All completed successfully
20200905_121701 - Starting Build.

Sending build context to Docker daemon   94.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_121701
20200905_121701 - Build completed successfully.


Already up to date.
[master 7b4f479] Automatic build 20200905_121701
 1 file changed, 63 insertions(+)
20200905_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_121720 - Docker push completed successfully.


20200905_121720 - All completed successfully
20200905_131701 - Starting Build.

Sending build context to Docker daemon   94.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_131701
20200905_131702 - Build completed successfully.


Already up to date.
[master f2d0774] Automatic build 20200905_131701
 1 file changed, 63 insertions(+)
20200905_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_131718 - Docker push completed successfully.


20200905_131718 - All completed successfully
20200905_141701 - Starting Build.

Sending build context to Docker daemon   94.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_141701
20200905_141702 - Build completed successfully.


Already up to date.
[master ecb9355] Automatic build 20200905_141701
 1 file changed, 63 insertions(+)
20200905_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200905_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_141719 - Docker push completed successfully.


20200905_141719 - All completed successfully
20200905_151701 - Starting Build.

Sending build context to Docker daemon  94.89MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_151701
20200905_151702 - Build completed successfully.


Already up to date.
[master 9f49ce2] Automatic build 20200905_151701
 1 file changed, 62 insertions(+)
20200905_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200905_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_151719 - Docker push completed successfully.


20200905_151719 - All completed successfully
20200905_161701 - Starting Build.

Sending build context to Docker daemon  95.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_161701
20200905_161701 - Build completed successfully.


Already up to date.
[master 4156458] Automatic build 20200905_161701
 1 file changed, 63 insertions(+)
20200905_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_161718 - Docker push completed successfully.


20200905_161718 - All completed successfully
20200905_171701 - Starting Build.

Sending build context to Docker daemon  95.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_171701
20200905_171701 - Build completed successfully.


Already up to date.
[master c94b779] Automatic build 20200905_171701
 1 file changed, 63 insertions(+)
20200905_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200905_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_171718 - Docker push completed successfully.


20200905_171718 - All completed successfully
20200905_181701 - Starting Build.

Sending build context to Docker daemon  95.49MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_181701
20200905_181702 - Build completed successfully.


Already up to date.
[master c1e91c3] Automatic build 20200905_181701
 1 file changed, 63 insertions(+)
20200905_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200905_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_181719 - Docker push completed successfully.


20200905_181719 - All completed successfully
20200905_191701 - Starting Build.

Sending build context to Docker daemon  95.69MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_191701
20200905_191702 - Build completed successfully.


Already up to date.
[master bf4ea82] Automatic build 20200905_191701
 1 file changed, 63 insertions(+)
20200905_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200905_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_191720 - Docker push completed successfully.


20200905_191720 - All completed successfully
20200905_201701 - Starting Build.

Sending build context to Docker daemon  95.89MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_201701
20200905_201702 - Build completed successfully.


Already up to date.
[master 2d84ae7] Automatic build 20200905_201701
 1 file changed, 63 insertions(+)
20200905_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_201721 - Docker push completed successfully.


20200905_201721 - All completed successfully
20200905_211701 - Starting Build.

Sending build context to Docker daemon  96.09MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_211701
20200905_211702 - Build completed successfully.


Already up to date.
[master bed6b1c] Automatic build 20200905_211701
 1 file changed, 63 insertions(+)
20200905_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_211720 - Docker push completed successfully.


20200905_211720 - All completed successfully
20200905_221701 - Starting Build.

Sending build context to Docker daemon  96.29MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_221701
20200905_221704 - Build completed successfully.


Already up to date.
[master f0b4c76] Automatic build 20200905_221701
 1 file changed, 63 insertions(+)
20200905_221712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200905_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_221720 - Docker push completed successfully.


20200905_221720 - All completed successfully
20200905_231701 - Starting Build.

Sending build context to Docker daemon  96.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200905_231701
20200905_231703 - Build completed successfully.


Already up to date.
[master 051f0f8] Automatic build 20200905_231701
 1 file changed, 63 insertions(+)
20200905_231712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200905_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200905_231723 - Docker push completed successfully.


20200905_231723 - All completed successfully
20200906_001701 - Starting Build.

Sending build context to Docker daemon  96.68MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_001701
20200906_001703 - Build completed successfully.


Already up to date.
[master 5b76308] Automatic build 20200906_001701
 1 file changed, 63 insertions(+)
20200906_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_001718 - Docker push completed successfully.


20200906_001718 - All completed successfully
20200906_011701 - Starting Build.

Sending build context to Docker daemon  96.88MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_011701
20200906_011703 - Build completed successfully.


Already up to date.
[master bd0bf56] Automatic build 20200906_011701
 1 file changed, 63 insertions(+)
20200906_011712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_011719 - Docker push completed successfully.


20200906_011719 - All completed successfully
20200906_021702 - Starting Build.

Sending build context to Docker daemon  97.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_021701
20200906_021704 - Build completed successfully.


Already up to date.
[master 32028d2] Automatic build 20200906_021701
 1 file changed, 63 insertions(+)
20200906_021712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_021720 - Docker push completed successfully.


20200906_021720 - All completed successfully
20200906_031701 - Starting Build.

Sending build context to Docker daemon  97.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_031701
20200906_031702 - Build completed successfully.


Already up to date.
[master 996b441] Automatic build 20200906_031701
 1 file changed, 63 insertions(+)
20200906_031709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_031716 - Docker push completed successfully.


20200906_031716 - All completed successfully
20200906_041701 - Starting Build.

Sending build context to Docker daemon  97.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_041701
20200906_041702 - Build completed successfully.


Already up to date.
[master e7d5854] Automatic build 20200906_041701
 1 file changed, 63 insertions(+)
20200906_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_041717 - Docker push completed successfully.


20200906_041717 - All completed successfully
20200906_051701 - Starting Build.

Sending build context to Docker daemon  97.68MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_051701
20200906_051701 - Build completed successfully.


Already up to date.
[master e7132d4] Automatic build 20200906_051701
 1 file changed, 63 insertions(+)
20200906_051709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_051717 - Docker push completed successfully.


20200906_051717 - All completed successfully
20200906_061701 - Starting Build.

Sending build context to Docker daemon  97.88MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_061701
20200906_061701 - Build completed successfully.


Already up to date.
[master 131f2ba] Automatic build 20200906_061701
 1 file changed, 63 insertions(+)
20200906_061713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200906_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_061722 - Docker push completed successfully.


20200906_061722 - All completed successfully
20200906_071701 - Starting Build.

Sending build context to Docker daemon  98.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_071701
20200906_071701 - Build completed successfully.


Already up to date.
[master e84d519] Automatic build 20200906_071701
 1 file changed, 63 insertions(+)
20200906_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_071718 - Docker push completed successfully.


20200906_071718 - All completed successfully
20200906_081701 - Starting Build.

Sending build context to Docker daemon  98.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_081701
20200906_081702 - Build completed successfully.


Already up to date.
[master 902186d] Automatic build 20200906_081701
 1 file changed, 63 insertions(+)
20200906_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_081718 - Docker push completed successfully.


20200906_081718 - All completed successfully
20200906_091701 - Starting Build.

Sending build context to Docker daemon  98.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_091701
20200906_091701 - Build completed successfully.


Already up to date.
[master 8c9280c] Automatic build 20200906_091701
 1 file changed, 62 insertions(+)
20200906_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_091718 - Docker push completed successfully.


20200906_091718 - All completed successfully
20200906_101701 - Starting Build.

Sending build context to Docker daemon  98.68MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_101701
20200906_101702 - Build completed successfully.


Already up to date.
[master 95130b2] Automatic build 20200906_101701
 1 file changed, 62 insertions(+)
20200906_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200906_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_101727 - Docker push completed successfully.


20200906_101727 - All completed successfully
20200906_111701 - Starting Build.

Sending build context to Docker daemon  98.88MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_111701
20200906_111701 - Build completed successfully.


Already up to date.
[master 5ec066e] Automatic build 20200906_111701
 1 file changed, 63 insertions(+)
20200906_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_111719 - Docker push completed successfully.


20200906_111719 - All completed successfully
20200906_121701 - Starting Build.

Sending build context to Docker daemon  99.08MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_121701
20200906_121702 - Build completed successfully.


Already up to date.
[master 930d6ae] Automatic build 20200906_121701
 1 file changed, 63 insertions(+)
20200906_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200906_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_121718 - Docker push completed successfully.


20200906_121718 - All completed successfully
20200906_131701 - Starting Build.

Sending build context to Docker daemon  99.28MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_131701
20200906_131702 - Build completed successfully.


Already up to date.
[master e7d4739] Automatic build 20200906_131701
 1 file changed, 63 insertions(+)
20200906_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200906_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_131719 - Docker push completed successfully.


20200906_131719 - All completed successfully
20200906_141701 - Starting Build.

Sending build context to Docker daemon  99.48MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_141701
20200906_141702 - Build completed successfully.


Already up to date.
[master 65073a6] Automatic build 20200906_141701
 1 file changed, 63 insertions(+)
20200906_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_141719 - Docker push completed successfully.


20200906_141719 - All completed successfully
20200906_171701 - Starting Build.

Sending build context to Docker daemon  99.68MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_171701
20200906_171702 - Build completed successfully.


Already up to date.
[master 98ee8e6] Automatic build 20200906_171701
 1 file changed, 63 insertions(+)
20200906_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200906_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_171720 - Docker push completed successfully.


20200906_171720 - All completed successfully
20200906_181701 - Starting Build.

Sending build context to Docker daemon  99.88MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_181701
20200906_181702 - Build completed successfully.


Already up to date.
[master 2e1714b] Automatic build 20200906_181701
 1 file changed, 62 insertions(+)
20200906_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_181720 - Docker push completed successfully.


20200906_181720 - All completed successfully
20200906_201701 - Starting Build.

Sending build context to Docker daemon  100.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_201701
20200906_201702 - Build completed successfully.


Already up to date.
[master 9d8a832] Automatic build 20200906_201701
 1 file changed, 63 insertions(+)
20200906_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200906_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_201720 - Docker push completed successfully.


20200906_201720 - All completed successfully
20200906_211701 - Starting Build.

Sending build context to Docker daemon  100.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_211701
20200906_211702 - Build completed successfully.


Already up to date.
[master e3b99c3] Automatic build 20200906_211701
 1 file changed, 63 insertions(+)
20200906_211710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200906_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_211717 - Docker push completed successfully.


20200906_211717 - All completed successfully
20200906_221701 - Starting Build.

Sending build context to Docker daemon  100.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_221701
20200906_221701 - Build completed successfully.


Already up to date.
[master 028ae63] Automatic build 20200906_221701
 1 file changed, 63 insertions(+)
20200906_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_221719 - Docker push completed successfully.


20200906_221719 - All completed successfully
20200906_231701 - Starting Build.

Sending build context to Docker daemon  100.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200906_231701
20200906_231701 - Build completed successfully.


Already up to date.
[master 4af58f2] Automatic build 20200906_231701
 1 file changed, 63 insertions(+)
20200906_231709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200906_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200906_231716 - Docker push completed successfully.


20200906_231716 - All completed successfully
20200907_001701 - Starting Build.

Sending build context to Docker daemon  100.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_001701
20200907_001702 - Build completed successfully.


Already up to date.
[master b146e79] Automatic build 20200907_001701
 1 file changed, 62 insertions(+)
20200907_001709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_001717 - Docker push completed successfully.


20200907_001717 - All completed successfully
20200907_011701 - Starting Build.

Sending build context to Docker daemon  101.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_011701
20200907_011702 - Build completed successfully.


Already up to date.
[master ead3a21] Automatic build 20200907_011701
 1 file changed, 63 insertions(+)
20200907_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_011718 - Docker push completed successfully.


20200907_011718 - All completed successfully
20200907_021701 - Starting Build.

Sending build context to Docker daemon  101.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_021701
20200907_021701 - Build completed successfully.


Already up to date.
[master df66acd] Automatic build 20200907_021701
 1 file changed, 63 insertions(+)
20200907_021709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_021716 - Docker push completed successfully.


20200907_021716 - All completed successfully
20200907_031701 - Starting Build.

Sending build context to Docker daemon  101.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_031701
20200907_031701 - Build completed successfully.


Already up to date.
[master f38e1d4] Automatic build 20200907_031701
 1 file changed, 63 insertions(+)
20200907_031709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_031716 - Docker push completed successfully.


20200907_031716 - All completed successfully
20200907_041701 - Starting Build.

Sending build context to Docker daemon  101.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_041701
20200907_041702 - Build completed successfully.


Already up to date.
[master dc45a17] Automatic build 20200907_041701
 1 file changed, 63 insertions(+)
20200907_041709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_041717 - Docker push completed successfully.


20200907_041717 - All completed successfully
20200907_051701 - Starting Build.

Sending build context to Docker daemon  101.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_051701
20200907_051701 - Build completed successfully.


Already up to date.
[master acff66b] Automatic build 20200907_051701
 1 file changed, 63 insertions(+)
20200907_051709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_051716 - Docker push completed successfully.


20200907_051716 - All completed successfully
20200907_061701 - Starting Build.

Sending build context to Docker daemon  102.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_061701
20200907_061701 - Build completed successfully.


Already up to date.
[master a718dee] Automatic build 20200907_061701
 1 file changed, 63 insertions(+)
20200907_061709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200907_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_061716 - Docker push completed successfully.


20200907_061716 - All completed successfully
20200907_071701 - Starting Build.

Sending build context to Docker daemon  102.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_071701
20200907_071701 - Build completed successfully.


Already up to date.
[master e6e40f2] Automatic build 20200907_071701
 1 file changed, 62 insertions(+)
20200907_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200907_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_071718 - Docker push completed successfully.


20200907_071718 - All completed successfully
20200907_081701 - Starting Build.

Sending build context to Docker daemon  102.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_081701
20200907_081702 - Build completed successfully.


Already up to date.
[master f3c7740] Automatic build 20200907_081701
 1 file changed, 63 insertions(+)
20200907_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200907_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_081718 - Docker push completed successfully.


20200907_081718 - All completed successfully
20200907_091701 - Starting Build.

Sending build context to Docker daemon  102.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_091701
20200907_091702 - Build completed successfully.


Already up to date.
[master 3529063] Automatic build 20200907_091701
 1 file changed, 62 insertions(+)
20200907_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200907_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_091719 - Docker push completed successfully.


20200907_091719 - All completed successfully
20200907_101701 - Starting Build.

Sending build context to Docker daemon  102.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_101701
20200907_101702 - Build completed successfully.


Already up to date.
[master 8bbef7b] Automatic build 20200907_101701
 1 file changed, 63 insertions(+)
20200907_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200907_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_101718 - Docker push completed successfully.


20200907_101718 - All completed successfully
20200907_111701 - Starting Build.

Sending build context to Docker daemon  103.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_111701
20200907_111701 - Build completed successfully.


Already up to date.
[master dec732e] Automatic build 20200907_111701
 1 file changed, 61 insertions(+)
20200907_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200907_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_111718 - Docker push completed successfully.


20200907_111718 - All completed successfully
20200907_121701 - Starting Build.

Sending build context to Docker daemon  103.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_121701
20200907_121702 - Build completed successfully.


Already up to date.
[master 2487474] Automatic build 20200907_121701
 1 file changed, 63 insertions(+)
20200907_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_121717 - Docker push completed successfully.


20200907_121717 - All completed successfully
20200907_131701 - Starting Build.

Sending build context to Docker daemon  103.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_131701
20200907_131702 - Build completed successfully.


Already up to date.
[master bcd0fa1] Automatic build 20200907_131701
 1 file changed, 62 insertions(+)
20200907_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200907_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_131718 - Docker push completed successfully.


20200907_131718 - All completed successfully
20200907_141701 - Starting Build.

Sending build context to Docker daemon  103.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_141701
20200907_141702 - Build completed successfully.


Already up to date.
[master a6e7faf] Automatic build 20200907_141701
 1 file changed, 63 insertions(+)
20200907_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200907_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_141717 - Docker push completed successfully.


20200907_141717 - All completed successfully
20200907_151701 - Starting Build.

Sending build context to Docker daemon  103.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_151701
20200907_151701 - Build completed successfully.


Already up to date.
[master a89585c] Automatic build 20200907_151701
 1 file changed, 63 insertions(+)
20200907_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200907_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_151718 - Docker push completed successfully.


20200907_151718 - All completed successfully
20200907_161701 - Starting Build.

Sending build context to Docker daemon  104.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_161701
20200907_161702 - Build completed successfully.


Already up to date.
[master 72eef3d] Automatic build 20200907_161701
 1 file changed, 63 insertions(+)
20200907_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_161718 - Docker push completed successfully.


20200907_161718 - All completed successfully
20200907_171701 - Starting Build.

Sending build context to Docker daemon  104.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_171701
20200907_171703 - Build completed successfully.


Already up to date.
[master 1f484a3] Automatic build 20200907_171701
 1 file changed, 63 insertions(+)
20200907_171712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_171720 - Docker push completed successfully.


20200907_171720 - All completed successfully
20200907_181701 - Starting Build.

Sending build context to Docker daemon  104.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_181701
20200907_181702 - Build completed successfully.


Already up to date.
[master 5c63914] Automatic build 20200907_181701
 1 file changed, 62 insertions(+)
20200907_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200907_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_181719 - Docker push completed successfully.


20200907_181719 - All completed successfully
20200907_191701 - Starting Build.

Sending build context to Docker daemon  104.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_191701
20200907_191702 - Build completed successfully.


Already up to date.
[master 694b431] Automatic build 20200907_191701
 1 file changed, 62 insertions(+)
20200907_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200907_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_191719 - Docker push completed successfully.


20200907_191719 - All completed successfully
20200907_201701 - Starting Build.

Sending build context to Docker daemon  104.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_201701
20200907_201702 - Build completed successfully.


Already up to date.
[master f91122d] Automatic build 20200907_201701
 1 file changed, 63 insertions(+)
20200907_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200907_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_201719 - Docker push completed successfully.


20200907_201719 - All completed successfully
20200907_211701 - Starting Build.

Sending build context to Docker daemon  105.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_211701
20200907_211702 - Build completed successfully.


Already up to date.
[master 987085d] Automatic build 20200907_211701
 1 file changed, 62 insertions(+)
20200907_211712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200907_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_211721 - Docker push completed successfully.


20200907_211721 - All completed successfully
20200907_221701 - Starting Build.

Sending build context to Docker daemon  105.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_221701
20200907_221703 - Build completed successfully.


Already up to date.
[master 9074e9f] Automatic build 20200907_221701
 1 file changed, 63 insertions(+)
20200907_221712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200907_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_221721 - Docker push completed successfully.


20200907_221721 - All completed successfully
20200907_231701 - Starting Build.

Sending build context to Docker daemon  105.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200907_231701
20200907_231702 - Build completed successfully.


Already up to date.
[master f8dba9a] Automatic build 20200907_231701
 1 file changed, 63 insertions(+)
20200907_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200907_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200907_231719 - Docker push completed successfully.


20200907_231719 - All completed successfully
20200908_001701 - Starting Build.

Sending build context to Docker daemon  105.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_001701
20200908_001702 - Build completed successfully.


Already up to date.
[master 984777e] Automatic build 20200908_001701
 1 file changed, 63 insertions(+)
20200908_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_001720 - Docker push completed successfully.


20200908_001720 - All completed successfully
20200908_011701 - Starting Build.

Sending build context to Docker daemon    106MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_011701
20200908_011703 - Build completed successfully.


Already up to date.
[master 6a39cce] Automatic build 20200908_011701
 1 file changed, 63 insertions(+)
20200908_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200908_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_011720 - Docker push completed successfully.


20200908_011720 - All completed successfully
20200908_021701 - Starting Build.

Sending build context to Docker daemon  106.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_021701
20200908_021701 - Build completed successfully.


Already up to date.
[master 9d8804b] Automatic build 20200908_021701
 1 file changed, 63 insertions(+)
20200908_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200908_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_021720 - Docker push completed successfully.


20200908_021720 - All completed successfully
20200908_031701 - Starting Build.

Sending build context to Docker daemon  106.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_031701
20200908_031702 - Build completed successfully.


Already up to date.
[master 96dd5e7] Automatic build 20200908_031701
 1 file changed, 63 insertions(+)
20200908_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200908_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_031720 - Docker push completed successfully.


20200908_031720 - All completed successfully
20200908_041701 - Starting Build.

Sending build context to Docker daemon  106.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_041701
20200908_041702 - Build completed successfully.


Already up to date.
[master e56030b] Automatic build 20200908_041701
 1 file changed, 63 insertions(+)
20200908_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200908_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_041719 - Docker push completed successfully.


20200908_041719 - All completed successfully
20200908_051701 - Starting Build.

Sending build context to Docker daemon  106.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_051701
20200908_051702 - Build completed successfully.


Already up to date.
[master 85120f2] Automatic build 20200908_051701
 1 file changed, 63 insertions(+)
20200908_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_051719 - Docker push completed successfully.


20200908_051719 - All completed successfully
20200908_061701 - Starting Build.

Sending build context to Docker daemon    107MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_061701
20200908_061702 - Build completed successfully.


Already up to date.
[master 795df1b] Automatic build 20200908_061701
 1 file changed, 63 insertions(+)
20200908_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200908_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_061719 - Docker push completed successfully.


20200908_061719 - All completed successfully
20200908_071701 - Starting Build.

Sending build context to Docker daemon  107.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_071701
20200908_071701 - Build completed successfully.


Already up to date.
[master 8bbc729] Automatic build 20200908_071701
 1 file changed, 63 insertions(+)
20200908_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200908_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_071719 - Docker push completed successfully.


20200908_071719 - All completed successfully
20200908_081701 - Starting Build.

Sending build context to Docker daemon  107.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_081701
20200908_081702 - Build completed successfully.


Already up to date.
[master 56ca8e2] Automatic build 20200908_081701
 1 file changed, 63 insertions(+)
20200908_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_081718 - Docker push completed successfully.


20200908_081718 - All completed successfully
20200908_091701 - Starting Build.

Sending build context to Docker daemon  107.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_091701
20200908_091701 - Build completed successfully.


Already up to date.
[master dacd65f] Automatic build 20200908_091701
 1 file changed, 63 insertions(+)
20200908_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_091718 - Docker push completed successfully.


20200908_091718 - All completed successfully
20200908_101701 - Starting Build.

Sending build context to Docker daemon  107.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_101701
20200908_101702 - Build completed successfully.


Already up to date.
[master fc97a26] Automatic build 20200908_101701
 1 file changed, 63 insertions(+)
20200908_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200908_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_101718 - Docker push completed successfully.


20200908_101718 - All completed successfully
20200908_111701 - Starting Build.

Sending build context to Docker daemon    108MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_111701
20200908_111702 - Build completed successfully.


Already up to date.
[master 8dd9a36] Automatic build 20200908_111701
 1 file changed, 63 insertions(+)
20200908_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200908_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_111719 - Docker push completed successfully.


20200908_111719 - All completed successfully
20200908_121701 - Starting Build.

Sending build context to Docker daemon  108.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_121701
20200908_121702 - Build completed successfully.


Already up to date.
[master 1034a5c] Automatic build 20200908_121701
 1 file changed, 63 insertions(+)
20200908_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200908_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_121719 - Docker push completed successfully.


20200908_121719 - All completed successfully
20200908_131701 - Starting Build.

Sending build context to Docker daemon  108.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_131701
20200908_131702 - Build completed successfully.


Already up to date.
[master ed3630b] Automatic build 20200908_131701
 1 file changed, 63 insertions(+)
20200908_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_131719 - Docker push completed successfully.


20200908_131719 - All completed successfully
20200908_141701 - Starting Build.

Sending build context to Docker daemon  108.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_141701
20200908_141702 - Build completed successfully.


Already up to date.
[master 8b2705d] Automatic build 20200908_141701
 1 file changed, 62 insertions(+)
20200908_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_141718 - Docker push completed successfully.


20200908_141718 - All completed successfully
20200908_151701 - Starting Build.

Sending build context to Docker daemon  108.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_151701
20200908_151702 - Build completed successfully.


Already up to date.
[master 21b3b2b] Automatic build 20200908_151701
 1 file changed, 63 insertions(+)
20200908_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200908_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_151718 - Docker push completed successfully.


20200908_151718 - All completed successfully
20200908_161701 - Starting Build.

Sending build context to Docker daemon    109MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_161701
20200908_161701 - Build completed successfully.


Already up to date.
[master af7815f] Automatic build 20200908_161701
 1 file changed, 63 insertions(+)
20200908_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200908_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_161718 - Docker push completed successfully.


20200908_161718 - All completed successfully
20200908_171701 - Starting Build.

Sending build context to Docker daemon  109.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_171701
20200908_171701 - Build completed successfully.


Already up to date.
[master 8a583ce] Automatic build 20200908_171701
 1 file changed, 63 insertions(+)
20200908_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_171718 - Docker push completed successfully.


20200908_171718 - All completed successfully
20200908_181701 - Starting Build.

Sending build context to Docker daemon  109.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_181701
20200908_181702 - Build completed successfully.


Already up to date.
[master 31b2fdc] Automatic build 20200908_181701
 1 file changed, 63 insertions(+)
20200908_181712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200908_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_181721 - Docker push completed successfully.


20200908_181721 - All completed successfully
20200908_191701 - Starting Build.

Sending build context to Docker daemon  109.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_191701
20200908_191701 - Build completed successfully.


Already up to date.
[master 8ee1ad8] Automatic build 20200908_191701
 1 file changed, 62 insertions(+)
20200908_191709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200908_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_191715 - Docker push completed successfully.


20200908_191715 - All completed successfully
20200908_201701 - Starting Build.

Sending build context to Docker daemon  109.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_201701
20200908_201703 - Build completed successfully.


Already up to date.
[master 6577241] Automatic build 20200908_201701
 1 file changed, 63 insertions(+)
20200908_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_201716 - Docker push completed successfully.


20200908_201716 - All completed successfully
20200908_211701 - Starting Build.

Sending build context to Docker daemon  110.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_211701
20200908_211703 - Build completed successfully.


Already up to date.
[master 175d3c3] Automatic build 20200908_211701
 1 file changed, 63 insertions(+)
20200908_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200908_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_211718 - Docker push completed successfully.


20200908_211718 - All completed successfully
20200908_221701 - Starting Build.

Sending build context to Docker daemon  110.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_221701
20200908_221702 - Build completed successfully.


Already up to date.
[master d4b3ee3] Automatic build 20200908_221701
 1 file changed, 63 insertions(+)
20200908_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200908_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_221718 - Docker push completed successfully.


20200908_221718 - All completed successfully
20200908_231701 - Starting Build.

Sending build context to Docker daemon  110.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200908_231701
20200908_231702 - Build completed successfully.


Already up to date.
[master 1868ad1] Automatic build 20200908_231701
 1 file changed, 63 insertions(+)
20200908_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200908_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200908_231718 - Docker push completed successfully.


20200908_231718 - All completed successfully
20200909_001701 - Starting Build.

Sending build context to Docker daemon  110.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_001701
20200909_001702 - Build completed successfully.


Already up to date.
[master ce4aff8] Automatic build 20200909_001701
 1 file changed, 63 insertions(+)
20200909_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200909_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_001718 - Docker push completed successfully.


20200909_001718 - All completed successfully
20200909_011701 - Starting Build.

Sending build context to Docker daemon  110.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_011701
20200909_011701 - Build completed successfully.


Already up to date.
[master cb2f2d6] Automatic build 20200909_011701
 1 file changed, 63 insertions(+)
20200909_011709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200909_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_011716 - Docker push completed successfully.


20200909_011716 - All completed successfully
20200909_021701 - Starting Build.

Sending build context to Docker daemon  111.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_021701
20200909_021701 - Build completed successfully.


Already up to date.
[master 4b8aeea] Automatic build 20200909_021701
 1 file changed, 63 insertions(+)
20200909_021709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200909_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_021716 - Docker push completed successfully.


20200909_021716 - All completed successfully
20200909_031701 - Starting Build.

Sending build context to Docker daemon  111.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_031701
20200909_031702 - Build completed successfully.


Already up to date.
[master 5301311] Automatic build 20200909_031701
 1 file changed, 63 insertions(+)
20200909_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200909_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_031719 - Docker push completed successfully.


20200909_031719 - All completed successfully
20200909_041701 - Starting Build.

Sending build context to Docker daemon  111.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_041701
20200909_041702 - Build completed successfully.


Already up to date.
[master c38ef49] Automatic build 20200909_041701
 1 file changed, 63 insertions(+)
20200909_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200909_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_041718 - Docker push completed successfully.


20200909_041718 - All completed successfully
20200909_051701 - Starting Build.

Sending build context to Docker daemon  111.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_051701
20200909_051701 - Build completed successfully.


Already up to date.
[master 03e3041] Automatic build 20200909_051701
 1 file changed, 63 insertions(+)
20200909_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200909_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_051718 - Docker push completed successfully.


20200909_051718 - All completed successfully
20200909_061701 - Starting Build.

Sending build context to Docker daemon  111.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_061701
20200909_061702 - Build completed successfully.


Already up to date.
[master 892d761] Automatic build 20200909_061701
 1 file changed, 63 insertions(+)
20200909_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200909_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_061719 - Docker push completed successfully.


20200909_061719 - All completed successfully
20200909_071701 - Starting Build.

Sending build context to Docker daemon  112.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_071701
20200909_071702 - Build completed successfully.


Already up to date.
[master 2e42d91] Automatic build 20200909_071701
 1 file changed, 63 insertions(+)
20200909_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200909_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_071718 - Docker push completed successfully.


20200909_071718 - All completed successfully
20200909_081701 - Starting Build.

Sending build context to Docker daemon  112.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_081701
20200909_081702 - Build completed successfully.


Already up to date.
[master e6ac16e] Automatic build 20200909_081701
 1 file changed, 63 insertions(+)
20200909_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200909_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_081718 - Docker push completed successfully.


20200909_081718 - All completed successfully
20200909_091701 - Starting Build.

Sending build context to Docker daemon  112.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_091701
20200909_091701 - Build completed successfully.


Already up to date.
[master e34ce6d] Automatic build 20200909_091701
 1 file changed, 63 insertions(+)
20200909_091709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200909_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_091718 - Docker push completed successfully.


20200909_091718 - All completed successfully
20200909_101701 - Starting Build.

Sending build context to Docker daemon  112.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_101701
20200909_101702 - Build completed successfully.


Already up to date.
[master aef55c4] Automatic build 20200909_101701
 1 file changed, 63 insertions(+)
20200909_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200909_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_101718 - Docker push completed successfully.


20200909_101718 - All completed successfully
20200909_111702 - Starting Build.

Sending build context to Docker daemon    113MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_111702
20200909_111702 - Build completed successfully.


Already up to date.
[master 3710026] Automatic build 20200909_111702
 1 file changed, 63 insertions(+)
20200909_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200909_111702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_111718 - Docker push completed successfully.


20200909_111718 - All completed successfully
20200909_121701 - Starting Build.

Sending build context to Docker daemon  113.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_121701
20200909_121702 - Build completed successfully.


Already up to date.
[master 518de25] Automatic build 20200909_121701
 1 file changed, 63 insertions(+)
20200909_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200909_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_121718 - Docker push completed successfully.


20200909_121718 - All completed successfully
20200909_131702 - Starting Build.

Sending build context to Docker daemon  113.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_131701
20200909_131702 - Build completed successfully.


Already up to date.
[master 5f020b9] Automatic build 20200909_131701
 1 file changed, 63 insertions(+)
20200909_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200909_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_131718 - Docker push completed successfully.


20200909_131718 - All completed successfully
20200909_141701 - Starting Build.

Sending build context to Docker daemon  113.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_141701
20200909_141701 - Build completed successfully.


Already up to date.
[master c4ebab2] Automatic build 20200909_141701
 1 file changed, 63 insertions(+)
20200909_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200909_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_141718 - Docker push completed successfully.


20200909_141718 - All completed successfully
20200909_151701 - Starting Build.

Sending build context to Docker daemon  113.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_151701
20200909_151701 - Build completed successfully.


Already up to date.
[master 61a7641] Automatic build 20200909_151701
 1 file changed, 63 insertions(+)
20200909_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200909_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_151717 - Docker push completed successfully.


20200909_151717 - All completed successfully
20200909_161701 - Starting Build.

Sending build context to Docker daemon    114MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_161701
20200909_161702 - Build completed successfully.


Already up to date.
[master 1094f32] Automatic build 20200909_161701
 1 file changed, 63 insertions(+)
20200909_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200909_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_161719 - Docker push completed successfully.


20200909_161719 - All completed successfully
20200909_171701 - Starting Build.

Sending build context to Docker daemon  114.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_171701
20200909_171702 - Build completed successfully.


Already up to date.
[master d74283d] Automatic build 20200909_171701
 1 file changed, 63 insertions(+)
20200909_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200909_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_171718 - Docker push completed successfully.


20200909_171718 - All completed successfully
20200909_181701 - Starting Build.

Sending build context to Docker daemon  114.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_181701
20200909_181702 - Build completed successfully.


Already up to date.
[master 0324110] Automatic build 20200909_181701
 1 file changed, 63 insertions(+)
20200909_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200909_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_181720 - Docker push completed successfully.


20200909_181720 - All completed successfully
20200909_191701 - Starting Build.

Sending build context to Docker daemon  114.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_191701
20200909_191702 - Build completed successfully.


Already up to date.
[master 6a90a93] Automatic build 20200909_191701
 1 file changed, 63 insertions(+)
20200909_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200909_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_191718 - Docker push completed successfully.


20200909_191718 - All completed successfully
20200909_201701 - Starting Build.

Sending build context to Docker daemon  114.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_201701
20200909_201701 - Build completed successfully.


Already up to date.
[master abc929e] Automatic build 20200909_201701
 1 file changed, 63 insertions(+)
20200909_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200909_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_201718 - Docker push completed successfully.


20200909_201718 - All completed successfully
20200909_211701 - Starting Build.

Sending build context to Docker daemon  115.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_211701
20200909_211701 - Build completed successfully.


Already up to date.
[master 3ad3f33] Automatic build 20200909_211701
 1 file changed, 62 insertions(+)
20200909_211709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200909_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_211718 - Docker push completed successfully.


20200909_211718 - All completed successfully
20200909_221701 - Starting Build.

Sending build context to Docker daemon  115.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_221701
20200909_221702 - Build completed successfully.


Already up to date.
[master e91d8bd] Automatic build 20200909_221701
 1 file changed, 63 insertions(+)
20200909_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200909_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_221718 - Docker push completed successfully.


20200909_221718 - All completed successfully
20200909_231701 - Starting Build.

Sending build context to Docker daemon  115.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200909_231701
20200909_231703 - Build completed successfully.


Already up to date.
[master 01d7638] Automatic build 20200909_231701
 1 file changed, 62 insertions(+)
20200909_231712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200909_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200909_231720 - Docker push completed successfully.


20200909_231720 - All completed successfully
20200910_001701 - Starting Build.

Sending build context to Docker daemon  115.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_001701
20200910_001703 - Build completed successfully.


Already up to date.
[master 3a5a10e] Automatic build 20200910_001701
 1 file changed, 63 insertions(+)
20200910_001712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200910_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_001720 - Docker push completed successfully.


20200910_001720 - All completed successfully
20200910_011702 - Starting Build.

Sending build context to Docker daemon  115.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_011702
20200910_011703 - Build completed successfully.


Already up to date.
[master 39fe65a] Automatic build 20200910_011702
 1 file changed, 63 insertions(+)
20200910_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200910_011702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_011719 - Docker push completed successfully.


20200910_011719 - All completed successfully
20200910_021701 - Starting Build.

Sending build context to Docker daemon  116.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_021701
20200910_021702 - Build completed successfully.


Already up to date.
[master 3032006] Automatic build 20200910_021701
 1 file changed, 62 insertions(+)
20200910_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200910_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_021718 - Docker push completed successfully.


20200910_021718 - All completed successfully
20200910_031701 - Starting Build.

Sending build context to Docker daemon  116.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_031701
20200910_031702 - Build completed successfully.


Already up to date.
[master 48ef556] Automatic build 20200910_031701
 1 file changed, 63 insertions(+)
20200910_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200910_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_031718 - Docker push completed successfully.


20200910_031718 - All completed successfully
20200910_041701 - Starting Build.

Sending build context to Docker daemon  116.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_041701
20200910_041702 - Build completed successfully.


Already up to date.
[master bf744a2] Automatic build 20200910_041701
 1 file changed, 63 insertions(+)
20200910_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200910_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_041718 - Docker push completed successfully.


20200910_041718 - All completed successfully
20200910_051701 - Starting Build.

Sending build context to Docker daemon  116.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_051701
20200910_051701 - Build completed successfully.


Already up to date.
[master 15f8adf] Automatic build 20200910_051701
 1 file changed, 63 insertions(+)
20200910_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200910_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_051718 - Docker push completed successfully.


20200910_051718 - All completed successfully
20200910_061701 - Starting Build.

Sending build context to Docker daemon  116.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_061701
20200910_061702 - Build completed successfully.


Already up to date.
[master 7928b38] Automatic build 20200910_061701
 1 file changed, 63 insertions(+)
20200910_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200910_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_061718 - Docker push completed successfully.


20200910_061718 - All completed successfully
20200910_071701 - Starting Build.

Sending build context to Docker daemon  117.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_071701
20200910_071702 - Build completed successfully.


Already up to date.
[master f57f491] Automatic build 20200910_071701
 1 file changed, 63 insertions(+)
20200910_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200910_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_071718 - Docker push completed successfully.


20200910_071718 - All completed successfully
20200910_081701 - Starting Build.

Sending build context to Docker daemon  117.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_081701
20200910_081702 - Build completed successfully.


Already up to date.
[master 4d29fb4] Automatic build 20200910_081701
 1 file changed, 63 insertions(+)
20200910_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200910_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_081718 - Docker push completed successfully.


20200910_081718 - All completed successfully
20200910_091701 - Starting Build.

Sending build context to Docker daemon  117.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_091701
20200910_091702 - Build completed successfully.


Already up to date.
[master a5ccf6a] Automatic build 20200910_091701
 1 file changed, 63 insertions(+)
20200910_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200910_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_091718 - Docker push completed successfully.


20200910_091718 - All completed successfully
20200910_101701 - Starting Build.

Sending build context to Docker daemon  117.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_101701
20200910_101702 - Build completed successfully.


Already up to date.
[master b6f689e] Automatic build 20200910_101701
 1 file changed, 63 insertions(+)
20200910_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200910_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_101719 - Docker push completed successfully.


20200910_101719 - All completed successfully
20200910_111701 - Starting Build.

Sending build context to Docker daemon    118MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_111701
20200910_111702 - Build completed successfully.


Already up to date.
[master 09ce20c] Automatic build 20200910_111701
 1 file changed, 63 insertions(+)
20200910_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
20200910_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_111723 - Docker push completed successfully.


20200910_111723 - All completed successfully
20200910_121701 - Starting Build.

Sending build context to Docker daemon  118.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_121701
20200910_121702 - Build completed successfully.


Already up to date.
[master 3e63cae] Automatic build 20200910_121701
 1 file changed, 62 insertions(+)
20200910_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
20200910_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_121719 - Docker push completed successfully.


20200910_121719 - All completed successfully
20200910_131701 - Starting Build.

Sending build context to Docker daemon  118.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_131701
20200910_131701 - Build completed successfully.


Already up to date.
[master 7e3f1fc] Automatic build 20200910_131701
 1 file changed, 62 insertions(+)
20200910_131709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200910_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_131717 - Docker push completed successfully.


20200910_131717 - All completed successfully
20200910_141701 - Starting Build.

Sending build context to Docker daemon  118.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_141701
20200910_141701 - Build completed successfully.


Already up to date.
[master 10f369e] Automatic build 20200910_141701
 1 file changed, 63 insertions(+)
20200910_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200910_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_141718 - Docker push completed successfully.


20200910_141718 - All completed successfully
20200910_151701 - Starting Build.

Sending build context to Docker daemon  118.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_151701
20200910_151702 - Build completed successfully.


Already up to date.
[master e650edd] Automatic build 20200910_151701
 1 file changed, 63 insertions(+)
20200910_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200910_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_151717 - Docker push completed successfully.


20200910_151717 - All completed successfully
20200910_161701 - Starting Build.

Sending build context to Docker daemon    119MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_161701
20200910_161702 - Build completed successfully.


Already up to date.
[master e813c5a] Automatic build 20200910_161701
 1 file changed, 63 insertions(+)
20200910_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200910_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_161719 - Docker push completed successfully.


20200910_161719 - All completed successfully
20200910_171701 - Starting Build.

Sending build context to Docker daemon  119.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_171701
20200910_171702 - Build completed successfully.


Already up to date.
[master 7a133bc] Automatic build 20200910_171701
 1 file changed, 63 insertions(+)
20200910_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200910_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_171719 - Docker push completed successfully.


20200910_171719 - All completed successfully
20200910_181701 - Starting Build.

Sending build context to Docker daemon  119.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_181701
20200910_181701 - Build completed successfully.


Already up to date.
[master d4216d1] Automatic build 20200910_181701
 1 file changed, 63 insertions(+)
20200910_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200910_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_181719 - Docker push completed successfully.


20200910_181719 - All completed successfully
20200910_191701 - Starting Build.

Sending build context to Docker daemon  119.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_191701
20200910_191701 - Build completed successfully.


Already up to date.
[master 4487a9c] Automatic build 20200910_191701
 1 file changed, 63 insertions(+)
20200910_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200910_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_191718 - Docker push completed successfully.


20200910_191718 - All completed successfully
20200910_201701 - Starting Build.

Sending build context to Docker daemon  119.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_201701
20200910_201701 - Build completed successfully.


Already up to date.
[master 3742366] Automatic build 20200910_201701
 1 file changed, 63 insertions(+)
20200910_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200910_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_201718 - Docker push completed successfully.


20200910_201718 - All completed successfully
20200910_211701 - Starting Build.

Sending build context to Docker daemon  120.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_211701
20200910_211703 - Build completed successfully.


Already up to date.
[master dcf868d] Automatic build 20200910_211701
 1 file changed, 63 insertions(+)
20200910_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200910_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_211719 - Docker push completed successfully.


20200910_211719 - All completed successfully
20200910_221701 - Starting Build.

Sending build context to Docker daemon  120.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_221701
20200910_221701 - Build completed successfully.


Already up to date.
[master 6a7e247] Automatic build 20200910_221701
 1 file changed, 63 insertions(+)
20200910_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200910_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_221719 - Docker push completed successfully.


20200910_221719 - All completed successfully
20200910_231701 - Starting Build.

Sending build context to Docker daemon  120.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200910_231701
20200910_231702 - Build completed successfully.


Already up to date.
[master 0572c60] Automatic build 20200910_231701
 1 file changed, 63 insertions(+)
20200910_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200910_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200910_231718 - Docker push completed successfully.


20200910_231718 - All completed successfully
20200911_001701 - Starting Build.

Sending build context to Docker daemon  120.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_001701
20200911_001702 - Build completed successfully.


Already up to date.
[master 470c5c0] Automatic build 20200911_001701
 1 file changed, 62 insertions(+)
20200911_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200911_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_001720 - Docker push completed successfully.


20200911_001720 - All completed successfully
20200911_011701 - Starting Build.

Sending build context to Docker daemon  120.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_011701
20200911_011702 - Build completed successfully.


Already up to date.
[master 494ca6b] Automatic build 20200911_011701
 1 file changed, 62 insertions(+)
20200911_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200911_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_011719 - Docker push completed successfully.


20200911_011719 - All completed successfully
20200911_021701 - Starting Build.

Sending build context to Docker daemon  121.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_021701
20200911_021702 - Build completed successfully.


Already up to date.
[master ad69379] Automatic build 20200911_021701
 1 file changed, 62 insertions(+)
20200911_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200911_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_021719 - Docker push completed successfully.


20200911_021719 - All completed successfully
20200911_031701 - Starting Build.

Sending build context to Docker daemon  121.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_031701
20200911_031701 - Build completed successfully.


Already up to date.
[master e1dcbf5] Automatic build 20200911_031701
 1 file changed, 62 insertions(+)
20200911_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200911_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_031718 - Docker push completed successfully.


20200911_031718 - All completed successfully
20200911_041701 - Starting Build.

Sending build context to Docker daemon  121.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_041701
20200911_041702 - Build completed successfully.


Already up to date.
[master 11648fc] Automatic build 20200911_041701
 1 file changed, 63 insertions(+)
20200911_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200911_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_041719 - Docker push completed successfully.


20200911_041719 - All completed successfully
20200911_051701 - Starting Build.

Sending build context to Docker daemon  121.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_051701
20200911_051701 - Build completed successfully.


Already up to date.
[master d459504] Automatic build 20200911_051701
 1 file changed, 61 insertions(+)
20200911_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200911_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_051719 - Docker push completed successfully.


20200911_051719 - All completed successfully
20200911_061701 - Starting Build.

Sending build context to Docker daemon    122MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_061701
20200911_061701 - Build completed successfully.


Already up to date.
[master 66199dd] Automatic build 20200911_061701
 1 file changed, 61 insertions(+)
20200911_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200911_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_061718 - Docker push completed successfully.


20200911_061718 - All completed successfully
20200911_071701 - Starting Build.

Sending build context to Docker daemon  122.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_071701
20200911_071701 - Build completed successfully.


Already up to date.
[master ebcf7c5] Automatic build 20200911_071701
 1 file changed, 63 insertions(+)
20200911_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200911_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_071718 - Docker push completed successfully.


20200911_071718 - All completed successfully
20200911_081701 - Starting Build.

Sending build context to Docker daemon  122.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_081701
20200911_081702 - Build completed successfully.


Already up to date.
[master 557615a] Automatic build 20200911_081701
 1 file changed, 63 insertions(+)
20200911_081712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200911_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_081723 - Docker push completed successfully.


20200911_081723 - All completed successfully
20200911_091701 - Starting Build.

Sending build context to Docker daemon  122.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_091701
20200911_091702 - Build completed successfully.


Already up to date.
[master cfac351] Automatic build 20200911_091701
 1 file changed, 63 insertions(+)
20200911_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200911_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_091719 - Docker push completed successfully.


20200911_091719 - All completed successfully
20200911_101701 - Starting Build.

Sending build context to Docker daemon  122.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_101701
20200911_101702 - Build completed successfully.


Already up to date.
[master 6ff13af] Automatic build 20200911_101701
 1 file changed, 63 insertions(+)
20200911_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200911_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_101719 - Docker push completed successfully.


20200911_101719 - All completed successfully
20200911_111701 - Starting Build.

Sending build context to Docker daemon  123.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_111701
20200911_111702 - Build completed successfully.


Already up to date.
[master e96aaa2] Automatic build 20200911_111701
 1 file changed, 63 insertions(+)
20200911_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200911_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_111719 - Docker push completed successfully.


20200911_111719 - All completed successfully
20200911_121701 - Starting Build.

Sending build context to Docker daemon  123.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_121701
20200911_121702 - Build completed successfully.


Already up to date.
[master 149802d] Automatic build 20200911_121701
 1 file changed, 62 insertions(+)
20200911_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200911_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_121718 - Docker push completed successfully.


20200911_121718 - All completed successfully
20200911_131701 - Starting Build.

Sending build context to Docker daemon  123.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_131701
20200911_131703 - Build completed successfully.


Already up to date.
[master 02ee67a] Automatic build 20200911_131701
 1 file changed, 62 insertions(+)
20200911_131712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200911_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_131720 - Docker push completed successfully.


20200911_131720 - All completed successfully
20200911_141701 - Starting Build.

Sending build context to Docker daemon  123.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_141701
20200911_141703 - Build completed successfully.


Already up to date.
[master 4c3338d] Automatic build 20200911_141701
 1 file changed, 62 insertions(+)
20200911_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200911_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_141719 - Docker push completed successfully.


20200911_141719 - All completed successfully
20200911_151701 - Starting Build.

Sending build context to Docker daemon  123.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_151701
20200911_151703 - Build completed successfully.


Already up to date.
[master 6d062d9] Automatic build 20200911_151701
 1 file changed, 63 insertions(+)
20200911_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200911_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_151720 - Docker push completed successfully.


20200911_151720 - All completed successfully
20200911_161701 - Starting Build.

Sending build context to Docker daemon  124.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_161701
20200911_161702 - Build completed successfully.


Already up to date.
[master 851a800] Automatic build 20200911_161701
 1 file changed, 63 insertions(+)
20200911_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200911_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_161719 - Docker push completed successfully.


20200911_161719 - All completed successfully
20200911_171701 - Starting Build.

Sending build context to Docker daemon  124.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_171701
20200911_171702 - Build completed successfully.


Already up to date.
[master 2970da5] Automatic build 20200911_171701
 1 file changed, 62 insertions(+)
20200911_171712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200911_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_171722 - Docker push completed successfully.


20200911_171722 - All completed successfully
20200911_181701 - Starting Build.

Sending build context to Docker daemon  124.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_181701
20200911_181703 - Build completed successfully.


Already up to date.
[master f608d8d] Automatic build 20200911_181701
 1 file changed, 63 insertions(+)
20200911_181712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200911_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_181721 - Docker push completed successfully.


20200911_181721 - All completed successfully
20200911_191701 - Starting Build.

Sending build context to Docker daemon  124.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_191701
20200911_191701 - Build completed successfully.


Already up to date.
[master 92caed5] Automatic build 20200911_191701
 1 file changed, 63 insertions(+)
20200911_191710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
20200911_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_191718 - Docker push completed successfully.


20200911_191718 - All completed successfully
20200911_201701 - Starting Build.

Sending build context to Docker daemon    125MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_201701
20200911_201701 - Build completed successfully.


Already up to date.
[master a04d6bf] Automatic build 20200911_201701
 1 file changed, 63 insertions(+)
20200911_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200911_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_201719 - Docker push completed successfully.


20200911_201719 - All completed successfully
20200911_211701 - Starting Build.

Sending build context to Docker daemon  125.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_211701
20200911_211702 - Build completed successfully.


20200911_211702 - git
[master 0861465] Automatic build 20200911_211701
 1 file changed, 63 insertions(+)
20200911_211702 - git
20200911_211702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200911_211702 - Docker push FAILED!!


20200911_221701 - Starting Build.

Sending build context to Docker daemon  125.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_221701
20200911_221702 - Build completed successfully.


Already up to date.
[master 66e18a0] Automatic build 20200911_221701
 1 file changed, 43 insertions(+)
20200911_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200911_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_221720 - Docker push completed successfully.


20200911_221720 - All completed successfully
20200911_231701 - Starting Build.

Sending build context to Docker daemon  125.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200911_231701
20200911_231702 - Build completed successfully.


Already up to date.
[master 09aa15e] Automatic build 20200911_231701
 1 file changed, 63 insertions(+)
20200911_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200911_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200911_231719 - Docker push completed successfully.


20200911_231719 - All completed successfully
20200912_001701 - Starting Build.

Sending build context to Docker daemon  125.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_001701
20200912_001702 - Build completed successfully.


Already up to date.
[master 491d149] Automatic build 20200912_001701
 1 file changed, 63 insertions(+)
20200912_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_001719 - Docker push completed successfully.


20200912_001719 - All completed successfully
20200912_011701 - Starting Build.

Sending build context to Docker daemon  126.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_011701
20200912_011703 - Build completed successfully.


Already up to date.
[master 7f35d9b] Automatic build 20200912_011701
 1 file changed, 63 insertions(+)
20200912_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200912_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_011719 - Docker push completed successfully.


20200912_011719 - All completed successfully
20200912_021701 - Starting Build.

Sending build context to Docker daemon  126.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_021701
20200912_021702 - Build completed successfully.


Already up to date.
[master 4fd78b6] Automatic build 20200912_021701
 1 file changed, 63 insertions(+)
20200912_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_021718 - Docker push completed successfully.


20200912_021718 - All completed successfully
20200912_031701 - Starting Build.

Sending build context to Docker daemon  126.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_031701
20200912_031702 - Build completed successfully.


Already up to date.
[master 6a41a52] Automatic build 20200912_031701
 1 file changed, 63 insertions(+)
20200912_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200912_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_031718 - Docker push completed successfully.


20200912_031718 - All completed successfully
20200912_041701 - Starting Build.

Sending build context to Docker daemon  126.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_041701
20200912_041702 - Build completed successfully.


Already up to date.
[master 3b4d530] Automatic build 20200912_041701
 1 file changed, 63 insertions(+)
20200912_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200912_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_041719 - Docker push completed successfully.


20200912_041719 - All completed successfully
20200912_051701 - Starting Build.

Sending build context to Docker daemon  126.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_051701
20200912_051702 - Build completed successfully.


Already up to date.
[master 5252799] Automatic build 20200912_051701
 1 file changed, 62 insertions(+)
20200912_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200912_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_051718 - Docker push completed successfully.


20200912_051718 - All completed successfully
20200912_061701 - Starting Build.

Sending build context to Docker daemon  127.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_061701
20200912_061702 - Build completed successfully.


Already up to date.
[master 5cdbe0d] Automatic build 20200912_061701
 1 file changed, 63 insertions(+)
20200912_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_061719 - Docker push completed successfully.


20200912_061719 - All completed successfully
20200912_071701 - Starting Build.

Sending build context to Docker daemon  127.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_071701
20200912_071701 - Build completed successfully.


Already up to date.
[master 885bfd0] Automatic build 20200912_071701
 1 file changed, 63 insertions(+)
20200912_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200912_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_071717 - Docker push completed successfully.


20200912_071717 - All completed successfully
20200912_081701 - Starting Build.

Sending build context to Docker daemon  127.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_081701
20200912_081701 - Build completed successfully.


Already up to date.
[master ff42416] Automatic build 20200912_081701
 1 file changed, 63 insertions(+)
20200912_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_081717 - Docker push completed successfully.


20200912_081717 - All completed successfully
20200912_091701 - Starting Build.

Sending build context to Docker daemon  127.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_091701
20200912_091702 - Build completed successfully.


Already up to date.
[master 7946843] Automatic build 20200912_091701
 1 file changed, 63 insertions(+)
20200912_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200912_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_091718 - Docker push completed successfully.


20200912_091718 - All completed successfully
20200912_101701 - Starting Build.

Sending build context to Docker daemon    128MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_101701
20200912_101701 - Build completed successfully.


Already up to date.
[master 0599cdf] Automatic build 20200912_101701
 1 file changed, 63 insertions(+)
20200912_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200912_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_101718 - Docker push completed successfully.


20200912_101718 - All completed successfully
20200912_111701 - Starting Build.

Sending build context to Docker daemon  128.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_111701
20200912_111702 - Build completed successfully.


Already up to date.
[master d9e8df6] Automatic build 20200912_111701
 1 file changed, 63 insertions(+)
20200912_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200912_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_111719 - Docker push completed successfully.


20200912_111719 - All completed successfully
20200912_121701 - Starting Build.

Sending build context to Docker daemon  128.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_121701
20200912_121701 - Build completed successfully.


Already up to date.
[master f92c374] Automatic build 20200912_121701
 1 file changed, 63 insertions(+)
20200912_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200912_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_121717 - Docker push completed successfully.


20200912_121717 - All completed successfully
20200912_131701 - Starting Build.

Sending build context to Docker daemon  128.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_131701
20200912_131702 - Build completed successfully.


Already up to date.
[master caafd4d] Automatic build 20200912_131701
 1 file changed, 63 insertions(+)
20200912_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200912_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_131719 - Docker push completed successfully.


20200912_131719 - All completed successfully
20200912_141701 - Starting Build.

Sending build context to Docker daemon  128.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_141701
20200912_141702 - Build completed successfully.


Already up to date.
[master 50ef526] Automatic build 20200912_141701
 1 file changed, 63 insertions(+)
20200912_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200912_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_141718 - Docker push completed successfully.


20200912_141718 - All completed successfully
20200912_151701 - Starting Build.

Sending build context to Docker daemon  129.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_151701
20200912_151701 - Build completed successfully.


Already up to date.
[master 3da4549] Automatic build 20200912_151701
 1 file changed, 62 insertions(+)
20200912_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_151718 - Docker push completed successfully.


20200912_151718 - All completed successfully
20200912_161701 - Starting Build.

Sending build context to Docker daemon  129.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_161701
20200912_161701 - Build completed successfully.


Already up to date.
[master ce1a56d] Automatic build 20200912_161701
 1 file changed, 63 insertions(+)
20200912_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200912_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_161717 - Docker push completed successfully.


20200912_161717 - All completed successfully
20200912_171701 - Starting Build.

Sending build context to Docker daemon  129.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_171701
20200912_171702 - Build completed successfully.


Already up to date.
[master 2ac1ec4] Automatic build 20200912_171701
 1 file changed, 63 insertions(+)
20200912_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_171718 - Docker push completed successfully.


20200912_171718 - All completed successfully
20200912_181701 - Starting Build.

Sending build context to Docker daemon  129.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_181701
20200912_181702 - Build completed successfully.


Already up to date.
[master 46ddf43] Automatic build 20200912_181701
 1 file changed, 63 insertions(+)
20200912_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200912_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_181719 - Docker push completed successfully.


20200912_181719 - All completed successfully
20200912_191702 - Starting Build.

Sending build context to Docker daemon  129.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_191702
20200912_191704 - Build completed successfully.


Already up to date.
[master ad7a9b1] Automatic build 20200912_191702
 1 file changed, 63 insertions(+)
20200912_191713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200912_191702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_191720 - Docker push completed successfully.


20200912_191720 - All completed successfully
20200912_201701 - Starting Build.

Sending build context to Docker daemon  130.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_201701
20200912_201704 - Build completed successfully.


Already up to date.
[master 03b9150] Automatic build 20200912_201701
 1 file changed, 63 insertions(+)
20200912_201712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200912_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_201719 - Docker push completed successfully.


20200912_201719 - All completed successfully
20200912_211701 - Starting Build.

Sending build context to Docker daemon  130.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_211701
20200912_211703 - Build completed successfully.


Already up to date.
[master 8440587] Automatic build 20200912_211701
 1 file changed, 63 insertions(+)
20200912_211712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_211720 - Docker push completed successfully.


20200912_211720 - All completed successfully
20200912_221701 - Starting Build.

Sending build context to Docker daemon  130.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_221701
20200912_221703 - Build completed successfully.


Already up to date.
[master 529811b] Automatic build 20200912_221701
 1 file changed, 63 insertions(+)
20200912_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200912_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_221719 - Docker push completed successfully.


20200912_221719 - All completed successfully
20200912_231701 - Starting Build.

Sending build context to Docker daemon  130.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200912_231701
20200912_231703 - Build completed successfully.


Already up to date.
[master 2fe746b] Automatic build 20200912_231701
 1 file changed, 63 insertions(+)
20200912_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200912_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200912_231718 - Docker push completed successfully.


20200912_231718 - All completed successfully
20200913_001701 - Starting Build.

Sending build context to Docker daemon    131MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200913_001701
20200913_001702 - Build completed successfully.


Already up to date.
[master f7da33f] Automatic build 20200913_001701
 1 file changed, 63 insertions(+)
20200913_001712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200913_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200913_001722 - Docker push completed successfully.


20200913_001722 - All completed successfully
20200913_011701 - Starting Build.

Sending build context to Docker daemon  131.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200913_011701
20200913_011702 - Build completed successfully.


Already up to date.
[master 5407c2a] Automatic build 20200913_011701
 1 file changed, 63 insertions(+)
20200913_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200913_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200913_011718 - Docker push completed successfully.


20200913_011718 - All completed successfully
20200913_021701 - Starting Build.

Sending build context to Docker daemon  131.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200913_021701
20200913_021701 - Build completed successfully.


Already up to date.
[master 75171a9] Automatic build 20200913_021701
 1 file changed, 63 insertions(+)
20200913_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200913_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200913_021718 - Docker push completed successfully.


20200913_021718 - All completed successfully
20200913_031701 - Starting Build.

Sending build context to Docker daemon  131.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200913_031701
20200913_031703 - Build completed successfully.


Already up to date.
[master 488bf00] Automatic build 20200913_031701
 1 file changed, 63 insertions(+)
20200913_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200913_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200913_031718 - Docker push completed successfully.


20200913_031718 - All completed successfully
20200914_091701 - Starting Build.

Sending build context to Docker daemon  131.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_091701
20200914_091703 - Build completed successfully.


Already up to date.
[master 89ccfa9] Automatic build 20200914_091701
 1 file changed, 63 insertions(+)
20200914_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200914_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_091723 - Docker push completed successfully.


20200914_091723 - All completed successfully
20200914_101701 - Starting Build.

Sending build context to Docker daemon  132.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_101701
20200914_101701 - Build completed successfully.


Already up to date.
[master fb7f44a] Automatic build 20200914_101701
 1 file changed, 63 insertions(+)
20200914_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200914_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_101718 - Docker push completed successfully.


20200914_101718 - All completed successfully
20200914_111701 - Starting Build.

Sending build context to Docker daemon  132.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_111701
20200914_111701 - Build completed successfully.


Already up to date.
[master b9a1a77] Automatic build 20200914_111701
 1 file changed, 63 insertions(+)
20200914_111709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200914_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_111717 - Docker push completed successfully.


20200914_111717 - All completed successfully
20200914_121701 - Starting Build.

Sending build context to Docker daemon  132.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_121701
20200914_121701 - Build completed successfully.


Already up to date.
[master 658a2d1] Automatic build 20200914_121701
 1 file changed, 63 insertions(+)
20200914_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200914_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_121718 - Docker push completed successfully.


20200914_121718 - All completed successfully
20200914_131701 - Starting Build.

Sending build context to Docker daemon  132.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_131701
20200914_131703 - Build completed successfully.


Already up to date.
[master 0976089] Automatic build 20200914_131701
 1 file changed, 63 insertions(+)
20200914_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200914_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_131719 - Docker push completed successfully.


20200914_131719 - All completed successfully
20200914_141701 - Starting Build.

Sending build context to Docker daemon    133MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_141701
20200914_141701 - Build completed successfully.


Already up to date.
[master 317f1ec] Automatic build 20200914_141701
 1 file changed, 63 insertions(+)
20200914_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200914_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_141718 - Docker push completed successfully.


20200914_141718 - All completed successfully
20200914_151701 - Starting Build.

Sending build context to Docker daemon  133.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_151701
20200914_151702 - Build completed successfully.


Already up to date.
[master f74d98f] Automatic build 20200914_151701
 1 file changed, 63 insertions(+)
20200914_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200914_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_151718 - Docker push completed successfully.


20200914_151718 - All completed successfully
20200914_161701 - Starting Build.

Sending build context to Docker daemon  133.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_161701
20200914_161701 - Build completed successfully.


Already up to date.
[master 32a6d3a] Automatic build 20200914_161701
 1 file changed, 63 insertions(+)
20200914_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200914_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_161718 - Docker push completed successfully.


20200914_161718 - All completed successfully
20200914_171701 - Starting Build.

Sending build context to Docker daemon  133.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_171701
20200914_171702 - Build completed successfully.


Already up to date.
[master 07c1251] Automatic build 20200914_171701
 1 file changed, 63 insertions(+)
20200914_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200914_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_171718 - Docker push completed successfully.


20200914_171718 - All completed successfully
20200914_181701 - Starting Build.

Sending build context to Docker daemon  133.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_181701
20200914_181702 - Build completed successfully.


Already up to date.
[master e046e06] Automatic build 20200914_181701
 1 file changed, 63 insertions(+)
20200914_181712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200914_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_181719 - Docker push completed successfully.


20200914_181719 - All completed successfully
20200914_191701 - Starting Build.

Sending build context to Docker daemon    134MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_191701
20200914_191702 - Build completed successfully.


Already up to date.
[master 856de85] Automatic build 20200914_191701
 1 file changed, 63 insertions(+)
20200914_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200914_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_191718 - Docker push completed successfully.


20200914_191718 - All completed successfully
20200914_201701 - Starting Build.

Sending build context to Docker daemon  134.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_201701
20200914_201703 - Build completed successfully.


Already up to date.
[master d69c1c8] Automatic build 20200914_201701
 1 file changed, 63 insertions(+)
20200914_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200914_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_201721 - Docker push completed successfully.


20200914_201721 - All completed successfully
20200914_211701 - Starting Build.

Sending build context to Docker daemon  134.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_211701
20200914_211702 - Build completed successfully.


Already up to date.
[master a9509fa] Automatic build 20200914_211701
 1 file changed, 63 insertions(+)
20200914_211710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200914_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_211718 - Docker push completed successfully.


20200914_211718 - All completed successfully
20200914_221701 - Starting Build.

Sending build context to Docker daemon  134.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_221701
20200914_221701 - Build completed successfully.


Already up to date.
[master 33a3a01] Automatic build 20200914_221701
 1 file changed, 62 insertions(+)
20200914_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200914_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_221717 - Docker push completed successfully.


20200914_221717 - All completed successfully
20200914_231701 - Starting Build.

Sending build context to Docker daemon  134.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200914_231701
20200914_231704 - Build completed successfully.


Already up to date.
[master 3abdd95] Automatic build 20200914_231701
 1 file changed, 63 insertions(+)
20200914_231713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200914_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200914_231721 - Docker push completed successfully.


20200914_231721 - All completed successfully
20200915_001701 - Starting Build.

Sending build context to Docker daemon  135.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_001701
20200915_001703 - Build completed successfully.


Already up to date.
[master e2aabbe] Automatic build 20200915_001701
 1 file changed, 63 insertions(+)
20200915_001712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200915_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_001720 - Docker push completed successfully.


20200915_001720 - All completed successfully
20200915_011701 - Starting Build.

Sending build context to Docker daemon  135.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_011701
20200915_011702 - Build completed successfully.


Already up to date.
[master d84bdbc] Automatic build 20200915_011701
 1 file changed, 63 insertions(+)
20200915_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200915_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_011719 - Docker push completed successfully.


20200915_011719 - All completed successfully
20200915_021701 - Starting Build.

Sending build context to Docker daemon  135.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_021701
20200915_021702 - Build completed successfully.


Already up to date.
[master 0b79550] Automatic build 20200915_021701
 1 file changed, 62 insertions(+)
20200915_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200915_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_021718 - Docker push completed successfully.


20200915_021718 - All completed successfully
20200915_031701 - Starting Build.

Sending build context to Docker daemon  135.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_031701
20200915_031702 - Build completed successfully.


Already up to date.
[master 3aec4da] Automatic build 20200915_031701
 1 file changed, 62 insertions(+)
20200915_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200915_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_031719 - Docker push completed successfully.


20200915_031719 - All completed successfully
20200915_041701 - Starting Build.

Sending build context to Docker daemon    136MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_041701
20200915_041702 - Build completed successfully.


Already up to date.
[master 8b6436c] Automatic build 20200915_041701
 1 file changed, 63 insertions(+)
20200915_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200915_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_041719 - Docker push completed successfully.


20200915_041719 - All completed successfully
20200915_051701 - Starting Build.

Sending build context to Docker daemon  136.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_051701
20200915_051702 - Build completed successfully.


Already up to date.
[master 796b622] Automatic build 20200915_051701
 1 file changed, 61 insertions(+)
20200915_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200915_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_051718 - Docker push completed successfully.


20200915_051718 - All completed successfully
20200915_061701 - Starting Build.

Sending build context to Docker daemon  136.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_061701
20200915_061702 - Build completed successfully.


Already up to date.
[master e96bf31] Automatic build 20200915_061701
 1 file changed, 62 insertions(+)
20200915_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200915_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_061718 - Docker push completed successfully.


20200915_061718 - All completed successfully
20200915_071701 - Starting Build.

Sending build context to Docker daemon  136.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_071701
20200915_071702 - Build completed successfully.


Already up to date.
[master 9d4bdb5] Automatic build 20200915_071701
 1 file changed, 63 insertions(+)
20200915_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200915_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_071719 - Docker push completed successfully.


20200915_071719 - All completed successfully
20200915_081701 - Starting Build.

Sending build context to Docker daemon  136.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_081701
20200915_081702 - Build completed successfully.


Already up to date.
[master d24a35d] Automatic build 20200915_081701
 1 file changed, 63 insertions(+)
20200915_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200915_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_081719 - Docker push completed successfully.


20200915_081719 - All completed successfully
20200915_091701 - Starting Build.

Sending build context to Docker daemon  137.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_091701
20200915_091702 - Build completed successfully.


Already up to date.
[master 25673c3] Automatic build 20200915_091701
 1 file changed, 63 insertions(+)
20200915_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200915_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_091718 - Docker push completed successfully.


20200915_091718 - All completed successfully
20200915_101701 - Starting Build.

Sending build context to Docker daemon  137.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_101701
20200915_101702 - Build completed successfully.


Already up to date.
[master 97a4625] Automatic build 20200915_101701
 1 file changed, 63 insertions(+)
20200915_101712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200915_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_101722 - Docker push completed successfully.


20200915_101722 - All completed successfully
20200915_111701 - Starting Build.

Sending build context to Docker daemon  137.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_111701
20200915_111702 - Build completed successfully.


Already up to date.
[master 168e64b] Automatic build 20200915_111701
 1 file changed, 61 insertions(+)
20200915_111712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200915_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_111722 - Docker push completed successfully.


20200915_111722 - All completed successfully
20200915_121701 - Starting Build.

Sending build context to Docker daemon  137.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_121701
20200915_121701 - Build completed successfully.


Already up to date.
[master f0223b6] Automatic build 20200915_121701
 1 file changed, 61 insertions(+)
20200915_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
eb2e93e4340b: Layer already exists
20200915_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_121723 - Docker push completed successfully.


20200915_121723 - All completed successfully
20200915_131701 - Starting Build.

Sending build context to Docker daemon    138MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_131701
20200915_131701 - Build completed successfully.


Already up to date.
[master 5766909] Automatic build 20200915_131701
 1 file changed, 63 insertions(+)
20200915_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200915_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_131719 - Docker push completed successfully.


20200915_131719 - All completed successfully
20200915_141701 - Starting Build.

Sending build context to Docker daemon  138.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_141701
20200915_141702 - Build completed successfully.


Already up to date.
[master dc4c774] Automatic build 20200915_141701
 1 file changed, 62 insertions(+)
20200915_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200915_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_141719 - Docker push completed successfully.


20200915_141719 - All completed successfully
20200915_151701 - Starting Build.

Sending build context to Docker daemon  138.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_151701
20200915_151702 - Build completed successfully.


Already up to date.
[master 5d85875] Automatic build 20200915_151701
 1 file changed, 63 insertions(+)
20200915_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200915_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_151719 - Docker push completed successfully.


20200915_151719 - All completed successfully
20200915_161701 - Starting Build.

Sending build context to Docker daemon  138.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_161701
20200915_161703 - Build completed successfully.


Already up to date.
[master 71091cc] Automatic build 20200915_161701
 1 file changed, 63 insertions(+)
20200915_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200915_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_161718 - Docker push completed successfully.


20200915_161718 - All completed successfully
20200915_171701 - Starting Build.

Sending build context to Docker daemon  138.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_171701
20200915_171701 - Build completed successfully.


Already up to date.
[master a86d065] Automatic build 20200915_171701
 1 file changed, 63 insertions(+)
20200915_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200915_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_171718 - Docker push completed successfully.


20200915_171718 - All completed successfully
20200915_181701 - Starting Build.

Sending build context to Docker daemon  139.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_181701
20200915_181702 - Build completed successfully.


Already up to date.
[master a9e7b6b] Automatic build 20200915_181701
 1 file changed, 63 insertions(+)
20200915_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200915_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_181718 - Docker push completed successfully.


20200915_181718 - All completed successfully
20200915_191701 - Starting Build.

Sending build context to Docker daemon  139.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_191701
20200915_191702 - Build completed successfully.


Already up to date.
[master 8d10b6e] Automatic build 20200915_191701
 1 file changed, 63 insertions(+)
20200915_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200915_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_191719 - Docker push completed successfully.


20200915_191719 - All completed successfully
20200915_201701 - Starting Build.

Sending build context to Docker daemon  139.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_201701
20200915_201703 - Build completed successfully.


Already up to date.
[master fe32f09] Automatic build 20200915_201701
 1 file changed, 63 insertions(+)
20200915_201712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200915_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_201720 - Docker push completed successfully.


20200915_201720 - All completed successfully
20200915_211701 - Starting Build.

Sending build context to Docker daemon  139.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_211701
20200915_211702 - Build completed successfully.


Already up to date.
[master 5274aae] Automatic build 20200915_211701
 1 file changed, 63 insertions(+)
20200915_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200915_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_211719 - Docker push completed successfully.


20200915_211719 - All completed successfully
20200915_221701 - Starting Build.

Sending build context to Docker daemon    140MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_221701
20200915_221703 - Build completed successfully.


Already up to date.
[master 63ae5ef] Automatic build 20200915_221701
 1 file changed, 63 insertions(+)
20200915_221712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200915_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_221721 - Docker push completed successfully.


20200915_221721 - All completed successfully
20200915_231701 - Starting Build.

Sending build context to Docker daemon  140.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200915_231701
20200915_231704 - Build completed successfully.


Already up to date.
[master 99fbc5c] Automatic build 20200915_231701
 1 file changed, 63 insertions(+)
20200915_231713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200915_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200915_231721 - Docker push completed successfully.


20200915_231721 - All completed successfully
20200916_001701 - Starting Build.

Sending build context to Docker daemon  140.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_001701
20200916_001703 - Build completed successfully.


Already up to date.
[master a512004] Automatic build 20200916_001701
 1 file changed, 62 insertions(+)
20200916_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200916_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_001719 - Docker push completed successfully.


20200916_001719 - All completed successfully
20200916_011701 - Starting Build.

Sending build context to Docker daemon  140.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_011701
20200916_011702 - Build completed successfully.


Already up to date.
[master e07a1ad] Automatic build 20200916_011701
 1 file changed, 63 insertions(+)
20200916_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200916_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_011720 - Docker push completed successfully.


20200916_011720 - All completed successfully
20200916_021701 - Starting Build.

Sending build context to Docker daemon  140.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_021701
20200916_021702 - Build completed successfully.


Already up to date.
[master e51c246] Automatic build 20200916_021701
 1 file changed, 63 insertions(+)
20200916_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200916_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_021719 - Docker push completed successfully.


20200916_021719 - All completed successfully
20200916_031701 - Starting Build.

Sending build context to Docker daemon  141.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_031701
20200916_031702 - Build completed successfully.


Already up to date.
[master a2a94e9] Automatic build 20200916_031701
 1 file changed, 63 insertions(+)
20200916_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200916_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_031718 - Docker push completed successfully.


20200916_031718 - All completed successfully
20200916_041701 - Starting Build.

Sending build context to Docker daemon  141.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_041701
20200916_041703 - Build completed successfully.


Already up to date.
[master dcff1be] Automatic build 20200916_041701
 1 file changed, 63 insertions(+)
20200916_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200916_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_041720 - Docker push completed successfully.


20200916_041720 - All completed successfully
20200916_051701 - Starting Build.

Sending build context to Docker daemon  141.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_051701
20200916_051702 - Build completed successfully.


Already up to date.
[master 5c52fc5] Automatic build 20200916_051701
 1 file changed, 63 insertions(+)
20200916_051712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200916_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_051720 - Docker push completed successfully.


20200916_051720 - All completed successfully
20200916_061701 - Starting Build.

Sending build context to Docker daemon  141.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_061701
20200916_061702 - Build completed successfully.


Already up to date.
[master 485ae78] Automatic build 20200916_061701
 1 file changed, 63 insertions(+)
20200916_061712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200916_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_061723 - Docker push completed successfully.


20200916_061723 - All completed successfully
20200916_071701 - Starting Build.

Sending build context to Docker daemon  141.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_071701
20200916_071702 - Build completed successfully.


Already up to date.
[master d16ec09] Automatic build 20200916_071701
 1 file changed, 63 insertions(+)
20200916_071714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200916_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_071728 - Docker push completed successfully.


20200916_071728 - All completed successfully
20200916_081701 - Starting Build.

Sending build context to Docker daemon  142.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_081701
20200916_081701 - Build completed successfully.


Already up to date.
[master fe48648] Automatic build 20200916_081701
 1 file changed, 63 insertions(+)
20200916_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200916_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_081720 - Docker push completed successfully.


20200916_081720 - All completed successfully
20200916_091701 - Starting Build.

Sending build context to Docker daemon  142.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_091701
20200916_091702 - Build completed successfully.


Already up to date.
[master 03e80c2] Automatic build 20200916_091701
 1 file changed, 62 insertions(+)
20200916_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200916_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_091720 - Docker push completed successfully.


20200916_091720 - All completed successfully
20200916_101701 - Starting Build.

Sending build context to Docker daemon  142.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_101701
20200916_101702 - Build completed successfully.


Already up to date.
[master 47a98a1] Automatic build 20200916_101701
 1 file changed, 63 insertions(+)
20200916_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200916_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_101720 - Docker push completed successfully.


20200916_101720 - All completed successfully
20200916_111701 - Starting Build.

Sending build context to Docker daemon  142.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_111701
20200916_111701 - Build completed successfully.


Already up to date.
[master f4e04df] Automatic build 20200916_111701
 1 file changed, 63 insertions(+)
20200916_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200916_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_111720 - Docker push completed successfully.


20200916_111720 - All completed successfully
20200916_121701 - Starting Build.

Sending build context to Docker daemon  143.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_121701
20200916_121702 - Build completed successfully.


Already up to date.
[master 72cb122] Automatic build 20200916_121701
 1 file changed, 62 insertions(+)
20200916_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200916_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_121719 - Docker push completed successfully.


20200916_121719 - All completed successfully
20200916_131701 - Starting Build.

Sending build context to Docker daemon  143.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_131701
20200916_131701 - Build completed successfully.


Already up to date.
[master 9ff0525] Automatic build 20200916_131701
 1 file changed, 63 insertions(+)
20200916_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200916_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_131718 - Docker push completed successfully.


20200916_131718 - All completed successfully
20200916_141701 - Starting Build.

Sending build context to Docker daemon  143.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_141701
20200916_141702 - Build completed successfully.


Already up to date.
[master 9c1ffeb] Automatic build 20200916_141701
 1 file changed, 63 insertions(+)
20200916_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200916_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_141719 - Docker push completed successfully.


20200916_141719 - All completed successfully
20200916_151701 - Starting Build.

Sending build context to Docker daemon  143.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_151701
20200916_151702 - Build completed successfully.


Already up to date.
[master 22e005e] Automatic build 20200916_151701
 1 file changed, 63 insertions(+)
20200916_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200916_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_151722 - Docker push completed successfully.


20200916_151722 - All completed successfully
20200916_161701 - Starting Build.

Sending build context to Docker daemon  143.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_161701
20200916_161701 - Build completed successfully.


Already up to date.
[master 20832e4] Automatic build 20200916_161701
 1 file changed, 63 insertions(+)
20200916_161710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200916_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_161718 - Docker push completed successfully.


20200916_161718 - All completed successfully
20200916_171701 - Starting Build.

Sending build context to Docker daemon  144.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_171701
20200916_171702 - Build completed successfully.


Already up to date.
[master 6c8085d] Automatic build 20200916_171701
 1 file changed, 62 insertions(+)
20200916_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200916_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_171720 - Docker push completed successfully.


20200916_171720 - All completed successfully
20200916_181701 - Starting Build.

Sending build context to Docker daemon  144.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_181701
20200916_181702 - Build completed successfully.


Already up to date.
[master 922dd03] Automatic build 20200916_181701
 1 file changed, 63 insertions(+)
20200916_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200916_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_181718 - Docker push completed successfully.


20200916_181718 - All completed successfully
20200916_191701 - Starting Build.

Sending build context to Docker daemon  144.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_191701
20200916_191702 - Build completed successfully.


Already up to date.
[master 2c48ba4] Automatic build 20200916_191701
 1 file changed, 62 insertions(+)
20200916_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
20200916_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_191719 - Docker push completed successfully.


20200916_191719 - All completed successfully
20200916_201701 - Starting Build.

Sending build context to Docker daemon  144.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_201701
20200916_201703 - Build completed successfully.


Already up to date.
[master 2390bef] Automatic build 20200916_201701
 1 file changed, 63 insertions(+)
20200916_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200916_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_201718 - Docker push completed successfully.


20200916_201718 - All completed successfully
20200916_211701 - Starting Build.

Sending build context to Docker daemon  145.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_211701
20200916_211702 - Build completed successfully.


Already up to date.
[master d3b21ac] Automatic build 20200916_211701
 1 file changed, 63 insertions(+)
20200916_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
4aa65369d2be: Layer already exists
20200916_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_211721 - Docker push completed successfully.


20200916_211721 - All completed successfully
20200916_221701 - Starting Build.

Sending build context to Docker daemon  145.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_221701
20200916_221701 - Build completed successfully.


Already up to date.
[master 4ef62ad] Automatic build 20200916_221701
 1 file changed, 63 insertions(+)
20200916_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200916_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_221719 - Docker push completed successfully.


20200916_221719 - All completed successfully
20200916_231701 - Starting Build.

Sending build context to Docker daemon  145.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200916_231701
20200916_231703 - Build completed successfully.


Already up to date.
[master 7652f03] Automatic build 20200916_231701
 1 file changed, 62 insertions(+)
20200916_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200916_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200916_231719 - Docker push completed successfully.


20200916_231719 - All completed successfully
20200917_001701 - Starting Build.

Sending build context to Docker daemon  145.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_001701
20200917_001702 - Build completed successfully.


Already up to date.
[master da3a93b] Automatic build 20200917_001701
 1 file changed, 63 insertions(+)
20200917_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200917_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_001718 - Docker push completed successfully.


20200917_001718 - All completed successfully
20200917_011701 - Starting Build.

Sending build context to Docker daemon  145.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_011701
20200917_011702 - Build completed successfully.


Already up to date.
[master ad13c87] Automatic build 20200917_011701
 1 file changed, 62 insertions(+)
20200917_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200917_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_011719 - Docker push completed successfully.


20200917_011719 - All completed successfully
20200917_021701 - Starting Build.

Sending build context to Docker daemon  146.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_021701
20200917_021702 - Build completed successfully.


Already up to date.
[master 92c63da] Automatic build 20200917_021701
 1 file changed, 63 insertions(+)
20200917_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200917_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_021719 - Docker push completed successfully.


20200917_021719 - All completed successfully
20200917_031701 - Starting Build.

Sending build context to Docker daemon  146.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_031701
20200917_031703 - Build completed successfully.


Already up to date.
[master e0e3a76] Automatic build 20200917_031701
 1 file changed, 63 insertions(+)
20200917_031712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_031720 - Docker push completed successfully.


20200917_031720 - All completed successfully
20200917_041701 - Starting Build.

Sending build context to Docker daemon  146.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_041701
20200917_041702 - Build completed successfully.


Already up to date.
[master 8385de8] Automatic build 20200917_041701
 1 file changed, 63 insertions(+)
20200917_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
20200917_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_041725 - Docker push completed successfully.


20200917_041725 - All completed successfully
20200917_051701 - Starting Build.

Sending build context to Docker daemon  146.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_051701
20200917_051702 - Build completed successfully.


Already up to date.
[master 7afd080] Automatic build 20200917_051701
 1 file changed, 63 insertions(+)
20200917_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200917_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_051719 - Docker push completed successfully.


20200917_051719 - All completed successfully
20200917_061701 - Starting Build.

Sending build context to Docker daemon  147.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_061701
20200917_061702 - Build completed successfully.


Already up to date.
[master 6db45a2] Automatic build 20200917_061701
 1 file changed, 63 insertions(+)
20200917_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200917_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_061719 - Docker push completed successfully.


20200917_061719 - All completed successfully
20200917_071701 - Starting Build.

Sending build context to Docker daemon  147.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_071701
20200917_071702 - Build completed successfully.


Already up to date.
[master 89f93ce] Automatic build 20200917_071701
 1 file changed, 63 insertions(+)
20200917_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200917_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_071718 - Docker push completed successfully.


20200917_071718 - All completed successfully
20200917_081701 - Starting Build.

Sending build context to Docker daemon  147.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_081701
20200917_081701 - Build completed successfully.


Already up to date.
[master 9759f22] Automatic build 20200917_081701
 1 file changed, 62 insertions(+)
20200917_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_081718 - Docker push completed successfully.


20200917_081718 - All completed successfully
20200917_091701 - Starting Build.

Sending build context to Docker daemon  147.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_091701
20200917_091702 - Build completed successfully.


Already up to date.
[master 24bbc06] Automatic build 20200917_091701
 1 file changed, 63 insertions(+)
20200917_091709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200917_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_091717 - Docker push completed successfully.


20200917_091717 - All completed successfully
20200917_101701 - Starting Build.

Sending build context to Docker daemon    148MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_101701
20200917_101701 - Build completed successfully.


Already up to date.
[master 46cd49d] Automatic build 20200917_101701
 1 file changed, 63 insertions(+)
20200917_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200917_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_101718 - Docker push completed successfully.


20200917_101718 - All completed successfully
20200917_111701 - Starting Build.

Sending build context to Docker daemon  148.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_111701
20200917_111702 - Build completed successfully.


Already up to date.
[master 56675e1] Automatic build 20200917_111701
 1 file changed, 63 insertions(+)
20200917_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200917_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_111719 - Docker push completed successfully.


20200917_111719 - All completed successfully
20200917_121701 - Starting Build.

Sending build context to Docker daemon  148.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_121701
20200917_121703 - Build completed successfully.


Already up to date.
[master 79b5887] Automatic build 20200917_121701
 1 file changed, 63 insertions(+)
20200917_121713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200917_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_121728 - Docker push completed successfully.


20200917_121728 - All completed successfully
20200917_131701 - Starting Build.

Sending build context to Docker daemon  148.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_131701
20200917_131702 - Build completed successfully.


Already up to date.
[master cb66722] Automatic build 20200917_131701
 1 file changed, 63 insertions(+)
20200917_131712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200917_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_131720 - Docker push completed successfully.


20200917_131720 - All completed successfully
20200917_141701 - Starting Build.

Sending build context to Docker daemon  148.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_141701
20200917_141703 - Build completed successfully.


20200917_141703 - git
[master 17395dc] Automatic build 20200917_141701
 1 file changed, 62 insertions(+)
20200917_141703 - git
20200917_141703 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200917_141703 - Docker push FAILED!!


20200917_151701 - Starting Build.

Sending build context to Docker daemon  149.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_151701
20200917_151702 - Build completed successfully.


Already up to date.
[master 00e2d95] Automatic build 20200917_151701
 1 file changed, 43 insertions(+)
20200917_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200917_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_151719 - Docker push completed successfully.


20200917_151719 - All completed successfully
20200917_161701 - Starting Build.

Sending build context to Docker daemon  149.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_161701
20200917_161702 - Build completed successfully.


Already up to date.
[master 89601b1] Automatic build 20200917_161701
 1 file changed, 62 insertions(+)
20200917_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_161719 - Docker push completed successfully.


20200917_161719 - All completed successfully
20200917_171701 - Starting Build.

Sending build context to Docker daemon  149.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_171701
20200917_171702 - Build completed successfully.


Already up to date.
[master e695bee] Automatic build 20200917_171701
 1 file changed, 63 insertions(+)
20200917_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_171719 - Docker push completed successfully.


20200917_171719 - All completed successfully
20200917_181701 - Starting Build.

Sending build context to Docker daemon  149.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_181701
20200917_181702 - Build completed successfully.


Already up to date.
[master f9d39ad] Automatic build 20200917_181701
 1 file changed, 63 insertions(+)
20200917_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_181722 - Docker push completed successfully.


20200917_181722 - All completed successfully
20200917_191701 - Starting Build.

Sending build context to Docker daemon    150MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_191701
20200917_191701 - Build completed successfully.


Already up to date.
[master d1efdd8] Automatic build 20200917_191701
 1 file changed, 62 insertions(+)
20200917_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_191719 - Docker push completed successfully.


20200917_191719 - All completed successfully
20200917_201701 - Starting Build.

Sending build context to Docker daemon  150.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_201701
20200917_201702 - Build completed successfully.


Already up to date.
[master 7fd8c13] Automatic build 20200917_201701
 1 file changed, 63 insertions(+)
20200917_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_201718 - Docker push completed successfully.


20200917_201718 - All completed successfully
20200917_211701 - Starting Build.

Sending build context to Docker daemon  150.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_211701
20200917_211702 - Build completed successfully.


Already up to date.
[master e1db174] Automatic build 20200917_211701
 1 file changed, 62 insertions(+)
20200917_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200917_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_211720 - Docker push completed successfully.


20200917_211720 - All completed successfully
20200917_221701 - Starting Build.

Sending build context to Docker daemon  150.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_221701
20200917_221702 - Build completed successfully.


Already up to date.
[master 65667dd] Automatic build 20200917_221701
 1 file changed, 62 insertions(+)
20200917_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200917_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_221719 - Docker push completed successfully.


20200917_221719 - All completed successfully
20200917_231701 - Starting Build.

Sending build context to Docker daemon  150.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200917_231701
20200917_231702 - Build completed successfully.


Already up to date.
[master 07691c4] Automatic build 20200917_231701
 1 file changed, 62 insertions(+)
20200917_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200917_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200917_231719 - Docker push completed successfully.


20200917_231719 - All completed successfully
20200918_001701 - Starting Build.

Sending build context to Docker daemon  151.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_001701
20200918_001702 - Build completed successfully.


Already up to date.
[master 2851765] Automatic build 20200918_001701
 1 file changed, 63 insertions(+)
20200918_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200918_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_001719 - Docker push completed successfully.


20200918_001719 - All completed successfully
20200918_011701 - Starting Build.

Sending build context to Docker daemon  151.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_011701
20200918_011701 - Build completed successfully.


Already up to date.
[master 66150ab] Automatic build 20200918_011701
 1 file changed, 63 insertions(+)
20200918_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200918_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_011722 - Docker push completed successfully.


20200918_011722 - All completed successfully
20200918_021701 - Starting Build.

Sending build context to Docker daemon  151.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_021701
20200918_021702 - Build completed successfully.


Already up to date.
[master fa018e5] Automatic build 20200918_021701
 1 file changed, 63 insertions(+)
20200918_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200918_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_021719 - Docker push completed successfully.


20200918_021719 - All completed successfully
20200918_031701 - Starting Build.

Sending build context to Docker daemon  151.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_031701
20200918_031702 - Build completed successfully.


Already up to date.
[master 7b1a5d4] Automatic build 20200918_031701
 1 file changed, 63 insertions(+)
20200918_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200918_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_031718 - Docker push completed successfully.


20200918_031718 - All completed successfully
20200918_041701 - Starting Build.

Sending build context to Docker daemon    152MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_041701
20200918_041702 - Build completed successfully.


Already up to date.
[master fa94689] Automatic build 20200918_041701
 1 file changed, 63 insertions(+)
20200918_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200918_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_041718 - Docker push completed successfully.


20200918_041718 - All completed successfully
20200918_051701 - Starting Build.

Sending build context to Docker daemon  152.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_051701
20200918_051702 - Build completed successfully.


Already up to date.
[master 5598787] Automatic build 20200918_051701
 1 file changed, 62 insertions(+)
20200918_051712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200918_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_051720 - Docker push completed successfully.


20200918_051720 - All completed successfully
20200918_061701 - Starting Build.

Sending build context to Docker daemon  152.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_061701
20200918_061702 - Build completed successfully.


Already up to date.
[master 122ba2c] Automatic build 20200918_061701
 1 file changed, 63 insertions(+)
20200918_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200918_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_061719 - Docker push completed successfully.


20200918_061719 - All completed successfully
20200918_071701 - Starting Build.

Sending build context to Docker daemon  152.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_071701
20200918_071702 - Build completed successfully.


Already up to date.
[master 24ca3ce] Automatic build 20200918_071701
 1 file changed, 63 insertions(+)
20200918_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200918_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_071720 - Docker push completed successfully.


20200918_071720 - All completed successfully
20200918_081701 - Starting Build.

Sending build context to Docker daemon  152.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_081701
20200918_081701 - Build completed successfully.


Already up to date.
[master 0610206] Automatic build 20200918_081701
 1 file changed, 62 insertions(+)
20200918_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200918_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_081718 - Docker push completed successfully.


20200918_081718 - All completed successfully
20200918_091701 - Starting Build.

Sending build context to Docker daemon  153.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_091701
20200918_091702 - Build completed successfully.


Already up to date.
[master b930402] Automatic build 20200918_091701
 1 file changed, 63 insertions(+)
20200918_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200918_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_091718 - Docker push completed successfully.


20200918_091718 - All completed successfully
20200918_101701 - Starting Build.

Sending build context to Docker daemon  153.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_101701
20200918_101702 - Build completed successfully.


Already up to date.
[master e197959] Automatic build 20200918_101701
 1 file changed, 63 insertions(+)
20200918_101712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200918_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_101722 - Docker push completed successfully.


20200918_101722 - All completed successfully
20200918_111701 - Starting Build.

Sending build context to Docker daemon  153.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_111701
20200918_111702 - Build completed successfully.


Already up to date.
[master 2792248] Automatic build 20200918_111701
 1 file changed, 63 insertions(+)
20200918_111736 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200918_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_111745 - Docker push completed successfully.


20200918_111745 - All completed successfully
20200918_121702 - Starting Build.

Sending build context to Docker daemon  153.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_121702
20200918_121702 - Build completed successfully.


Already up to date.
[master 6b851c9] Automatic build 20200918_121702
 1 file changed, 63 insertions(+)
20200918_121713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200918_121702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_121721 - Docker push completed successfully.


20200918_121721 - All completed successfully
20200918_131701 - Starting Build.

Sending build context to Docker daemon  154.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_131701
20200918_131702 - Build completed successfully.


20200918_131702 - git
[master 0a33980] Automatic build 20200918_131701
 1 file changed, 63 insertions(+)
20200918_131702 - git
20200918_131702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200918_131702 - Docker push FAILED!!


20200918_141701 - Starting Build.

Sending build context to Docker daemon  154.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_141701
20200918_141702 - Build completed successfully.


Already up to date.
[master 0ba6997] Automatic build 20200918_141701
 1 file changed, 43 insertions(+)
20200918_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200918_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_141719 - Docker push completed successfully.


20200918_141719 - All completed successfully
20200918_151701 - Starting Build.

Sending build context to Docker daemon  154.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_151701
20200918_151702 - Build completed successfully.


Already up to date.
[master f40cfd8] Automatic build 20200918_151701
 1 file changed, 63 insertions(+)
20200918_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200918_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_151719 - Docker push completed successfully.


20200918_151719 - All completed successfully
20200918_161701 - Starting Build.

Sending build context to Docker daemon  154.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_161701
20200918_161702 - Build completed successfully.


Already up to date.
[master 764bea6] Automatic build 20200918_161701
 1 file changed, 63 insertions(+)
20200918_161713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200918_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_161722 - Docker push completed successfully.


20200918_161722 - All completed successfully
20200918_171701 - Starting Build.

Sending build context to Docker daemon    155MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_171701
20200918_171702 - Build completed successfully.


Already up to date.
[master 63cf1fd] Automatic build 20200918_171701
 1 file changed, 63 insertions(+)
20200918_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200918_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_171721 - Docker push completed successfully.


20200918_171721 - All completed successfully
20200918_231701 - Starting Build.

Sending build context to Docker daemon  155.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200918_231701
20200918_231703 - Build completed successfully.


Already up to date.
[master e800073] Automatic build 20200918_231701
 1 file changed, 63 insertions(+)
20200918_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200918_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200918_231719 - Docker push completed successfully.


20200918_231719 - All completed successfully
20200919_001701 - Starting Build.

Sending build context to Docker daemon  155.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_001701
20200919_001705 - Build completed successfully.


Already up to date.
[master d7212a0] Automatic build 20200919_001701
 1 file changed, 63 insertions(+)
20200919_001713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
4aa65369d2be: Layer already exists
20200919_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_001733 - Docker push completed successfully.


20200919_001733 - All completed successfully
20200919_011701 - Starting Build.

Sending build context to Docker daemon  155.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_011701
20200919_011702 - Build completed successfully.


Already up to date.
[master 7aefd37] Automatic build 20200919_011701
 1 file changed, 63 insertions(+)
20200919_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
20200919_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_011728 - Docker push completed successfully.


20200919_011728 - All completed successfully
20200919_021701 - Starting Build.

Sending build context to Docker daemon  155.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_021701
20200919_021702 - Build completed successfully.


Already up to date.
[master 5d48ab5] Automatic build 20200919_021701
 1 file changed, 61 insertions(+)
20200919_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200919_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_021718 - Docker push completed successfully.


20200919_021718 - All completed successfully
20200919_031701 - Starting Build.

Sending build context to Docker daemon  156.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_031701
20200919_031704 - Build completed successfully.


Already up to date.
[master 502b9cd] Automatic build 20200919_031701
 1 file changed, 63 insertions(+)
20200919_031714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200919_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_031724 - Docker push completed successfully.


20200919_031724 - All completed successfully
20200919_041701 - Starting Build.

Sending build context to Docker daemon  156.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_041701
20200919_041703 - Build completed successfully.


Already up to date.
[master 6916c28] Automatic build 20200919_041701
 1 file changed, 63 insertions(+)
20200919_041713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200919_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_041722 - Docker push completed successfully.


20200919_041722 - All completed successfully
20200919_051701 - Starting Build.

Sending build context to Docker daemon  156.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_051701
20200919_051704 - Build completed successfully.


Already up to date.
[master 6747986] Automatic build 20200919_051701
 1 file changed, 63 insertions(+)
20200919_051714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200919_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_051722 - Docker push completed successfully.


20200919_051722 - All completed successfully
20200919_061701 - Starting Build.

Sending build context to Docker daemon  156.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_061701
20200919_061703 - Build completed successfully.


Already up to date.
[master cc0b380] Automatic build 20200919_061701
 1 file changed, 63 insertions(+)
20200919_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
4aa65369d2be: Layer already exists
20200919_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_061719 - Docker push completed successfully.


20200919_061719 - All completed successfully
20200919_071701 - Starting Build.

Sending build context to Docker daemon    157MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_071701
20200919_071703 - Build completed successfully.


Already up to date.
[master ca5e33a] Automatic build 20200919_071701
 1 file changed, 63 insertions(+)
20200919_071712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200919_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_071720 - Docker push completed successfully.


20200919_071720 - All completed successfully
20200919_111701 - Starting Build.

Sending build context to Docker daemon  157.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_111701
20200919_111707 - Build completed successfully.


Already up to date.
[master e5d334b] Automatic build 20200919_111701
 1 file changed, 63 insertions(+)
20200919_111716 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200919_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_111729 - Docker push completed successfully.


20200919_111729 - All completed successfully
20200919_121701 - Starting Build.

Sending build context to Docker daemon  157.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_121701
20200919_121701 - Build completed successfully.


Already up to date.
[master 3b083af] Automatic build 20200919_121701
 1 file changed, 63 insertions(+)
20200919_121709 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200919_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_121723 - Docker push completed successfully.


20200919_121723 - All completed successfully
20200919_131701 - Starting Build.

Sending build context to Docker daemon  157.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_131701
20200919_131701 - Build completed successfully.


Already up to date.
[master 92d8f2a] Automatic build 20200919_131701
 1 file changed, 62 insertions(+)
20200919_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200919_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_131720 - Docker push completed successfully.


20200919_131720 - All completed successfully
20200919_141701 - Starting Build.

Sending build context to Docker daemon  157.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_141701
20200919_141702 - Build completed successfully.


Already up to date.
[master 1b3ba62] Automatic build 20200919_141701
 1 file changed, 62 insertions(+)
20200919_141712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200919_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_141727 - Docker push completed successfully.


20200919_141727 - All completed successfully
20200919_151701 - Starting Build.

Sending build context to Docker daemon  158.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_151701
20200919_151702 - Build completed successfully.


Already up to date.
[master 5a37d81] Automatic build 20200919_151701
 1 file changed, 61 insertions(+)
20200919_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200919_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_151721 - Docker push completed successfully.


20200919_151721 - All completed successfully
20200919_161701 - Starting Build.

Sending build context to Docker daemon  158.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_161701
20200919_161701 - Build completed successfully.


Already up to date.
[master 55a2bb9] Automatic build 20200919_161701
 1 file changed, 63 insertions(+)
20200919_161712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200919_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_161726 - Docker push completed successfully.


20200919_161726 - All completed successfully
20200919_211701 - Starting Build.

Sending build context to Docker daemon  158.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_211701
20200919_211703 - Build completed successfully.


Already up to date.
[master ad5b6d5] Automatic build 20200919_211701
 1 file changed, 63 insertions(+)
20200919_211712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200919_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_211721 - Docker push completed successfully.


20200919_211721 - All completed successfully
20200919_221701 - Starting Build.

Sending build context to Docker daemon  158.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_221701
20200919_221702 - Build completed successfully.


Already up to date.
[master c6d46f9] Automatic build 20200919_221701
 1 file changed, 62 insertions(+)
20200919_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200919_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_221719 - Docker push completed successfully.


20200919_221719 - All completed successfully
20200919_231701 - Starting Build.

Sending build context to Docker daemon  159.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200919_231701
20200919_231702 - Build completed successfully.


Already up to date.
[master 8b864de] Automatic build 20200919_231701
 1 file changed, 63 insertions(+)
20200919_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200919_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200919_231721 - Docker push completed successfully.


20200919_231721 - All completed successfully
20200920_001701 - Starting Build.

Sending build context to Docker daemon  159.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_001701
20200920_001702 - Build completed successfully.


Already up to date.
[master ad1162a] Automatic build 20200920_001701
 1 file changed, 62 insertions(+)
20200920_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200920_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_001719 - Docker push completed successfully.


20200920_001719 - All completed successfully
20200920_011701 - Starting Build.

Sending build context to Docker daemon  159.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_011701
20200920_011702 - Build completed successfully.


Already up to date.
[master b8f6484] Automatic build 20200920_011701
 1 file changed, 62 insertions(+)
20200920_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_011719 - Docker push completed successfully.


20200920_011719 - All completed successfully
20200920_021701 - Starting Build.

Sending build context to Docker daemon  159.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_021701
20200920_021702 - Build completed successfully.


Already up to date.
[master 7c961e5] Automatic build 20200920_021701
 1 file changed, 63 insertions(+)
20200920_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200920_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_021718 - Docker push completed successfully.


20200920_021718 - All completed successfully
20200920_031701 - Starting Build.

Sending build context to Docker daemon    160MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_031701
20200920_031702 - Build completed successfully.


Already up to date.
[master 9fc6781] Automatic build 20200920_031701
 1 file changed, 63 insertions(+)
20200920_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_031718 - Docker push completed successfully.


20200920_031718 - All completed successfully
20200920_041701 - Starting Build.

Sending build context to Docker daemon  160.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_041701
20200920_041702 - Build completed successfully.


Already up to date.
[master 55a9c5d] Automatic build 20200920_041701
 1 file changed, 63 insertions(+)
20200920_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_041718 - Docker push completed successfully.


20200920_041718 - All completed successfully
20200920_051701 - Starting Build.

Sending build context to Docker daemon  160.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_051701
20200920_051702 - Build completed successfully.


Already up to date.
[master 7979039] Automatic build 20200920_051701
 1 file changed, 63 insertions(+)
20200920_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_051719 - Docker push completed successfully.


20200920_051719 - All completed successfully
20200920_061701 - Starting Build.

Sending build context to Docker daemon  160.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_061701
20200920_061703 - Build completed successfully.


Already up to date.
[master a5de26e] Automatic build 20200920_061701
 1 file changed, 63 insertions(+)
20200920_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_061719 - Docker push completed successfully.


20200920_061719 - All completed successfully
20200920_071701 - Starting Build.

Sending build context to Docker daemon  160.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_071701
20200920_071702 - Build completed successfully.


Already up to date.
[master 3ecdff5] Automatic build 20200920_071701
 1 file changed, 63 insertions(+)
20200920_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_071718 - Docker push completed successfully.


20200920_071718 - All completed successfully
20200920_081701 - Starting Build.

Sending build context to Docker daemon  161.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_081701
20200920_081702 - Build completed successfully.


Already up to date.
[master a917263] Automatic build 20200920_081701
 1 file changed, 63 insertions(+)
20200920_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200920_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_081718 - Docker push completed successfully.


20200920_081718 - All completed successfully
20200920_091701 - Starting Build.

Sending build context to Docker daemon  161.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_091701
20200920_091702 - Build completed successfully.


Already up to date.
[master cc332de] Automatic build 20200920_091701
 1 file changed, 63 insertions(+)
20200920_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200920_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_091722 - Docker push completed successfully.


20200920_091722 - All completed successfully
20200920_101701 - Starting Build.

Sending build context to Docker daemon  161.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_101701
20200920_101702 - Build completed successfully.


Already up to date.
[master df7e848] Automatic build 20200920_101701
 1 file changed, 62 insertions(+)
20200920_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_101721 - Docker push completed successfully.


20200920_101721 - All completed successfully
20200920_111701 - Starting Build.

Sending build context to Docker daemon  161.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_111701
20200920_111702 - Build completed successfully.


Already up to date.
[master 5dc9b5c] Automatic build 20200920_111701
 1 file changed, 63 insertions(+)
20200920_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200920_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_111720 - Docker push completed successfully.


20200920_111720 - All completed successfully
20200920_121701 - Starting Build.

Sending build context to Docker daemon  162.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_121701
20200920_121702 - Build completed successfully.


Already up to date.
[master 1ff7849] Automatic build 20200920_121701
 1 file changed, 63 insertions(+)
20200920_121713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200920_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_121724 - Docker push completed successfully.


20200920_121724 - All completed successfully
20200920_131701 - Starting Build.

Sending build context to Docker daemon  162.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_131701
20200920_131702 - Build completed successfully.


Already up to date.
[master ee48e48] Automatic build 20200920_131701
 1 file changed, 63 insertions(+)
20200920_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_131720 - Docker push completed successfully.


20200920_131720 - All completed successfully
20200920_141701 - Starting Build.

Sending build context to Docker daemon  162.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_141701
20200920_141702 - Build completed successfully.


Already up to date.
[master 43a7272] Automatic build 20200920_141701
 1 file changed, 63 insertions(+)
20200920_141712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200920_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_141722 - Docker push completed successfully.


20200920_141722 - All completed successfully
20200920_151701 - Starting Build.

Sending build context to Docker daemon  162.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_151701
20200920_151702 - Build completed successfully.


Already up to date.
[master f4dfd26] Automatic build 20200920_151701
 1 file changed, 63 insertions(+)
20200920_151712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200920_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_151724 - Docker push completed successfully.


20200920_151724 - All completed successfully
20200920_161701 - Starting Build.

Sending build context to Docker daemon    163MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_161701
20200920_161702 - Build completed successfully.


Already up to date.
[master b6a7c7c] Automatic build 20200920_161701
 1 file changed, 63 insertions(+)
20200920_161713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200920_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_161723 - Docker push completed successfully.


20200920_161723 - All completed successfully
20200920_171701 - Starting Build.

Sending build context to Docker daemon  163.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_171701
20200920_171702 - Build completed successfully.


Already up to date.
[master 621939e] Automatic build 20200920_171701
 1 file changed, 63 insertions(+)
20200920_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_171720 - Docker push completed successfully.


20200920_171720 - All completed successfully
20200920_181701 - Starting Build.

Sending build context to Docker daemon  163.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_181701
20200920_181702 - Build completed successfully.


Already up to date.
[master e9b871a] Automatic build 20200920_181701
 1 file changed, 63 insertions(+)
20200920_181712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200920_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_181723 - Docker push completed successfully.


20200920_181723 - All completed successfully
20200920_191701 - Starting Build.

Sending build context to Docker daemon  163.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_191701
20200920_191702 - Build completed successfully.


Already up to date.
[master f8d0fa8] Automatic build 20200920_191701
 1 file changed, 63 insertions(+)
20200920_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_191720 - Docker push completed successfully.


20200920_191720 - All completed successfully
20200920_201701 - Starting Build.

Sending build context to Docker daemon  163.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_201701
20200920_201701 - Build completed successfully.


Already up to date.
[master 5033dc6] Automatic build 20200920_201701
 1 file changed, 63 insertions(+)
20200920_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200920_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_201718 - Docker push completed successfully.


20200920_201718 - All completed successfully
20200920_211701 - Starting Build.

Sending build context to Docker daemon  164.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_211701
20200920_211704 - Build completed successfully.


Already up to date.
[master 5158e23] Automatic build 20200920_211701
 1 file changed, 63 insertions(+)
20200920_211713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200920_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_211721 - Docker push completed successfully.


20200920_211721 - All completed successfully
20200920_221701 - Starting Build.

Sending build context to Docker daemon  164.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_221701
20200920_221704 - Build completed successfully.


Already up to date.
[master ab074d7] Automatic build 20200920_221701
 1 file changed, 62 insertions(+)
20200920_221714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200920_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_221722 - Docker push completed successfully.


20200920_221722 - All completed successfully
20200920_231701 - Starting Build.

Sending build context to Docker daemon  164.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200920_231701
20200920_231702 - Build completed successfully.


Already up to date.
[master 7d15641] Automatic build 20200920_231701
 1 file changed, 63 insertions(+)
20200920_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200920_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200920_231719 - Docker push completed successfully.


20200920_231719 - All completed successfully
20200921_001701 - Starting Build.

Sending build context to Docker daemon  164.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_001701
20200921_001702 - Build completed successfully.


Already up to date.
[master 3d64cf9] Automatic build 20200921_001701
 1 file changed, 63 insertions(+)
20200921_001710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200921_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_001719 - Docker push completed successfully.


20200921_001719 - All completed successfully
20200921_011701 - Starting Build.

Sending build context to Docker daemon  165.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_011701
20200921_011702 - Build completed successfully.


Already up to date.
[master dfa8e9f] Automatic build 20200921_011701
 1 file changed, 63 insertions(+)
20200921_011712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_011721 - Docker push completed successfully.


20200921_011721 - All completed successfully
20200921_021701 - Starting Build.

Sending build context to Docker daemon  165.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_021701
20200921_021701 - Build completed successfully.


Already up to date.
[master c2b8f34] Automatic build 20200921_021701
 1 file changed, 63 insertions(+)
20200921_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200921_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_021719 - Docker push completed successfully.


20200921_021719 - All completed successfully
20200921_031702 - Starting Build.

Sending build context to Docker daemon  165.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_031702
20200921_031703 - Build completed successfully.


Already up to date.
[master ee08703] Automatic build 20200921_031702
 1 file changed, 63 insertions(+)
20200921_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_031702: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_031720 - Docker push completed successfully.


20200921_031720 - All completed successfully
20200921_041701 - Starting Build.

Sending build context to Docker daemon  165.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_041701
20200921_041702 - Build completed successfully.


Already up to date.
[master e33ec1a] Automatic build 20200921_041701
 1 file changed, 62 insertions(+)
20200921_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200921_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_041718 - Docker push completed successfully.


20200921_041718 - All completed successfully
20200921_051701 - Starting Build.

Sending build context to Docker daemon    166MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_051701
20200921_051702 - Build completed successfully.


Already up to date.
[master f2b652e] Automatic build 20200921_051701
 1 file changed, 63 insertions(+)
20200921_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200921_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_051720 - Docker push completed successfully.


20200921_051720 - All completed successfully
20200921_061701 - Starting Build.

Sending build context to Docker daemon  166.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_061701
20200921_061702 - Build completed successfully.


Already up to date.
[master 70dff53] Automatic build 20200921_061701
 1 file changed, 63 insertions(+)
20200921_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200921_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_061720 - Docker push completed successfully.


20200921_061720 - All completed successfully
20200921_071701 - Starting Build.

Sending build context to Docker daemon  166.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_071701
20200921_071702 - Build completed successfully.


Already up to date.
[master 8973758] Automatic build 20200921_071701
 1 file changed, 62 insertions(+)
20200921_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200921_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_071719 - Docker push completed successfully.


20200921_071719 - All completed successfully
20200921_081701 - Starting Build.

Sending build context to Docker daemon  166.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_081701
20200921_081701 - Build completed successfully.


Already up to date.
[master db46101] Automatic build 20200921_081701
 1 file changed, 63 insertions(+)
20200921_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_081718 - Docker push completed successfully.


20200921_081718 - All completed successfully
20200921_091701 - Starting Build.

Sending build context to Docker daemon    167MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_091701
20200921_091702 - Build completed successfully.


Already up to date.
[master 5f4f02c] Automatic build 20200921_091701
 1 file changed, 63 insertions(+)
20200921_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200921_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_091718 - Docker push completed successfully.


20200921_091718 - All completed successfully
20200921_101701 - Starting Build.

Sending build context to Docker daemon  167.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_101701
20200921_101702 - Build completed successfully.


Already up to date.
[master 3fa9655] Automatic build 20200921_101701
 1 file changed, 63 insertions(+)
20200921_101712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_101721 - Docker push completed successfully.


20200921_101721 - All completed successfully
20200921_111701 - Starting Build.

Sending build context to Docker daemon  167.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_111701
20200921_111702 - Build completed successfully.


Already up to date.
[master 50e2861] Automatic build 20200921_111701
 1 file changed, 62 insertions(+)
20200921_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200921_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_111718 - Docker push completed successfully.


20200921_111718 - All completed successfully
20200921_121701 - Starting Build.

Sending build context to Docker daemon  167.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_121701
20200921_121702 - Build completed successfully.


Already up to date.
[master 4186675] Automatic build 20200921_121701
 1 file changed, 63 insertions(+)
20200921_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200921_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_121719 - Docker push completed successfully.


20200921_121719 - All completed successfully
20200921_131701 - Starting Build.

Sending build context to Docker daemon  167.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_131701
20200921_131702 - Build completed successfully.


Already up to date.
[master 245b7b2] Automatic build 20200921_131701
 1 file changed, 62 insertions(+)
20200921_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_131721 - Docker push completed successfully.


20200921_131721 - All completed successfully
20200921_141701 - Starting Build.

Sending build context to Docker daemon  168.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_141701
20200921_141702 - Build completed successfully.


Already up to date.
[master 7b28851] Automatic build 20200921_141701
 1 file changed, 62 insertions(+)
20200921_141715 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200921_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_141725 - Docker push completed successfully.


20200921_141725 - All completed successfully
20200921_151701 - Starting Build.

Sending build context to Docker daemon  168.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_151701
20200921_151703 - Build completed successfully.


Already up to date.
[master 9300c43] Automatic build 20200921_151701
 1 file changed, 63 insertions(+)
20200921_151715 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200921_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_151731 - Docker push completed successfully.


20200921_151731 - All completed successfully
20200921_161701 - Starting Build.

Sending build context to Docker daemon  168.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_161701
20200921_161703 - Build completed successfully.


Already up to date.
[master 296034b] Automatic build 20200921_161701
 1 file changed, 63 insertions(+)
20200921_161713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_161721 - Docker push completed successfully.


20200921_161721 - All completed successfully
20200921_171701 - Starting Build.

Sending build context to Docker daemon  168.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_171701
20200921_171702 - Build completed successfully.


Already up to date.
[master 4b6fcc2] Automatic build 20200921_171701
 1 file changed, 63 insertions(+)
20200921_171714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200921_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_171725 - Docker push completed successfully.


20200921_171725 - All completed successfully
20200921_181701 - Starting Build.

Sending build context to Docker daemon  169.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_181701
20200921_181702 - Build completed successfully.


Already up to date.
[master 1db2df2] Automatic build 20200921_181701
 1 file changed, 61 insertions(+)
20200921_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200921_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_181719 - Docker push completed successfully.


20200921_181719 - All completed successfully
20200921_191701 - Starting Build.

Sending build context to Docker daemon  169.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_191701
20200921_191704 - Build completed successfully.


Already up to date.
[master be09ba6] Automatic build 20200921_191701
 1 file changed, 63 insertions(+)
20200921_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200921_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_191720 - Docker push completed successfully.


20200921_191720 - All completed successfully
20200921_201701 - Starting Build.

Sending build context to Docker daemon  169.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_201701
20200921_201702 - Build completed successfully.


Already up to date.
[master 5684749] Automatic build 20200921_201701
 1 file changed, 63 insertions(+)
20200921_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200921_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_201720 - Docker push completed successfully.


20200921_201720 - All completed successfully
20200921_211701 - Starting Build.

Sending build context to Docker daemon  169.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_211701
20200921_211702 - Build completed successfully.


Already up to date.
[master 9368532] Automatic build 20200921_211701
 1 file changed, 62 insertions(+)
20200921_211714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_211722 - Docker push completed successfully.


20200921_211722 - All completed successfully
20200921_221701 - Starting Build.

Sending build context to Docker daemon    170MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_221701
20200921_221704 - Build completed successfully.


Already up to date.
[master f925aa2] Automatic build 20200921_221701
 1 file changed, 63 insertions(+)
20200921_221712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200921_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_221720 - Docker push completed successfully.


20200921_221720 - All completed successfully
20200921_231701 - Starting Build.

Sending build context to Docker daemon  170.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200921_231701
20200921_231704 - Build completed successfully.


Already up to date.
[master 02c97a2] Automatic build 20200921_231701
 1 file changed, 63 insertions(+)
20200921_231713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200921_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200921_231721 - Docker push completed successfully.


20200921_231721 - All completed successfully
20200922_001701 - Starting Build.

Sending build context to Docker daemon  170.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_001701
20200922_001702 - Build completed successfully.


Already up to date.
[master 19ea832] Automatic build 20200922_001701
 1 file changed, 63 insertions(+)
20200922_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200922_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_001719 - Docker push completed successfully.


20200922_001719 - All completed successfully
20200922_011701 - Starting Build.

Sending build context to Docker daemon  170.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_011701
20200922_011702 - Build completed successfully.


Already up to date.
[master 85079fa] Automatic build 20200922_011701
 1 file changed, 63 insertions(+)
20200922_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
4aa65369d2be: Layer already exists
20200922_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_011725 - Docker push completed successfully.


20200922_011725 - All completed successfully
20200922_021701 - Starting Build.

Sending build context to Docker daemon  170.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_021701
20200922_021702 - Build completed successfully.


Already up to date.
[master bc4bd7f] Automatic build 20200922_021701
 1 file changed, 63 insertions(+)
20200922_021714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200922_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_021722 - Docker push completed successfully.


20200922_021722 - All completed successfully
20200922_031701 - Starting Build.

Sending build context to Docker daemon  171.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_031701
20200922_031702 - Build completed successfully.


Already up to date.
[master ffecddd] Automatic build 20200922_031701
 1 file changed, 63 insertions(+)
20200922_031714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200922_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_031722 - Docker push completed successfully.


20200922_031722 - All completed successfully
20200922_041701 - Starting Build.

Sending build context to Docker daemon  171.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_041701
20200922_041701 - Build completed successfully.


Already up to date.
[master afadd1a] Automatic build 20200922_041701
 1 file changed, 63 insertions(+)
20200922_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200922_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_041719 - Docker push completed successfully.


20200922_041719 - All completed successfully
20200922_051701 - Starting Build.

Sending build context to Docker daemon  171.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_051701
20200922_051701 - Build completed successfully.


Already up to date.
[master 0e7e991] Automatic build 20200922_051701
 1 file changed, 63 insertions(+)
20200922_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_051719 - Docker push completed successfully.


20200922_051719 - All completed successfully
20200922_061701 - Starting Build.

Sending build context to Docker daemon  171.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_061701
20200922_061702 - Build completed successfully.


Already up to date.
[master 0456ff5] Automatic build 20200922_061701
 1 file changed, 62 insertions(+)
20200922_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_061719 - Docker push completed successfully.


20200922_061719 - All completed successfully
20200922_071701 - Starting Build.

Sending build context to Docker daemon  172.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_071701
20200922_071702 - Build completed successfully.


Already up to date.
[master e74cdab] Automatic build 20200922_071701
 1 file changed, 63 insertions(+)
20200922_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_071721 - Docker push completed successfully.


20200922_071721 - All completed successfully
20200922_081701 - Starting Build.

Sending build context to Docker daemon  172.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_081701
20200922_081702 - Build completed successfully.


Already up to date.
[master a9bda3a] Automatic build 20200922_081701
 1 file changed, 63 insertions(+)
20200922_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200922_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_081719 - Docker push completed successfully.


20200922_081719 - All completed successfully
20200922_091701 - Starting Build.

Sending build context to Docker daemon  172.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_091701
20200922_091701 - Build completed successfully.


Already up to date.
[master f2b8a3e] Automatic build 20200922_091701
 1 file changed, 63 insertions(+)
20200922_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_091718 - Docker push completed successfully.


20200922_091718 - All completed successfully
20200922_101701 - Starting Build.

Sending build context to Docker daemon  172.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_101701
20200922_101702 - Build completed successfully.


Already up to date.
[master fa9b735] Automatic build 20200922_101701
 1 file changed, 63 insertions(+)
20200922_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200922_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_101720 - Docker push completed successfully.


20200922_101720 - All completed successfully
20200922_111701 - Starting Build.

Sending build context to Docker daemon  173.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_111701
20200922_111702 - Build completed successfully.


Already up to date.
[master 1e497d8] Automatic build 20200922_111701
 1 file changed, 63 insertions(+)
20200922_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200922_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_111723 - Docker push completed successfully.


20200922_111723 - All completed successfully
20200922_121701 - Starting Build.

Sending build context to Docker daemon  173.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_121701
20200922_121702 - Build completed successfully.


Already up to date.
[master fa14ad5] Automatic build 20200922_121701
 1 file changed, 63 insertions(+)
20200922_121712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200922_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_121724 - Docker push completed successfully.


20200922_121724 - All completed successfully
20200922_131701 - Starting Build.

Sending build context to Docker daemon  173.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_131701
20200922_131702 - Build completed successfully.


Already up to date.
[master ef3ed2c] Automatic build 20200922_131701
 1 file changed, 63 insertions(+)
20200922_131712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200922_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_131720 - Docker push completed successfully.


20200922_131720 - All completed successfully
20200922_141701 - Starting Build.

Sending build context to Docker daemon  173.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_141701
20200922_141703 - Build completed successfully.


Already up to date.
[master 07ec657] Automatic build 20200922_141701
 1 file changed, 63 insertions(+)
20200922_141712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200922_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_141720 - Docker push completed successfully.


20200922_141720 - All completed successfully
20200922_161701 - Starting Build.

Sending build context to Docker daemon    174MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_161701
20200922_161703 - Build completed successfully.


Already up to date.
[master b49e7c2] Automatic build 20200922_161701
 1 file changed, 61 insertions(+)
20200922_161713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200922_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_161723 - Docker push completed successfully.


20200922_161723 - All completed successfully
20200922_171701 - Starting Build.

Sending build context to Docker daemon  174.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_171701
20200922_171701 - Build completed successfully.


Already up to date.
[master eff70bf] Automatic build 20200922_171701
 1 file changed, 62 insertions(+)
20200922_171710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200922_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_171718 - Docker push completed successfully.


20200922_171718 - All completed successfully
20200922_181701 - Starting Build.

Sending build context to Docker daemon  174.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_181701
20200922_181701 - Build completed successfully.


Already up to date.
[master d37c162] Automatic build 20200922_181701
 1 file changed, 63 insertions(+)
20200922_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_181718 - Docker push completed successfully.


20200922_181718 - All completed successfully
20200922_191701 - Starting Build.

Sending build context to Docker daemon  174.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_191701
20200922_191702 - Build completed successfully.


Already up to date.
[master 6d346de] Automatic build 20200922_191701
 1 file changed, 63 insertions(+)
20200922_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_191720 - Docker push completed successfully.


20200922_191720 - All completed successfully
20200922_201701 - Starting Build.

Sending build context to Docker daemon  174.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_201701
20200922_201701 - Build completed successfully.


Already up to date.
[master 280c24f] Automatic build 20200922_201701
 1 file changed, 63 insertions(+)
20200922_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200922_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_201721 - Docker push completed successfully.


20200922_201721 - All completed successfully
20200922_211701 - Starting Build.

Sending build context to Docker daemon  175.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_211701
20200922_211702 - Build completed successfully.


Already up to date.
[master 1e3083e] Automatic build 20200922_211701
 1 file changed, 62 insertions(+)
20200922_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200922_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_211719 - Docker push completed successfully.


20200922_211719 - All completed successfully
20200922_221701 - Starting Build.

Sending build context to Docker daemon  175.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_221701
20200922_221702 - Build completed successfully.


Already up to date.
[master 294e4bd] Automatic build 20200922_221701
 1 file changed, 62 insertions(+)
20200922_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_221722 - Docker push completed successfully.


20200922_221722 - All completed successfully
20200922_231701 - Starting Build.

Sending build context to Docker daemon  175.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200922_231701
20200922_231702 - Build completed successfully.


Already up to date.
[master 147edc9] Automatic build 20200922_231701
 1 file changed, 63 insertions(+)
20200922_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200922_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200922_231720 - Docker push completed successfully.


20200922_231720 - All completed successfully
20200923_001701 - Starting Build.

Sending build context to Docker daemon  175.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_001701
20200923_001702 - Build completed successfully.


Already up to date.
[master 41d02b5] Automatic build 20200923_001701
 1 file changed, 63 insertions(+)
20200923_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200923_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_001728 - Docker push completed successfully.


20200923_001728 - All completed successfully
20200923_011701 - Starting Build.

Sending build context to Docker daemon  176.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_011701
20200923_011702 - Build completed successfully.


Already up to date.
[master 9190f12] Automatic build 20200923_011701
 1 file changed, 63 insertions(+)
20200923_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
4aa65369d2be: Layer already exists
20200923_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_011726 - Docker push completed successfully.


20200923_011726 - All completed successfully
20200923_021701 - Starting Build.

Sending build context to Docker daemon  176.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_021701
20200923_021702 - Build completed successfully.


Already up to date.
[master 97227e1] Automatic build 20200923_021701
 1 file changed, 63 insertions(+)
20200923_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200923_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_021719 - Docker push completed successfully.


20200923_021719 - All completed successfully
20200923_031701 - Starting Build.

Sending build context to Docker daemon  176.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_031701
20200923_031702 - Build completed successfully.


Already up to date.
[master b7df17c] Automatic build 20200923_031701
 1 file changed, 63 insertions(+)
20200923_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200923_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_031720 - Docker push completed successfully.


20200923_031720 - All completed successfully
20200923_041701 - Starting Build.

Sending build context to Docker daemon  176.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_041701
20200923_041702 - Build completed successfully.


Already up to date.
[master 5b358c4] Automatic build 20200923_041701
 1 file changed, 63 insertions(+)
20200923_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200923_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_041719 - Docker push completed successfully.


20200923_041719 - All completed successfully
20200923_051701 - Starting Build.

Sending build context to Docker daemon  177.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_051701
20200923_051702 - Build completed successfully.


Already up to date.
[master 43205e5] Automatic build 20200923_051701
 1 file changed, 63 insertions(+)
20200923_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200923_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_051721 - Docker push completed successfully.


20200923_051721 - All completed successfully
20200923_061701 - Starting Build.

Sending build context to Docker daemon  177.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_061701
20200923_061702 - Build completed successfully.


Already up to date.
[master 2f5223b] Automatic build 20200923_061701
 1 file changed, 63 insertions(+)
20200923_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200923_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_061719 - Docker push completed successfully.


20200923_061719 - All completed successfully
20200923_071701 - Starting Build.

Sending build context to Docker daemon  177.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_071701
20200923_071702 - Build completed successfully.


Already up to date.
[master d4beffb] Automatic build 20200923_071701
 1 file changed, 63 insertions(+)
20200923_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200923_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_071719 - Docker push completed successfully.


20200923_071719 - All completed successfully
20200923_081701 - Starting Build.

Sending build context to Docker daemon  177.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_081701
20200923_081702 - Build completed successfully.


Already up to date.
[master d490945] Automatic build 20200923_081701
 1 file changed, 63 insertions(+)
20200923_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200923_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_081721 - Docker push completed successfully.


20200923_081721 - All completed successfully
20200923_091701 - Starting Build.

Sending build context to Docker daemon    178MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_091701
20200923_091701 - Build completed successfully.


Already up to date.
[master 2ef46b6] Automatic build 20200923_091701
 1 file changed, 62 insertions(+)
20200923_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200923_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_091720 - Docker push completed successfully.


20200923_091720 - All completed successfully
20200923_101701 - Starting Build.

Sending build context to Docker daemon  178.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_101701
20200923_101702 - Build completed successfully.


Already up to date.
[master 6146f2b] Automatic build 20200923_101701
 1 file changed, 63 insertions(+)
20200923_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200923_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_101719 - Docker push completed successfully.


20200923_101719 - All completed successfully
20200923_111701 - Starting Build.

Sending build context to Docker daemon  178.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_111701
20200923_111702 - Build completed successfully.


Already up to date.
[master 4152018] Automatic build 20200923_111701
 1 file changed, 63 insertions(+)
20200923_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200923_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_111719 - Docker push completed successfully.


20200923_111719 - All completed successfully
20200923_121701 - Starting Build.

Sending build context to Docker daemon  178.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_121701
20200923_121702 - Build completed successfully.


Already up to date.
[master 7f1f8cd] Automatic build 20200923_121701
 1 file changed, 63 insertions(+)
20200923_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200923_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_121720 - Docker push completed successfully.


20200923_121720 - All completed successfully
20200923_131701 - Starting Build.

Sending build context to Docker daemon    179MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_131701
20200923_131702 - Build completed successfully.


Already up to date.
[master abc182b] Automatic build 20200923_131701
 1 file changed, 63 insertions(+)
20200923_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200923_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_131719 - Docker push completed successfully.


20200923_131719 - All completed successfully
20200923_141701 - Starting Build.

Sending build context to Docker daemon  179.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_141701
20200923_141702 - Build completed successfully.


Already up to date.
[master f83e24c] Automatic build 20200923_141701
 1 file changed, 63 insertions(+)
20200923_141713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200923_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_141722 - Docker push completed successfully.


20200923_141722 - All completed successfully
20200923_151701 - Starting Build.

Sending build context to Docker daemon  179.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_151701
20200923_151702 - Build completed successfully.


Already up to date.
[master 785e5f4] Automatic build 20200923_151701
 1 file changed, 62 insertions(+)
20200923_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200923_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_151725 - Docker push completed successfully.


20200923_151725 - All completed successfully
20200923_161701 - Starting Build.

Sending build context to Docker daemon  179.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_161701
20200923_161702 - Build completed successfully.


Already up to date.
[master de32aad] Automatic build 20200923_161701
 1 file changed, 63 insertions(+)
20200923_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200923_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_161720 - Docker push completed successfully.


20200923_161720 - All completed successfully
20200923_171701 - Starting Build.

Sending build context to Docker daemon    180MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_171701
20200923_171702 - Build completed successfully.


Already up to date.
[master 2a03384] Automatic build 20200923_171701
 1 file changed, 61 insertions(+)
20200923_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200923_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_171720 - Docker push completed successfully.


20200923_171720 - All completed successfully
20200923_181701 - Starting Build.

Sending build context to Docker daemon  180.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_181701
20200923_181702 - Build completed successfully.


Already up to date.
[master 6cb7187] Automatic build 20200923_181701
 1 file changed, 63 insertions(+)
20200923_181713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200923_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_181723 - Docker push completed successfully.


20200923_181723 - All completed successfully
20200923_191701 - Starting Build.

Sending build context to Docker daemon  180.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_191701
20200923_191702 - Build completed successfully.


Already up to date.
[master 5a9220a] Automatic build 20200923_191701
 1 file changed, 63 insertions(+)
20200923_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200923_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_191720 - Docker push completed successfully.


20200923_191720 - All completed successfully
20200923_201701 - Starting Build.

Sending build context to Docker daemon  180.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_201701
20200923_201702 - Build completed successfully.


Already up to date.
[master 4299105] Automatic build 20200923_201701
 1 file changed, 63 insertions(+)
20200923_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200923_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_201721 - Docker push completed successfully.


20200923_201721 - All completed successfully
20200923_211701 - Starting Build.

Sending build context to Docker daemon  180.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_211701
20200923_211702 - Build completed successfully.


Already up to date.
[master f4a8892] Automatic build 20200923_211701
 1 file changed, 62 insertions(+)
20200923_211713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200923_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_211722 - Docker push completed successfully.


20200923_211722 - All completed successfully
20200923_221701 - Starting Build.

Sending build context to Docker daemon  181.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_221701
20200923_221702 - Build completed successfully.


Already up to date.
[master add2c94] Automatic build 20200923_221701
 1 file changed, 63 insertions(+)
20200923_221712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200923_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_221722 - Docker push completed successfully.


20200923_221722 - All completed successfully
20200923_231701 - Starting Build.

Sending build context to Docker daemon  181.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200923_231701
20200923_231702 - Build completed successfully.


Already up to date.
[master f4dc78f] Automatic build 20200923_231701
 1 file changed, 63 insertions(+)
20200923_231712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200923_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200923_231723 - Docker push completed successfully.


20200923_231723 - All completed successfully
20200924_001701 - Starting Build.

Sending build context to Docker daemon  181.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_001701
20200924_001702 - Build completed successfully.


Already up to date.
[master 1e097ab] Automatic build 20200924_001701
 1 file changed, 63 insertions(+)
20200924_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200924_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_001720 - Docker push completed successfully.


20200924_001720 - All completed successfully
20200924_011701 - Starting Build.

Sending build context to Docker daemon  181.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_011701
20200924_011702 - Build completed successfully.


Already up to date.
[master 9e5172a] Automatic build 20200924_011701
 1 file changed, 63 insertions(+)
20200924_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200924_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_011728 - Docker push completed successfully.


20200924_011728 - All completed successfully
20200924_021701 - Starting Build.

Sending build context to Docker daemon  182.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_021701
20200924_021702 - Build completed successfully.


Already up to date.
[master bd23f8a] Automatic build 20200924_021701
 1 file changed, 63 insertions(+)
20200924_021712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200924_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_021723 - Docker push completed successfully.


20200924_021723 - All completed successfully
20200924_031701 - Starting Build.

Sending build context to Docker daemon  182.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_031701
20200924_031702 - Build completed successfully.


Already up to date.
[master 410ad60] Automatic build 20200924_031701
 1 file changed, 63 insertions(+)
20200924_031714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200924_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_031722 - Docker push completed successfully.


20200924_031722 - All completed successfully
20200924_041701 - Starting Build.

Sending build context to Docker daemon  182.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_041701
20200924_041702 - Build completed successfully.


Already up to date.
[master cd74730] Automatic build 20200924_041701
 1 file changed, 62 insertions(+)
20200924_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200924_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_041718 - Docker push completed successfully.


20200924_041718 - All completed successfully
20200924_051701 - Starting Build.

Sending build context to Docker daemon  182.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_051701
20200924_051702 - Build completed successfully.


Already up to date.
[master 02c6340] Automatic build 20200924_051701
 1 file changed, 63 insertions(+)
20200924_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200924_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_051719 - Docker push completed successfully.


20200924_051719 - All completed successfully
20200924_061701 - Starting Build.

Sending build context to Docker daemon  183.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_061701
20200924_061702 - Build completed successfully.


Already up to date.
[master 1ab47d7] Automatic build 20200924_061701
 1 file changed, 63 insertions(+)
20200924_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200924_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_061720 - Docker push completed successfully.


20200924_061720 - All completed successfully
20200924_071701 - Starting Build.

Sending build context to Docker daemon  183.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_071701
20200924_071702 - Build completed successfully.


Already up to date.
[master e2abb71] Automatic build 20200924_071701
 1 file changed, 63 insertions(+)
20200924_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200924_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_071718 - Docker push completed successfully.


20200924_071718 - All completed successfully
20200924_081701 - Starting Build.

Sending build context to Docker daemon  183.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_081701
20200924_081702 - Build completed successfully.


Already up to date.
[master 3365c08] Automatic build 20200924_081701
 1 file changed, 62 insertions(+)
20200924_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
20200924_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_081721 - Docker push completed successfully.


20200924_081721 - All completed successfully
20200924_091701 - Starting Build.

Sending build context to Docker daemon  183.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_091701
20200924_091702 - Build completed successfully.


Already up to date.
[master b2d1814] Automatic build 20200924_091701
 1 file changed, 61 insertions(+)
20200924_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200924_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_091719 - Docker push completed successfully.


20200924_091719 - All completed successfully
20200924_101701 - Starting Build.

Sending build context to Docker daemon    184MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_101701
20200924_101702 - Build completed successfully.


Already up to date.
[master d2b1748] Automatic build 20200924_101701
 1 file changed, 63 insertions(+)
20200924_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200924_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_101719 - Docker push completed successfully.


20200924_101719 - All completed successfully
20200924_111701 - Starting Build.

Sending build context to Docker daemon  184.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_111701
20200924_111702 - Build completed successfully.


Already up to date.
[master c87eef8] Automatic build 20200924_111701
 1 file changed, 63 insertions(+)
20200924_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200924_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_111718 - Docker push completed successfully.


20200924_111718 - All completed successfully
20200924_121701 - Starting Build.

Sending build context to Docker daemon  184.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_121701
20200924_121702 - Build completed successfully.


Already up to date.
[master 33fea63] Automatic build 20200924_121701
 1 file changed, 63 insertions(+)
20200924_121716 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200924_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_121724 - Docker push completed successfully.


20200924_121724 - All completed successfully
20200924_131701 - Starting Build.

Sending build context to Docker daemon  184.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_131701
20200924_131702 - Build completed successfully.


Already up to date.
[master 1ef58c5] Automatic build 20200924_131701
 1 file changed, 63 insertions(+)
20200924_131715 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200924_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_131725 - Docker push completed successfully.


20200924_131725 - All completed successfully
20200924_141701 - Starting Build.

Sending build context to Docker daemon    185MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_141701
20200924_141702 - Build completed successfully.


Already up to date.
[master ee9d207] Automatic build 20200924_141701
 1 file changed, 63 insertions(+)
20200924_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200924_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_141722 - Docker push completed successfully.


20200924_141722 - All completed successfully
20200924_151701 - Starting Build.

Sending build context to Docker daemon  185.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_151701
20200924_151702 - Build completed successfully.


Already up to date.
[master 1ef9748] Automatic build 20200924_151701
 1 file changed, 63 insertions(+)
20200924_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200924_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_151721 - Docker push completed successfully.


20200924_151721 - All completed successfully
20200924_161701 - Starting Build.

Sending build context to Docker daemon  185.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_161701
20200924_161702 - Build completed successfully.


Already up to date.
[master ac7245e] Automatic build 20200924_161701
 1 file changed, 63 insertions(+)
20200924_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200924_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_161721 - Docker push completed successfully.


20200924_161721 - All completed successfully
20200924_171701 - Starting Build.

Sending build context to Docker daemon  185.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_171701
20200924_171702 - Build completed successfully.


Already up to date.
[master 8299052] Automatic build 20200924_171701
 1 file changed, 63 insertions(+)
20200924_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200924_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_171719 - Docker push completed successfully.


20200924_171719 - All completed successfully
20200924_181701 - Starting Build.

Sending build context to Docker daemon    186MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_181701
20200924_181702 - Build completed successfully.


Already up to date.
[master c2118e9] Automatic build 20200924_181701
 1 file changed, 63 insertions(+)
20200924_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200924_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_181721 - Docker push completed successfully.


20200924_181721 - All completed successfully
20200924_191701 - Starting Build.

Sending build context to Docker daemon  186.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_191701
20200924_191702 - Build completed successfully.


Already up to date.
[master 50f78d9] Automatic build 20200924_191701
 1 file changed, 63 insertions(+)
20200924_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200924_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_191722 - Docker push completed successfully.


20200924_191722 - All completed successfully
20200924_201701 - Starting Build.

Sending build context to Docker daemon  186.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_201701
20200924_201702 - Build completed successfully.


Already up to date.
[master 4af5dc7] Automatic build 20200924_201701
 1 file changed, 63 insertions(+)
20200924_201712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200924_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_201721 - Docker push completed successfully.


20200924_201721 - All completed successfully
20200924_211701 - Starting Build.

Sending build context to Docker daemon  186.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_211701
20200924_211704 - Build completed successfully.


Already up to date.
[master 642047c] Automatic build 20200924_211701
 1 file changed, 61 insertions(+)
20200924_211712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200924_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_211720 - Docker push completed successfully.


20200924_211720 - All completed successfully
20200924_221701 - Starting Build.

Sending build context to Docker daemon  186.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_221701
20200924_221704 - Build completed successfully.


Already up to date.
[master aa4fcc4] Automatic build 20200924_221701
 1 file changed, 63 insertions(+)
20200924_221712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
b343ddcee16c: Waiting
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200924_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_221720 - Docker push completed successfully.


20200924_221720 - All completed successfully
20200924_231701 - Starting Build.

Sending build context to Docker daemon  187.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200924_231701
20200924_231705 - Build completed successfully.


Already up to date.
[master 53cf83e] Automatic build 20200924_231701
 1 file changed, 63 insertions(+)
20200924_231713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200924_231701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200924_231722 - Docker push completed successfully.


20200924_231722 - All completed successfully
20200925_001701 - Starting Build.

Sending build context to Docker daemon  187.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_001701
20200925_001706 - Build completed successfully.


Already up to date.
[master 5e505dc] Automatic build 20200925_001701
 1 file changed, 63 insertions(+)
20200925_001715 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200925_001701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_001733 - Docker push completed successfully.


20200925_001733 - All completed successfully
20200925_011701 - Starting Build.

Sending build context to Docker daemon  187.7MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_011701
20200925_011704 - Build completed successfully.


Already up to date.
[master 1df7969] Automatic build 20200925_011701
 1 file changed, 63 insertions(+)
20200925_011713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
0d05320c72ac: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200925_011701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_011730 - Docker push completed successfully.


20200925_011730 - All completed successfully
20200925_021701 - Starting Build.

Sending build context to Docker daemon  187.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_021701
20200925_021702 - Build completed successfully.


Already up to date.
[master b46a86e] Automatic build 20200925_021701
 1 file changed, 63 insertions(+)
20200925_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200925_021701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_021722 - Docker push completed successfully.


20200925_021722 - All completed successfully
20200925_031701 - Starting Build.

Sending build context to Docker daemon  188.2MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_031701
20200925_031702 - Build completed successfully.


Already up to date.
[master 2f06597] Automatic build 20200925_031701
 1 file changed, 62 insertions(+)
20200925_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200925_031701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_031720 - Docker push completed successfully.


20200925_031720 - All completed successfully
20200925_041701 - Starting Build.

Sending build context to Docker daemon  188.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_041701
20200925_041702 - Build completed successfully.


Already up to date.
[master ef25235] Automatic build 20200925_041701
 1 file changed, 63 insertions(+)
20200925_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200925_041701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_041719 - Docker push completed successfully.


20200925_041719 - All completed successfully
20200925_051701 - Starting Build.

Sending build context to Docker daemon  188.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_051701
20200925_051702 - Build completed successfully.


Already up to date.
[master e7beca5] Automatic build 20200925_051701
 1 file changed, 63 insertions(+)
20200925_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200925_051701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_051719 - Docker push completed successfully.


20200925_051719 - All completed successfully
20200925_061701 - Starting Build.

Sending build context to Docker daemon  188.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_061701
20200925_061702 - Build completed successfully.


Already up to date.
[master db5a2f6] Automatic build 20200925_061701
 1 file changed, 62 insertions(+)
20200925_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200925_061701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_061719 - Docker push completed successfully.


20200925_061719 - All completed successfully
20200925_071701 - Starting Build.

Sending build context to Docker daemon  189.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_071701
20200925_071702 - Build completed successfully.


Already up to date.
[master bfae5a8] Automatic build 20200925_071701
 1 file changed, 62 insertions(+)
20200925_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
929ffb29f4ca: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200925_071701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_071718 - Docker push completed successfully.


20200925_071718 - All completed successfully
20200925_081701 - Starting Build.

Sending build context to Docker daemon  189.4MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_081701
20200925_081702 - Build completed successfully.


Already up to date.
[master c49f457] Automatic build 20200925_081701
 1 file changed, 63 insertions(+)
20200925_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200925_081701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_081718 - Docker push completed successfully.


20200925_081718 - All completed successfully
20200925_091701 - Starting Build.

Sending build context to Docker daemon  189.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_091701
20200925_091702 - Build completed successfully.


Already up to date.
[master ce59b13] Automatic build 20200925_091701
 1 file changed, 63 insertions(+)
20200925_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
20200925_091701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_091718 - Docker push completed successfully.


20200925_091718 - All completed successfully
20200925_101701 - Starting Build.

Sending build context to Docker daemon  189.9MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_101701
20200925_101702 - Build completed successfully.


Already up to date.
[master 3e8bf3b] Automatic build 20200925_101701
 1 file changed, 62 insertions(+)
20200925_101710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200925_101701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_101718 - Docker push completed successfully.


20200925_101718 - All completed successfully
20200925_111701 - Starting Build.

Sending build context to Docker daemon  190.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_111701
20200925_111702 - Build completed successfully.


Already up to date.
[master 63a07d3] Automatic build 20200925_111701
 1 file changed, 63 insertions(+)
20200925_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200925_111701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_111718 - Docker push completed successfully.


20200925_111718 - All completed successfully
20200925_121701 - Starting Build.

Sending build context to Docker daemon  190.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_121701
20200925_121702 - Build completed successfully.


Already up to date.
[master 1a08b3a] Automatic build 20200925_121701
 1 file changed, 62 insertions(+)
20200925_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200925_121701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_121719 - Docker push completed successfully.


20200925_121719 - All completed successfully
20200925_131701 - Starting Build.

Sending build context to Docker daemon  190.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_131701
20200925_131702 - Build completed successfully.


Already up to date.
[master 2ff467b] Automatic build 20200925_131701
 1 file changed, 63 insertions(+)
20200925_131713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200925_131701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_131721 - Docker push completed successfully.


20200925_131721 - All completed successfully
20200925_141701 - Starting Build.

Sending build context to Docker daemon  190.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_141701
20200925_141702 - Build completed successfully.


Already up to date.
[master 6150ab3] Automatic build 20200925_141701
 1 file changed, 63 insertions(+)
20200925_141712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200925_141701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_141721 - Docker push completed successfully.


20200925_141721 - All completed successfully
20200925_151701 - Starting Build.

Sending build context to Docker daemon  191.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_151701
20200925_151702 - Build completed successfully.


Already up to date.
[master f87841c] Automatic build 20200925_151701
 1 file changed, 63 insertions(+)
20200925_151713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200925_151701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_151724 - Docker push completed successfully.


20200925_151724 - All completed successfully
20200925_161701 - Starting Build.

Sending build context to Docker daemon  191.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_161701
20200925_161702 - Build completed successfully.


Already up to date.
[master 15cde61] Automatic build 20200925_161701
 1 file changed, 63 insertions(+)
20200925_161712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
50644c29ef5a: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
20200925_161701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_161723 - Docker push completed successfully.


20200925_161723 - All completed successfully
20200925_171701 - Starting Build.

Sending build context to Docker daemon  191.6MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_171701
20200925_171702 - Build completed successfully.


Already up to date.
[master 5ddf3b3] Automatic build 20200925_171701
 1 file changed, 63 insertions(+)
20200925_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
ca957f31f870: Layer already exists
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
20200925_171701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_171721 - Docker push completed successfully.


20200925_171721 - All completed successfully
20200925_181701 - Starting Build.

Sending build context to Docker daemon  191.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_181701
20200925_181702 - Build completed successfully.


Already up to date.
[master 2d8739c] Automatic build 20200925_181701
 1 file changed, 62 insertions(+)
20200925_181713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
f0d20cb8103a: Waiting
50644c29ef5a: Waiting
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200925_181701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_181722 - Docker push completed successfully.


20200925_181722 - All completed successfully
20200925_191701 - Starting Build.

Sending build context to Docker daemon  192.1MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_191701
20200925_191704 - Build completed successfully.


Already up to date.
[master 53b3674] Automatic build 20200925_191701
 1 file changed, 63 insertions(+)
20200925_191714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200925_191701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_191725 - Docker push completed successfully.


20200925_191725 - All completed successfully
20200925_201701 - Starting Build.

Sending build context to Docker daemon  192.3MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_201701
20200925_201703 - Build completed successfully.


Already up to date.
[master 06796dd] Automatic build 20200925_201701
 1 file changed, 63 insertions(+)
20200925_201713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
929ffb29f4ca: Layer already exists
4aa65369d2be: Layer already exists
ca957f31f870: Layer already exists
eb2e93e4340b: Layer already exists
0d05320c72ac: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200925_201701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_201724 - Docker push completed successfully.


20200925_201724 - All completed successfully
20200925_211701 - Starting Build.

Sending build context to Docker daemon  192.5MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_211701
20200925_211703 - Build completed successfully.


Already up to date.
[master a85dd6d] Automatic build 20200925_211701
 1 file changed, 63 insertions(+)
20200925_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Waiting
50644c29ef5a: Waiting
f0d20cb8103a: Waiting
4aa65369d2be: Layer already exists
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
0d05320c72ac: Layer already exists
929ffb29f4ca: Layer already exists
b343ddcee16c: Layer already exists
f0d20cb8103a: Layer already exists
50644c29ef5a: Layer already exists
20200925_211701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_211719 - Docker push completed successfully.


20200925_211719 - All completed successfully
20200925_221701 - Starting Build.

Sending build context to Docker daemon  192.8MB
Step 1/9 : FROM alpine:latest
 ---> a24bb4013296
Step 2/9 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/9 : RUN apk add --no-cache     make git gdbm gdbm-dev util-linux libffi libffi-dbg libffi-dev ncurses5-widec-libs     xz xz-libs xz-dev libbz2 ncurses5-libs tk tk-dev tcl tcl-dev gcc libc-dev llvm     readline-dev sqlite sqlite-dev sqlite-libs zlib-dev libuuid openssl-dev libc-utils
 ---> Using cache
 ---> 03c9da2546a8
Step 4/9 : RUN wget "https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tar.xz"
 ---> Using cache
 ---> a0268bc24f9e
Step 5/9 : RUN     tar -Jxvf ./Python* &&     rm -rf ./Python*.tar.xz &&     mv ./Python* ./python &&     chmod 755 -R /python
 ---> Using cache
 ---> 52af54a6bcbc
Step 6/9 : RUN cd /python && ./configure
 ---> Using cache
 ---> 8b66746cf270
Step 7/9 : RUN cd /python && make -j 8
 ---> Using cache
 ---> 7309f1176b24
Step 8/9 : RUN cd /python && make -j 8 install
 ---> Using cache
 ---> f6fbb905d010
Step 9/9 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 1d40fbfc04b6
Successfully built 1d40fbfc04b6
Successfully tagged blairy/python_3.8.5:20200925_221701
20200925_221702 - Build completed successfully.


Already up to date.
[master f003f05] Automatic build 20200925_221701
 2 files changed, 63 insertions(+)
 create mode 100644 .Dockerfile.swp
20200925_221710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
929ffb29f4ca: Preparing
4aa65369d2be: Preparing
eb2e93e4340b: Preparing
ca957f31f870: Preparing
0d05320c72ac: Preparing
f0d20cb8103a: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
f0d20cb8103a: Waiting
b343ddcee16c: Waiting
50644c29ef5a: Waiting
eb2e93e4340b: Layer already exists
ca957f31f870: Layer already exists
929ffb29f4ca: Layer already exists
0d05320c72ac: Layer already exists
4aa65369d2be: Layer already exists
f0d20cb8103a: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200925_221701: digest: sha256:c9eea49953157635ededd03ab4685999916c7b2d416f6d86eb465bf67779f6e8 size: 2009
20200925_221719 - Docker push completed successfully.


20200925_221719 - All completed successfully
20200925_224147 - Starting Build.

20200925_224147 - Build FAILED!! Aborting.


20200925_224150 - Starting Build.

Sending build context to Docker daemon    193MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200925_224150
20200925_224151 - Build completed successfully.


Already up to date.
[master 314cfe5] Automatic build 20200925_224150
 4 files changed, 77 insertions(+), 17 deletions(-)
 delete mode 100644 .Dockerfile.swp
 create mode 100644 .gitignore
 rewrite Dockerfile (88%)
20200925_224159 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Pushed
20200925_224150: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200925_224538 - Docker push completed successfully.


20200925_224538 - All completed successfully
20200925_231701 - Starting Build.

Sending build context to Docker daemon  193.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200925_231701
20200925_231702 - Build completed successfully.


Already up to date.
[master 152dde7] Automatic build 20200925_231701
 1 file changed, 38 insertions(+)
20200925_231710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200925_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200925_231716 - Docker push completed successfully.


20200925_231716 - All completed successfully
20200926_001701 - Starting Build.

Sending build context to Docker daemon  193.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_001701
20200926_001705 - Build completed successfully.


Already up to date.
[master 69fc0ad] Automatic build 20200926_001701
 1 file changed, 35 insertions(+)
20200926_001713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200926_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_001719 - Docker push completed successfully.


20200926_001719 - All completed successfully
20200926_011701 - Starting Build.

Sending build context to Docker daemon  193.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_011701
20200926_011705 - Build completed successfully.


Already up to date.
[master 84a08db] Automatic build 20200926_011701
 1 file changed, 35 insertions(+)
20200926_011713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200926_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_011719 - Docker push completed successfully.


20200926_011719 - All completed successfully
20200926_021701 - Starting Build.

Sending build context to Docker daemon    194MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_021701
20200926_021705 - Build completed successfully.


Already up to date.
[master f2ff868] Automatic build 20200926_021701
 1 file changed, 35 insertions(+)
20200926_021713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200926_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_021720 - Docker push completed successfully.


20200926_021720 - All completed successfully
20200926_031701 - Starting Build.

Sending build context to Docker daemon  194.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_031701
20200926_031705 - Build completed successfully.


Already up to date.
[master 6025f6a] Automatic build 20200926_031701
 1 file changed, 35 insertions(+)
20200926_031713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200926_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_031719 - Docker push completed successfully.


20200926_031719 - All completed successfully
20200926_041701 - Starting Build.

Sending build context to Docker daemon  194.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_041701
20200926_041702 - Build completed successfully.


Already up to date.
[master 84cbcef] Automatic build 20200926_041701
 1 file changed, 35 insertions(+)
20200926_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200926_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_041716 - Docker push completed successfully.


20200926_041716 - All completed successfully
20200926_051701 - Starting Build.

Sending build context to Docker daemon  194.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_051701
20200926_051702 - Build completed successfully.


Already up to date.
[master d82fe1a] Automatic build 20200926_051701
 1 file changed, 35 insertions(+)
20200926_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200926_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_051717 - Docker push completed successfully.


20200926_051717 - All completed successfully
20200926_061701 - Starting Build.

Sending build context to Docker daemon    195MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_061701
20200926_061703 - Build completed successfully.


Already up to date.
[master bba792f] Automatic build 20200926_061701
 1 file changed, 35 insertions(+)
20200926_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200926_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_061718 - Docker push completed successfully.


20200926_061718 - All completed successfully
20200926_071701 - Starting Build.

Sending build context to Docker daemon  195.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_071701
20200926_071702 - Build completed successfully.


Already up to date.
[master a140b58] Automatic build 20200926_071701
 1 file changed, 35 insertions(+)
20200926_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200926_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_071716 - Docker push completed successfully.


20200926_071716 - All completed successfully
20200926_081701 - Starting Build.

Sending build context to Docker daemon  195.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_081701
20200926_081703 - Build completed successfully.


Already up to date.
[master a0b682f] Automatic build 20200926_081701
 1 file changed, 35 insertions(+)
20200926_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200926_081701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_081718 - Docker push completed successfully.


20200926_081718 - All completed successfully
20200926_091701 - Starting Build.

Sending build context to Docker daemon  195.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_091701
20200926_091703 - Build completed successfully.


Already up to date.
[master b233e36] Automatic build 20200926_091701
 1 file changed, 35 insertions(+)
20200926_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200926_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_091718 - Docker push completed successfully.


20200926_091718 - All completed successfully
20200926_101701 - Starting Build.

Sending build context to Docker daemon    196MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_101701
20200926_101703 - Build completed successfully.


Already up to date.
[master fbdf9ab] Automatic build 20200926_101701
 1 file changed, 35 insertions(+)
20200926_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200926_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_101718 - Docker push completed successfully.


20200926_101718 - All completed successfully
20200926_111701 - Starting Build.

Sending build context to Docker daemon  196.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_111701
20200926_111702 - Build completed successfully.


Already up to date.
[master 0767c05] Automatic build 20200926_111701
 1 file changed, 35 insertions(+)
20200926_111710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200926_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_111716 - Docker push completed successfully.


20200926_111716 - All completed successfully
20200926_121701 - Starting Build.

Sending build context to Docker daemon  196.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_121701
20200926_121702 - Build completed successfully.


Already up to date.
[master c058cbf] Automatic build 20200926_121701
 1 file changed, 35 insertions(+)
20200926_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200926_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_121718 - Docker push completed successfully.


20200926_121718 - All completed successfully
20200926_131701 - Starting Build.

Sending build context to Docker daemon  196.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_131701
20200926_131702 - Build completed successfully.


Already up to date.
[master 98cd54e] Automatic build 20200926_131701
 1 file changed, 35 insertions(+)
20200926_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200926_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_131718 - Docker push completed successfully.


20200926_131718 - All completed successfully
20200926_141701 - Starting Build.

Sending build context to Docker daemon    197MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_141701
20200926_141702 - Build completed successfully.


Already up to date.
[master 4b5cea7] Automatic build 20200926_141701
 1 file changed, 35 insertions(+)
20200926_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200926_141701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_141717 - Docker push completed successfully.


20200926_141717 - All completed successfully
20200926_151701 - Starting Build.

Sending build context to Docker daemon  197.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_151701
20200926_151701 - Build completed successfully.


Already up to date.
[master 7da41e3] Automatic build 20200926_151701
 1 file changed, 35 insertions(+)
20200926_151710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200926_151701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_151717 - Docker push completed successfully.


20200926_151717 - All completed successfully
20200926_161701 - Starting Build.

Sending build context to Docker daemon  197.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_161701
20200926_161705 - Build completed successfully.


Already up to date.
[master 2446435] Automatic build 20200926_161701
 1 file changed, 35 insertions(+)
20200926_161714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200926_161701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_161723 - Docker push completed successfully.


20200926_161723 - All completed successfully
20200926_171701 - Starting Build.

Sending build context to Docker daemon  197.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_171701
20200926_171702 - Build completed successfully.


Already up to date.
[master 1876eda] Automatic build 20200926_171701
 1 file changed, 35 insertions(+)
20200926_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200926_171701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_171717 - Docker push completed successfully.


20200926_171717 - All completed successfully
20200926_181701 - Starting Build.

Sending build context to Docker daemon  197.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_181701
20200926_181706 - Build completed successfully.


Already up to date.
[master e93da03] Automatic build 20200926_181701
 1 file changed, 35 insertions(+)
20200926_181714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200926_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_181720 - Docker push completed successfully.


20200926_181720 - All completed successfully
20200926_191701 - Starting Build.

Sending build context to Docker daemon  198.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_191701
20200926_191702 - Build completed successfully.


Already up to date.
[master 0f4ad94] Automatic build 20200926_191701
 1 file changed, 35 insertions(+)
20200926_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200926_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_191718 - Docker push completed successfully.


20200926_191718 - All completed successfully
20200926_201701 - Starting Build.

Sending build context to Docker daemon  198.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_201701
20200926_201702 - Build completed successfully.


Already up to date.
[master 742a3d1] Automatic build 20200926_201701
 1 file changed, 35 insertions(+)
20200926_201710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200926_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_201717 - Docker push completed successfully.


20200926_201717 - All completed successfully
20200926_211701 - Starting Build.

Sending build context to Docker daemon  198.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_211701
20200926_211702 - Build completed successfully.


Already up to date.
[master 4ddbb40] Automatic build 20200926_211701
 1 file changed, 35 insertions(+)
20200926_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200926_211701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_211717 - Docker push completed successfully.


20200926_211717 - All completed successfully
20200926_221701 - Starting Build.

Sending build context to Docker daemon  198.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_221701
20200926_221702 - Build completed successfully.


Already up to date.
[master 4bec802] Automatic build 20200926_221701
 1 file changed, 35 insertions(+)
20200926_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200926_221701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_221722 - Docker push completed successfully.


20200926_221722 - All completed successfully
20200926_231701 - Starting Build.

Sending build context to Docker daemon  199.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200926_231701
20200926_231702 - Build completed successfully.


Already up to date.
[master e4318ec] Automatic build 20200926_231701
 1 file changed, 35 insertions(+)
20200926_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200926_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200926_231719 - Docker push completed successfully.


20200926_231719 - All completed successfully
20200927_001701 - Starting Build.

Sending build context to Docker daemon  199.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_001701
20200927_001702 - Build completed successfully.


Already up to date.
[master ac1ecab] Automatic build 20200927_001701
 1 file changed, 35 insertions(+)
20200927_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200927_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_001718 - Docker push completed successfully.


20200927_001718 - All completed successfully
20200927_011701 - Starting Build.

Sending build context to Docker daemon  199.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_011701
20200927_011702 - Build completed successfully.


Already up to date.
[master 9a72269] Automatic build 20200927_011701
 1 file changed, 35 insertions(+)
20200927_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200927_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_011717 - Docker push completed successfully.


20200927_011717 - All completed successfully
20200927_021701 - Starting Build.

Sending build context to Docker daemon  199.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_021701
20200927_021702 - Build completed successfully.


Already up to date.
[master d63a2f4] Automatic build 20200927_021701
 1 file changed, 35 insertions(+)
20200927_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200927_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_021718 - Docker push completed successfully.


20200927_021718 - All completed successfully
20200927_031701 - Starting Build.

Sending build context to Docker daemon  200.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_031701
20200927_031702 - Build completed successfully.


Already up to date.
[master 7e9153d] Automatic build 20200927_031701
 1 file changed, 35 insertions(+)
20200927_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200927_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_031717 - Docker push completed successfully.


20200927_031717 - All completed successfully
20200927_041701 - Starting Build.

Sending build context to Docker daemon  200.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_041701
20200927_041702 - Build completed successfully.


Already up to date.
[master 65abe5c] Automatic build 20200927_041701
 1 file changed, 35 insertions(+)
20200927_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200927_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_041716 - Docker push completed successfully.


20200927_041716 - All completed successfully
20200927_051701 - Starting Build.

Sending build context to Docker daemon  200.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_051701
20200927_051702 - Build completed successfully.


Already up to date.
[master 8bdbe84] Automatic build 20200927_051701
 1 file changed, 35 insertions(+)
20200927_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200927_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_051717 - Docker push completed successfully.


20200927_051717 - All completed successfully
20200927_061701 - Starting Build.

Sending build context to Docker daemon  200.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_061701
20200927_061702 - Build completed successfully.


Already up to date.
[master 58408ba] Automatic build 20200927_061701
 1 file changed, 35 insertions(+)
20200927_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200927_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_061718 - Docker push completed successfully.


20200927_061718 - All completed successfully
20200927_071701 - Starting Build.

Sending build context to Docker daemon  201.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_071701
20200927_071702 - Build completed successfully.


Already up to date.
[master 62bf98e] Automatic build 20200927_071701
 1 file changed, 35 insertions(+)
20200927_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200927_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_071717 - Docker push completed successfully.


20200927_071717 - All completed successfully
20200927_081702 - Starting Build.

Sending build context to Docker daemon  201.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_081702
20200927_081702 - Build completed successfully.


Already up to date.
[master 32d7e13] Automatic build 20200927_081702
 1 file changed, 35 insertions(+)
20200927_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200927_081702: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_081717 - Docker push completed successfully.


20200927_081717 - All completed successfully
20200927_091701 - Starting Build.

Sending build context to Docker daemon  201.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_091701
20200927_091702 - Build completed successfully.


Already up to date.
[master a022e9f] Automatic build 20200927_091701
 1 file changed, 35 insertions(+)
20200927_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200927_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_091717 - Docker push completed successfully.


20200927_091717 - All completed successfully
20200927_101701 - Starting Build.

Sending build context to Docker daemon  201.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_101701
20200927_101704 - Build completed successfully.


Already up to date.
[master 63124a4] Automatic build 20200927_101701
 1 file changed, 35 insertions(+)
20200927_101713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200927_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_101719 - Docker push completed successfully.


20200927_101719 - All completed successfully
20200927_111701 - Starting Build.

Sending build context to Docker daemon  202.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_111701
20200927_111702 - Build completed successfully.


Already up to date.
[master 78aa055] Automatic build 20200927_111701
 1 file changed, 35 insertions(+)
20200927_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200927_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_111718 - Docker push completed successfully.


20200927_111718 - All completed successfully
20200927_121701 - Starting Build.

Sending build context to Docker daemon  202.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_121701
20200927_121702 - Build completed successfully.


Already up to date.
[master 37c2fb0] Automatic build 20200927_121701
 1 file changed, 35 insertions(+)
20200927_121710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200927_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_121716 - Docker push completed successfully.


20200927_121716 - All completed successfully
20200927_131701 - Starting Build.

Sending build context to Docker daemon  202.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_131701
20200927_131702 - Build completed successfully.


Already up to date.
[master eaeaa14] Automatic build 20200927_131701
 1 file changed, 35 insertions(+)
20200927_131712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200927_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_131721 - Docker push completed successfully.


20200927_131721 - All completed successfully
20200927_141701 - Starting Build.

Sending build context to Docker daemon  202.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_141701
20200927_141702 - Build completed successfully.


Already up to date.
[master 249bcd5] Automatic build 20200927_141701
 1 file changed, 35 insertions(+)
20200927_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200927_141701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_141718 - Docker push completed successfully.


20200927_141718 - All completed successfully
20200927_151701 - Starting Build.

Sending build context to Docker daemon  203.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_151701
20200927_151702 - Build completed successfully.


Already up to date.
[master 02677e5] Automatic build 20200927_151701
 1 file changed, 35 insertions(+)
20200927_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200927_151701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_151720 - Docker push completed successfully.


20200927_151720 - All completed successfully
20200927_161701 - Starting Build.

Sending build context to Docker daemon  203.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_161701
20200927_161702 - Build completed successfully.


Already up to date.
[master 0aa8289] Automatic build 20200927_161701
 1 file changed, 35 insertions(+)
20200927_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200927_161701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_161719 - Docker push completed successfully.


20200927_161719 - All completed successfully
20200927_171701 - Starting Build.

Sending build context to Docker daemon  203.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_171701
20200927_171702 - Build completed successfully.


20200927_171702 - git
[master 9db6a81] Automatic build 20200927_171701
 1 file changed, 35 insertions(+)
20200927_171702 - git
20200927_171702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200927_171712 - Docker push FAILED!!


20200927_181701 - Starting Build.

Sending build context to Docker daemon  203.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_181701
20200927_181702 - Build completed successfully.


Already up to date.
[master 62810f2] Automatic build 20200927_181701
 1 file changed, 28 insertions(+)
20200927_181712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200927_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_181720 - Docker push completed successfully.


20200927_181720 - All completed successfully
20200927_191701 - Starting Build.

Sending build context to Docker daemon  204.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_191701
20200927_191703 - Build completed successfully.


Already up to date.
[master 96fc552] Automatic build 20200927_191701
 1 file changed, 35 insertions(+)
20200927_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200927_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_191719 - Docker push completed successfully.


20200927_191719 - All completed successfully
20200927_201701 - Starting Build.

Sending build context to Docker daemon  204.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_201701
20200927_201703 - Build completed successfully.


Already up to date.
[master 3ed1442] Automatic build 20200927_201701
 1 file changed, 35 insertions(+)
20200927_201712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200927_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_201721 - Docker push completed successfully.


20200927_201721 - All completed successfully
20200927_211701 - Starting Build.

Sending build context to Docker daemon  204.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_211701
20200927_211703 - Build completed successfully.


20200927_211703 - git
[master db84c64] Automatic build 20200927_211701
 1 file changed, 35 insertions(+)
20200927_211703 - git
20200927_211703 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200927_211703 - Docker push FAILED!!


20200927_221701 - Starting Build.

Sending build context to Docker daemon  204.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_221701
20200927_221703 - Build completed successfully.


Already up to date.
[master 083e463] Automatic build 20200927_221701
 1 file changed, 28 insertions(+)
20200927_221716 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200927_221701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_221728 - Docker push completed successfully.


20200927_221728 - All completed successfully
20200927_231701 - Starting Build.

Sending build context to Docker daemon  205.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200927_231701
20200927_231702 - Build completed successfully.


Already up to date.
[master 5e02c13] Automatic build 20200927_231701
 1 file changed, 35 insertions(+)
20200927_231712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200927_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200927_231720 - Docker push completed successfully.


20200927_231720 - All completed successfully
20200928_001701 - Starting Build.

Sending build context to Docker daemon  205.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_001701
20200928_001701 - Build completed successfully.


Already up to date.
[master 6581f87] Automatic build 20200928_001701
 1 file changed, 35 insertions(+)
20200928_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200928_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_001719 - Docker push completed successfully.


20200928_001719 - All completed successfully
20200928_011701 - Starting Build.

Sending build context to Docker daemon  205.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_011701
20200928_011702 - Build completed successfully.


Already up to date.
[master 8362241] Automatic build 20200928_011701
 1 file changed, 35 insertions(+)
20200928_011713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200928_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_011722 - Docker push completed successfully.


20200928_011722 - All completed successfully
20200928_021701 - Starting Build.

Sending build context to Docker daemon  205.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_021701
20200928_021702 - Build completed successfully.


Already up to date.
[master 24a1dd6] Automatic build 20200928_021701
 1 file changed, 35 insertions(+)
20200928_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200928_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_021718 - Docker push completed successfully.


20200928_021718 - All completed successfully
20200928_031701 - Starting Build.

Sending build context to Docker daemon  206.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_031701
20200928_031702 - Build completed successfully.


Already up to date.
[master da59c37] Automatic build 20200928_031701
 1 file changed, 35 insertions(+)
20200928_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200928_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_031717 - Docker push completed successfully.


20200928_031717 - All completed successfully
20200928_041701 - Starting Build.

Sending build context to Docker daemon  206.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_041701
20200928_041702 - Build completed successfully.


Already up to date.
[master d71fe5f] Automatic build 20200928_041701
 1 file changed, 35 insertions(+)
20200928_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200928_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_041717 - Docker push completed successfully.


20200928_041717 - All completed successfully
20200928_051701 - Starting Build.

Sending build context to Docker daemon  206.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_051701
20200928_051703 - Build completed successfully.


Already up to date.
[master be47b25] Automatic build 20200928_051701
 1 file changed, 35 insertions(+)
20200928_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200928_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_051718 - Docker push completed successfully.


20200928_051718 - All completed successfully
20200928_061701 - Starting Build.

Sending build context to Docker daemon  206.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_061701
20200928_061702 - Build completed successfully.


Already up to date.
[master 99796e8] Automatic build 20200928_061701
 1 file changed, 35 insertions(+)
20200928_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200928_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_061717 - Docker push completed successfully.


20200928_061717 - All completed successfully
20200928_071701 - Starting Build.

Sending build context to Docker daemon  207.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_071701
20200928_071702 - Build completed successfully.


Already up to date.
[master 34ba749] Automatic build 20200928_071701
 1 file changed, 35 insertions(+)
20200928_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200928_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_071717 - Docker push completed successfully.


20200928_071717 - All completed successfully
20200928_081701 - Starting Build.

Sending build context to Docker daemon  207.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_081701
20200928_081702 - Build completed successfully.


Already up to date.
[master 647d41e] Automatic build 20200928_081701
 1 file changed, 35 insertions(+)
20200928_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200928_081701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_081717 - Docker push completed successfully.


20200928_081717 - All completed successfully
20200928_091701 - Starting Build.

Sending build context to Docker daemon  207.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_091701
20200928_091702 - Build completed successfully.


Already up to date.
[master 8306e39] Automatic build 20200928_091701
 1 file changed, 35 insertions(+)
20200928_091710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200928_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_091716 - Docker push completed successfully.


20200928_091716 - All completed successfully
20200928_101701 - Starting Build.

Sending build context to Docker daemon  207.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_101701
20200928_101702 - Build completed successfully.


Already up to date.
[master ae033af] Automatic build 20200928_101701
 1 file changed, 35 insertions(+)
20200928_101712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200928_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_101720 - Docker push completed successfully.


20200928_101720 - All completed successfully
20200928_111701 - Starting Build.

Sending build context to Docker daemon  208.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_111701
20200928_111702 - Build completed successfully.


Already up to date.
[master 244c0ef] Automatic build 20200928_111701
 1 file changed, 35 insertions(+)
20200928_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200928_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_111717 - Docker push completed successfully.


20200928_111717 - All completed successfully
20200928_121701 - Starting Build.

Sending build context to Docker daemon  208.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_121701
20200928_121702 - Build completed successfully.


Already up to date.
[master 2a05b9c] Automatic build 20200928_121701
 1 file changed, 35 insertions(+)
20200928_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200928_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_121717 - Docker push completed successfully.


20200928_121717 - All completed successfully
20200928_131701 - Starting Build.

Sending build context to Docker daemon  208.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_131701
20200928_131702 - Build completed successfully.


Already up to date.
[master ca4e636] Automatic build 20200928_131701
 1 file changed, 35 insertions(+)
20200928_131710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200928_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_131717 - Docker push completed successfully.


20200928_131717 - All completed successfully
20200928_141701 - Starting Build.

Sending build context to Docker daemon  208.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_141701
20200928_141702 - Build completed successfully.


20200928_141702 - git
[master cade982] Automatic build 20200928_141701
 1 file changed, 35 insertions(+)
20200928_141702 - git
20200928_141702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200928_141702 - Docker push FAILED!!


20200928_151701 - Starting Build.

Sending build context to Docker daemon    209MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_151701
20200928_151703 - Build completed successfully.


20200928_151703 - git
[master eef092d] Automatic build 20200928_151701
 1 file changed, 28 insertions(+)
20200928_151703 - git
20200928_151703 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200928_151703 - Docker push FAILED!!


20200928_161701 - Starting Build.

Sending build context to Docker daemon  209.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_161701
20200928_161702 - Build completed successfully.


20200928_161702 - git
[master 0a63944] Automatic build 20200928_161701
 1 file changed, 28 insertions(+)
20200928_161702 - git
20200928_161702 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20200928_161702 - Docker push FAILED!!


20200928_171701 - Starting Build.

Sending build context to Docker daemon  209.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_171701
20200928_171703 - Build completed successfully.


Already up to date.
[master 641813d] Automatic build 20200928_171701
 1 file changed, 28 insertions(+)
20200928_171713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200928_171701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_171721 - Docker push completed successfully.


20200928_171721 - All completed successfully
20200928_181701 - Starting Build.

Sending build context to Docker daemon  209.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_181701
20200928_181702 - Build completed successfully.


Already up to date.
[master 3c96f92] Automatic build 20200928_181701
 1 file changed, 35 insertions(+)
20200928_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200928_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_181718 - Docker push completed successfully.


20200928_181718 - All completed successfully
20200928_191701 - Starting Build.

Sending build context to Docker daemon    210MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_191701
20200928_191702 - Build completed successfully.


Already up to date.
[master 732abf7] Automatic build 20200928_191701
 1 file changed, 35 insertions(+)
20200928_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200928_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_191717 - Docker push completed successfully.


20200928_191717 - All completed successfully
20200928_201701 - Starting Build.

Sending build context to Docker daemon  210.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_201701
20200928_201702 - Build completed successfully.


Already up to date.
[master 0d5c4c6] Automatic build 20200928_201701
 1 file changed, 35 insertions(+)
20200928_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200928_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_201717 - Docker push completed successfully.


20200928_201717 - All completed successfully
20200928_211702 - Starting Build.

Sending build context to Docker daemon  210.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_211702
20200928_211702 - Build completed successfully.


Already up to date.
[master 0ed6519] Automatic build 20200928_211702
 1 file changed, 35 insertions(+)
20200928_211711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200928_211702: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_211719 - Docker push completed successfully.


20200928_211719 - All completed successfully
20200928_221701 - Starting Build.

Sending build context to Docker daemon  210.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_221701
20200928_221702 - Build completed successfully.


Already up to date.
[master 364cc7e] Automatic build 20200928_221701
 1 file changed, 35 insertions(+)
20200928_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200928_221701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_221717 - Docker push completed successfully.


20200928_221717 - All completed successfully
20200928_231701 - Starting Build.

Sending build context to Docker daemon    211MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200928_231701
20200928_231702 - Build completed successfully.


Already up to date.
[master bd1d071] Automatic build 20200928_231701
 1 file changed, 35 insertions(+)
20200928_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200928_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200928_231718 - Docker push completed successfully.


20200928_231718 - All completed successfully
20200929_001701 - Starting Build.

Sending build context to Docker daemon  211.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_001701
20200929_001703 - Build completed successfully.


Already up to date.
[master 2c71cf6] Automatic build 20200929_001701
 1 file changed, 35 insertions(+)
20200929_001712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200929_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_001724 - Docker push completed successfully.


20200929_001724 - All completed successfully
20200929_011701 - Starting Build.

Sending build context to Docker daemon  211.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_011701
20200929_011703 - Build completed successfully.


Already up to date.
[master 5356d56] Automatic build 20200929_011701
 1 file changed, 35 insertions(+)
20200929_011712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200929_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_011724 - Docker push completed successfully.


20200929_011724 - All completed successfully
20200929_021701 - Starting Build.

Sending build context to Docker daemon  211.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_021701
20200929_021702 - Build completed successfully.


Already up to date.
[master b7d197c] Automatic build 20200929_021701
 1 file changed, 35 insertions(+)
20200929_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200929_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_021718 - Docker push completed successfully.


20200929_021718 - All completed successfully
20200929_031701 - Starting Build.

Sending build context to Docker daemon    212MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_031701
20200929_031702 - Build completed successfully.


Already up to date.
[master 6dd40db] Automatic build 20200929_031701
 1 file changed, 35 insertions(+)
20200929_031712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200929_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_031722 - Docker push completed successfully.


20200929_031722 - All completed successfully
20200929_041701 - Starting Build.

Sending build context to Docker daemon  212.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_041701
20200929_041702 - Build completed successfully.


Already up to date.
[master 506b182] Automatic build 20200929_041701
 1 file changed, 35 insertions(+)
20200929_041713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200929_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_041721 - Docker push completed successfully.


20200929_041721 - All completed successfully
20200929_051701 - Starting Build.

Sending build context to Docker daemon  212.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_051701
20200929_051703 - Build completed successfully.


Already up to date.
[master 87f3370] Automatic build 20200929_051701
 1 file changed, 35 insertions(+)
20200929_051714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200929_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_051720 - Docker push completed successfully.


20200929_051720 - All completed successfully
20200929_061701 - Starting Build.

Sending build context to Docker daemon  212.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_061701
20200929_061702 - Build completed successfully.


Already up to date.
[master b87ff51] Automatic build 20200929_061701
 1 file changed, 35 insertions(+)
20200929_061710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200929_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_061717 - Docker push completed successfully.


20200929_061717 - All completed successfully
20200929_071701 - Starting Build.

Sending build context to Docker daemon    213MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_071701
20200929_071702 - Build completed successfully.


Already up to date.
[master bead42d] Automatic build 20200929_071701
 1 file changed, 35 insertions(+)
20200929_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200929_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_071718 - Docker push completed successfully.


20200929_071718 - All completed successfully
20200929_081701 - Starting Build.

Sending build context to Docker daemon  213.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_081701
20200929_081703 - Build completed successfully.


Already up to date.
[master 56eae3b] Automatic build 20200929_081701
 1 file changed, 35 insertions(+)
20200929_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200929_081701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_081717 - Docker push completed successfully.


20200929_081717 - All completed successfully
20200929_091701 - Starting Build.

Sending build context to Docker daemon  213.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_091701
20200929_091702 - Build completed successfully.


Already up to date.
[master c272bd0] Automatic build 20200929_091701
 1 file changed, 35 insertions(+)
20200929_091713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200929_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_091720 - Docker push completed successfully.


20200929_091720 - All completed successfully
20200929_101701 - Starting Build.

Sending build context to Docker daemon  213.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_101701
20200929_101702 - Build completed successfully.


Already up to date.
[master 4cd8251] Automatic build 20200929_101701
 1 file changed, 35 insertions(+)
20200929_101712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200929_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_101720 - Docker push completed successfully.


20200929_101720 - All completed successfully
20200929_111701 - Starting Build.

Sending build context to Docker daemon    214MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_111701
20200929_111703 - Build completed successfully.


Already up to date.
[master d02bf8d] Automatic build 20200929_111701
 1 file changed, 35 insertions(+)
20200929_111714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200929_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_111729 - Docker push completed successfully.


20200929_111729 - All completed successfully
20200929_121701 - Starting Build.

Sending build context to Docker daemon  214.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_121701
20200929_121703 - Build completed successfully.


Already up to date.
[master 3e0c898] Automatic build 20200929_121701
 1 file changed, 35 insertions(+)
20200929_121712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200929_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_121720 - Docker push completed successfully.


20200929_121720 - All completed successfully
20200929_131701 - Starting Build.

Sending build context to Docker daemon  214.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_131701
20200929_131702 - Build completed successfully.


Already up to date.
[master 84b94b1] Automatic build 20200929_131701
 1 file changed, 35 insertions(+)
20200929_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200929_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_131719 - Docker push completed successfully.


20200929_131719 - All completed successfully
20200929_141701 - Starting Build.

Sending build context to Docker daemon  214.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_141701
20200929_141702 - Build completed successfully.


Already up to date.
[master e20aac6] Automatic build 20200929_141701
 1 file changed, 35 insertions(+)
20200929_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200929_141701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_141719 - Docker push completed successfully.


20200929_141719 - All completed successfully
20200929_151701 - Starting Build.

Sending build context to Docker daemon    215MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_151701
20200929_151702 - Build completed successfully.


Already up to date.
[master a22e22f] Automatic build 20200929_151701
 1 file changed, 35 insertions(+)
20200929_151711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200929_151701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_151719 - Docker push completed successfully.


20200929_151719 - All completed successfully
20200929_161701 - Starting Build.

Sending build context to Docker daemon  215.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_161701
20200929_161702 - Build completed successfully.


Already up to date.
[master c486d0f] Automatic build 20200929_161701
 1 file changed, 35 insertions(+)
20200929_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200929_161701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_161720 - Docker push completed successfully.


20200929_161720 - All completed successfully
20200929_171701 - Starting Build.

Sending build context to Docker daemon  215.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_171701
20200929_171702 - Build completed successfully.


Already up to date.
[master 8cfb340] Automatic build 20200929_171701
 1 file changed, 35 insertions(+)
20200929_171713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200929_171701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_171723 - Docker push completed successfully.


20200929_171723 - All completed successfully
20200929_181701 - Starting Build.

Sending build context to Docker daemon  215.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_181701
20200929_181702 - Build completed successfully.


Already up to date.
[master 1e18471] Automatic build 20200929_181701
 1 file changed, 35 insertions(+)
20200929_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200929_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_181718 - Docker push completed successfully.


20200929_181718 - All completed successfully
20200929_191701 - Starting Build.

Sending build context to Docker daemon    216MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_191701
20200929_191703 - Build completed successfully.


Already up to date.
[master 745b540] Automatic build 20200929_191701
 1 file changed, 35 insertions(+)
20200929_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200929_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_191718 - Docker push completed successfully.


20200929_191718 - All completed successfully
20200929_201701 - Starting Build.

Sending build context to Docker daemon  216.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_201701
20200929_201702 - Build completed successfully.


Already up to date.
[master 5556a53] Automatic build 20200929_201701
 1 file changed, 35 insertions(+)
20200929_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200929_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_201718 - Docker push completed successfully.


20200929_201718 - All completed successfully
20200929_211701 - Starting Build.

Sending build context to Docker daemon  216.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_211701
20200929_211702 - Build completed successfully.


Already up to date.
[master 4a9aeea] Automatic build 20200929_211701
 1 file changed, 35 insertions(+)
20200929_211712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200929_211701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_211721 - Docker push completed successfully.


20200929_211721 - All completed successfully
20200929_221701 - Starting Build.

Sending build context to Docker daemon  216.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_221701
20200929_221702 - Build completed successfully.


Already up to date.
[master fd93680] Automatic build 20200929_221701
 1 file changed, 35 insertions(+)
20200929_221713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200929_221701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_221721 - Docker push completed successfully.


20200929_221721 - All completed successfully
20200929_231701 - Starting Build.

Sending build context to Docker daemon    217MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200929_231701
20200929_231702 - Build completed successfully.


Already up to date.
[master e362329] Automatic build 20200929_231701
 1 file changed, 35 insertions(+)
20200929_231711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200929_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200929_231718 - Docker push completed successfully.


20200929_231718 - All completed successfully
20200930_001701 - Starting Build.

Sending build context to Docker daemon  217.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_001701
20200930_001703 - Build completed successfully.


Already up to date.
[master 42cfaf4] Automatic build 20200930_001701
 1 file changed, 35 insertions(+)
20200930_001712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200930_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_001727 - Docker push completed successfully.


20200930_001727 - All completed successfully
20200930_011701 - Starting Build.

Sending build context to Docker daemon  217.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_011701
20200930_011703 - Build completed successfully.


Already up to date.
[master 9c52143] Automatic build 20200930_011701
 1 file changed, 35 insertions(+)
20200930_011713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200930_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_011736 - Docker push completed successfully.


20200930_011736 - All completed successfully
20200930_021701 - Starting Build.

Sending build context to Docker daemon  217.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_021701
20200930_021702 - Build completed successfully.


Already up to date.
[master a0b32b9] Automatic build 20200930_021701
 1 file changed, 35 insertions(+)
20200930_021711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200930_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_021728 - Docker push completed successfully.


20200930_021728 - All completed successfully
20200930_031701 - Starting Build.

Sending build context to Docker daemon    218MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_031701
20200930_031703 - Build completed successfully.


Already up to date.
[master c23a408] Automatic build 20200930_031701
 1 file changed, 35 insertions(+)
20200930_031713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200930_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_031722 - Docker push completed successfully.


20200930_031722 - All completed successfully
20200930_041701 - Starting Build.

Sending build context to Docker daemon  218.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_041701
20200930_041702 - Build completed successfully.


Already up to date.
[master ffff83e] Automatic build 20200930_041701
 1 file changed, 35 insertions(+)
20200930_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200930_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_041718 - Docker push completed successfully.


20200930_041718 - All completed successfully
20200930_051701 - Starting Build.

Sending build context to Docker daemon  218.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_051701
20200930_051702 - Build completed successfully.


Already up to date.
[master 4d16f38] Automatic build 20200930_051701
 1 file changed, 35 insertions(+)
20200930_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200930_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_051718 - Docker push completed successfully.


20200930_051718 - All completed successfully
20200930_061701 - Starting Build.

Sending build context to Docker daemon  218.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_061701
20200930_061703 - Build completed successfully.


Already up to date.
[master fc2389e] Automatic build 20200930_061701
 1 file changed, 35 insertions(+)
20200930_061712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200930_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_061718 - Docker push completed successfully.


20200930_061718 - All completed successfully
20200930_071701 - Starting Build.

Sending build context to Docker daemon    219MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_071701
20200930_071702 - Build completed successfully.


Already up to date.
[master b6cba4d] Automatic build 20200930_071701
 1 file changed, 35 insertions(+)
20200930_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20200930_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_071721 - Docker push completed successfully.


20200930_071721 - All completed successfully
20200930_081701 - Starting Build.

Sending build context to Docker daemon  219.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_081701
20200930_081703 - Build completed successfully.


Already up to date.
[master 84b1471] Automatic build 20200930_081701
 1 file changed, 35 insertions(+)
20200930_081712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200930_081701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_081719 - Docker push completed successfully.


20200930_081719 - All completed successfully
20200930_091701 - Starting Build.

Sending build context to Docker daemon  219.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_091701
20200930_091703 - Build completed successfully.


Already up to date.
[master be53990] Automatic build 20200930_091701
 1 file changed, 35 insertions(+)
20200930_091712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200930_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_091720 - Docker push completed successfully.


20200930_091720 - All completed successfully
20200930_101701 - Starting Build.

Sending build context to Docker daemon  219.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_101701
20200930_101703 - Build completed successfully.


Already up to date.
[master e63512d] Automatic build 20200930_101701
 1 file changed, 35 insertions(+)
20200930_101712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200930_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_101720 - Docker push completed successfully.


20200930_101720 - All completed successfully
20200930_111701 - Starting Build.

Sending build context to Docker daemon    220MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_111701
20200930_111703 - Build completed successfully.


Already up to date.
[master 6336cfd] Automatic build 20200930_111701
 1 file changed, 35 insertions(+)
20200930_111713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200930_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_111720 - Docker push completed successfully.


20200930_111720 - All completed successfully
20200930_121701 - Starting Build.

Sending build context to Docker daemon  220.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_121701
20200930_121702 - Build completed successfully.


Already up to date.
[master 37cadd8] Automatic build 20200930_121701
 1 file changed, 35 insertions(+)
20200930_121712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200930_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_121722 - Docker push completed successfully.


20200930_121722 - All completed successfully
20200930_131701 - Starting Build.

Sending build context to Docker daemon  220.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_131701
20200930_131702 - Build completed successfully.


Already up to date.
[master e674f98] Automatic build 20200930_131701
 1 file changed, 35 insertions(+)
20200930_131713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200930_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_131721 - Docker push completed successfully.


20200930_131721 - All completed successfully
20200930_141701 - Starting Build.

Sending build context to Docker daemon  220.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_141701
20200930_141703 - Build completed successfully.


Already up to date.
[master 459dbf7] Automatic build 20200930_141701
 1 file changed, 35 insertions(+)
20200930_141711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200930_141701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_141718 - Docker push completed successfully.


20200930_141718 - All completed successfully
20200930_151701 - Starting Build.

Sending build context to Docker daemon    221MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_151701
20200930_151703 - Build completed successfully.


Already up to date.
[master d2274eb] Automatic build 20200930_151701
 1 file changed, 35 insertions(+)
20200930_151712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20200930_151701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_151719 - Docker push completed successfully.


20200930_151719 - All completed successfully
20200930_161701 - Starting Build.

Sending build context to Docker daemon  221.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_161701
20200930_161702 - Build completed successfully.


Already up to date.
[master 72f8792] Automatic build 20200930_161701
 1 file changed, 35 insertions(+)
20200930_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200930_161701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_161720 - Docker push completed successfully.


20200930_161720 - All completed successfully
20200930_171701 - Starting Build.

Sending build context to Docker daemon  221.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_171701
20200930_171703 - Build completed successfully.


Already up to date.
[master 933f97c] Automatic build 20200930_171701
 1 file changed, 35 insertions(+)
20200930_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20200930_171701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_171718 - Docker push completed successfully.


20200930_171718 - All completed successfully
20200930_181701 - Starting Build.

Sending build context to Docker daemon  221.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_181701
20200930_181702 - Build completed successfully.


Already up to date.
[master 7881487] Automatic build 20200930_181701
 1 file changed, 35 insertions(+)
20200930_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200930_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_181718 - Docker push completed successfully.


20200930_181718 - All completed successfully
20200930_191701 - Starting Build.

Sending build context to Docker daemon    222MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_191701
20200930_191702 - Build completed successfully.


Already up to date.
[master 7ce6135] Automatic build 20200930_191701
 1 file changed, 35 insertions(+)
20200930_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200930_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_191717 - Docker push completed successfully.


20200930_191717 - All completed successfully
20200930_201701 - Starting Build.

Sending build context to Docker daemon  222.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_201701
20200930_201703 - Build completed successfully.


Already up to date.
[master 0f2d03b] Automatic build 20200930_201701
 1 file changed, 35 insertions(+)
20200930_201712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20200930_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_201718 - Docker push completed successfully.


20200930_201718 - All completed successfully
20200930_211701 - Starting Build.

Sending build context to Docker daemon  222.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_211701
20200930_211702 - Build completed successfully.


Already up to date.
[master dadbad3] Automatic build 20200930_211701
 1 file changed, 35 insertions(+)
20200930_211713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20200930_211701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_211720 - Docker push completed successfully.


20200930_211720 - All completed successfully
20200930_221701 - Starting Build.

Sending build context to Docker daemon  222.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_221701
20200930_221702 - Build completed successfully.


Already up to date.
[master a8d014e] Automatic build 20200930_221701
 1 file changed, 35 insertions(+)
20200930_221711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200930_221701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_221718 - Docker push completed successfully.


20200930_221718 - All completed successfully
20200930_231701 - Starting Build.

Sending build context to Docker daemon  223.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20200930_231701
20200930_231703 - Build completed successfully.


Already up to date.
[master 4af6394] Automatic build 20200930_231701
 1 file changed, 35 insertions(+)
20200930_231712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20200930_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20200930_231718 - Docker push completed successfully.


20200930_231718 - All completed successfully
20201001_001701 - Starting Build.

Sending build context to Docker daemon  223.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_001701
20201001_001702 - Build completed successfully.


Already up to date.
[master 24df24c] Automatic build 20201001_001701
 1 file changed, 35 insertions(+)
20201001_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201001_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_001726 - Docker push completed successfully.


20201001_001726 - All completed successfully
20201001_011701 - Starting Build.

Sending build context to Docker daemon  223.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_011701
20201001_011702 - Build completed successfully.


Already up to date.
[master 16197ab] Automatic build 20201001_011701
 1 file changed, 35 insertions(+)
20201001_011712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201001_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_011726 - Docker push completed successfully.


20201001_011726 - All completed successfully
20201001_021701 - Starting Build.

Sending build context to Docker daemon  223.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_021701
20201001_021702 - Build completed successfully.


Already up to date.
[master f2862fd] Automatic build 20201001_021701
 1 file changed, 35 insertions(+)
20201001_021712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201001_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_021721 - Docker push completed successfully.


20201001_021721 - All completed successfully
20201001_031701 - Starting Build.

Sending build context to Docker daemon  224.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_031701
20201001_031702 - Build completed successfully.


Already up to date.
[master af7a8b6] Automatic build 20201001_031701
 1 file changed, 35 insertions(+)
20201001_031711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201001_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_031721 - Docker push completed successfully.


20201001_031721 - All completed successfully
20201001_041701 - Starting Build.

Sending build context to Docker daemon  224.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_041701
20201001_041702 - Build completed successfully.


Already up to date.
[master 375cf72] Automatic build 20201001_041701
 1 file changed, 35 insertions(+)
20201001_041710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201001_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_041718 - Docker push completed successfully.


20201001_041718 - All completed successfully
20201001_051701 - Starting Build.

Sending build context to Docker daemon  224.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_051701
20201001_051702 - Build completed successfully.


Already up to date.
[master b28db29] Automatic build 20201001_051701
 1 file changed, 35 insertions(+)
20201001_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201001_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_051717 - Docker push completed successfully.


20201001_051717 - All completed successfully
20201001_061701 - Starting Build.

Sending build context to Docker daemon  224.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_061701
20201001_061702 - Build completed successfully.


Already up to date.
[master 4a89976] Automatic build 20201001_061701
 1 file changed, 35 insertions(+)
20201001_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201001_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_061720 - Docker push completed successfully.


20201001_061720 - All completed successfully
20201001_071701 - Starting Build.

Sending build context to Docker daemon  225.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_071701
20201001_071702 - Build completed successfully.


Already up to date.
[master 1a027be] Automatic build 20201001_071701
 1 file changed, 35 insertions(+)
20201001_071712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201001_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_071722 - Docker push completed successfully.


20201001_071722 - All completed successfully
20201001_081701 - Starting Build.

Sending build context to Docker daemon  225.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_081701
20201001_081702 - Build completed successfully.


Already up to date.
[master 1aa6d97] Automatic build 20201001_081701
 1 file changed, 35 insertions(+)
20201001_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201001_081701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_081718 - Docker push completed successfully.


20201001_081718 - All completed successfully
20201001_091701 - Starting Build.

Sending build context to Docker daemon  225.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_091701
20201001_091702 - Build completed successfully.


Already up to date.
[master e665f02] Automatic build 20201001_091701
 1 file changed, 35 insertions(+)
20201001_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20201001_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_091718 - Docker push completed successfully.


20201001_091718 - All completed successfully
20201001_101701 - Starting Build.

Sending build context to Docker daemon  225.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_101701
20201001_101703 - Build completed successfully.


Already up to date.
[master e9d7c6e] Automatic build 20201001_101701
 1 file changed, 35 insertions(+)
20201001_101712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201001_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_101718 - Docker push completed successfully.


20201001_101718 - All completed successfully
20201001_111701 - Starting Build.

Sending build context to Docker daemon  226.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_111701
20201001_111702 - Build completed successfully.


Already up to date.
[master c4f0283] Automatic build 20201001_111701
 1 file changed, 35 insertions(+)
20201001_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201001_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_111720 - Docker push completed successfully.


20201001_111720 - All completed successfully
20201001_121701 - Starting Build.

Sending build context to Docker daemon  226.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_121701
20201001_121702 - Build completed successfully.


Already up to date.
[master 1deffd1] Automatic build 20201001_121701
 1 file changed, 35 insertions(+)
20201001_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201001_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_121718 - Docker push completed successfully.


20201001_121718 - All completed successfully
20201001_131701 - Starting Build.

Sending build context to Docker daemon  226.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_131701
20201001_131702 - Build completed successfully.


Already up to date.
[master e63a490] Automatic build 20201001_131701
 1 file changed, 35 insertions(+)
20201001_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201001_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_131718 - Docker push completed successfully.


20201001_131718 - All completed successfully
20201001_141701 - Starting Build.

Sending build context to Docker daemon  226.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_141701
20201001_141703 - Build completed successfully.


Already up to date.
[master b7d3544] Automatic build 20201001_141701
 1 file changed, 35 insertions(+)
20201001_141714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201001_141701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_141724 - Docker push completed successfully.


20201001_141724 - All completed successfully
20201001_151701 - Starting Build.

Sending build context to Docker daemon  227.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_151701
20201001_151702 - Build completed successfully.


Already up to date.
[master f114e63] Automatic build 20201001_151701
 1 file changed, 35 insertions(+)
20201001_151712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201001_151701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_151721 - Docker push completed successfully.


20201001_151721 - All completed successfully
20201001_161701 - Starting Build.

Sending build context to Docker daemon  227.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_161701
20201001_161702 - Build completed successfully.


Already up to date.
[master c1b2bf9] Automatic build 20201001_161701
 1 file changed, 35 insertions(+)
20201001_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201001_161701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_161720 - Docker push completed successfully.


20201001_161720 - All completed successfully
20201001_171701 - Starting Build.

Sending build context to Docker daemon  227.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_171701
20201001_171702 - Build completed successfully.


Already up to date.
[master 237f325] Automatic build 20201001_171701
 1 file changed, 35 insertions(+)
20201001_171712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201001_171701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_171722 - Docker push completed successfully.


20201001_171722 - All completed successfully
20201001_181701 - Starting Build.

Sending build context to Docker daemon  227.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_181701
20201001_181702 - Build completed successfully.


Already up to date.
[master c02a42e] Automatic build 20201001_181701
 1 file changed, 35 insertions(+)
20201001_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201001_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_181719 - Docker push completed successfully.


20201001_181719 - All completed successfully
20201001_191701 - Starting Build.

Sending build context to Docker daemon  228.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_191701
20201001_191702 - Build completed successfully.


Already up to date.
[master 9549fd0] Automatic build 20201001_191701
 1 file changed, 35 insertions(+)
20201001_191712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201001_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_191721 - Docker push completed successfully.


20201001_191721 - All completed successfully
20201001_201701 - Starting Build.

Sending build context to Docker daemon  228.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_201701
20201001_201702 - Build completed successfully.


Already up to date.
[master 2cfac7f] Automatic build 20201001_201701
 1 file changed, 35 insertions(+)
20201001_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201001_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_201722 - Docker push completed successfully.


20201001_201722 - All completed successfully
20201001_211701 - Starting Build.

Sending build context to Docker daemon  228.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_211701
20201001_211703 - Build completed successfully.


Already up to date.
[master 76e7c05] Automatic build 20201001_211701
 1 file changed, 35 insertions(+)
20201001_211712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201001_211701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_211720 - Docker push completed successfully.


20201001_211720 - All completed successfully
20201001_221701 - Starting Build.

Sending build context to Docker daemon  228.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_221701
20201001_221702 - Build completed successfully.


Already up to date.
[master dac39a9] Automatic build 20201001_221701
 1 file changed, 35 insertions(+)
20201001_221720 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201001_221801 - Docker push FAILED!!


20201001_231701 - Starting Build.

Sending build context to Docker daemon  229.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201001_231701
20201001_231702 - Build completed successfully.


Already up to date.
[master b4cf227] Automatic build 20201001_231701
 1 file changed, 33 insertions(+)
20201001_231716 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Mounted from blairy/curl
20201001_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201001_231757 - Docker push completed successfully.


20201001_231757 - All completed successfully
20201002_001701 - Starting Build.

Sending build context to Docker daemon  229.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_001701
20201002_001702 - Build completed successfully.


Already up to date.
[master 1a2eaf7] Automatic build 20201002_001701
 1 file changed, 35 insertions(+)
20201002_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201002_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_001726 - Docker push completed successfully.


20201002_001726 - All completed successfully
20201002_011701 - Starting Build.

Sending build context to Docker daemon  229.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_011701
20201002_011702 - Build completed successfully.


Already up to date.
[master 0d0c19a] Automatic build 20201002_011701
 1 file changed, 35 insertions(+)
20201002_011711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201002_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_011725 - Docker push completed successfully.


20201002_011725 - All completed successfully
20201002_021701 - Starting Build.

Sending build context to Docker daemon  229.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_021701
20201002_021703 - Build completed successfully.


Already up to date.
[master 182090d] Automatic build 20201002_021701
 1 file changed, 35 insertions(+)
20201002_021712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20201002_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_021719 - Docker push completed successfully.


20201002_021719 - All completed successfully
20201002_031701 - Starting Build.

Sending build context to Docker daemon  230.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_031701
20201002_031702 - Build completed successfully.


Already up to date.
[master c3ae044] Automatic build 20201002_031701
 1 file changed, 35 insertions(+)
20201002_031710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201002_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_031717 - Docker push completed successfully.


20201002_031717 - All completed successfully
20201002_041701 - Starting Build.

Sending build context to Docker daemon  230.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_041701
20201002_041702 - Build completed successfully.


Already up to date.
[master 9ec4f59] Automatic build 20201002_041701
 1 file changed, 35 insertions(+)
20201002_041711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201002_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_041718 - Docker push completed successfully.


20201002_041718 - All completed successfully
20201002_051701 - Starting Build.

Sending build context to Docker daemon  230.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_051701
20201002_051702 - Build completed successfully.


Already up to date.
[master 0ea7b6b] Automatic build 20201002_051701
 1 file changed, 35 insertions(+)
20201002_051711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201002_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_051721 - Docker push completed successfully.


20201002_051721 - All completed successfully
20201002_061701 - Starting Build.

Sending build context to Docker daemon  230.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_061701
20201002_061702 - Build completed successfully.


Already up to date.
[master e27f04f] Automatic build 20201002_061701
 1 file changed, 35 insertions(+)
20201002_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20201002_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_061718 - Docker push completed successfully.


20201002_061718 - All completed successfully
20201002_071701 - Starting Build.

Sending build context to Docker daemon  231.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_071701
20201002_071702 - Build completed successfully.


Already up to date.
[master 6c20ab1] Automatic build 20201002_071701
 1 file changed, 35 insertions(+)
20201002_071710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201002_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_071717 - Docker push completed successfully.


20201002_071717 - All completed successfully
20201002_081701 - Starting Build.

Sending build context to Docker daemon  231.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_081701
20201002_081702 - Build completed successfully.


Already up to date.
[master d29b4d9] Automatic build 20201002_081701
 1 file changed, 35 insertions(+)
20201002_081710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20201002_081701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_081717 - Docker push completed successfully.


20201002_081717 - All completed successfully
20201002_091701 - Starting Build.

Sending build context to Docker daemon  231.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_091701
20201002_091703 - Build completed successfully.


Already up to date.
[master 75b1ddc] Automatic build 20201002_091701
 1 file changed, 35 insertions(+)
20201002_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201002_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_091720 - Docker push completed successfully.


20201002_091720 - All completed successfully
20201002_101701 - Starting Build.

Sending build context to Docker daemon  231.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_101701
20201002_101703 - Build completed successfully.


Already up to date.
[master bb8f1ca] Automatic build 20201002_101701
 1 file changed, 35 insertions(+)
20201002_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201002_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_101722 - Docker push completed successfully.


20201002_101722 - All completed successfully
20201002_111701 - Starting Build.

Sending build context to Docker daemon  232.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_111701
20201002_111702 - Build completed successfully.


Already up to date.
[master 23628e5] Automatic build 20201002_111701
 1 file changed, 35 insertions(+)
20201002_111712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201002_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_111719 - Docker push completed successfully.


20201002_111719 - All completed successfully
20201002_121701 - Starting Build.

Sending build context to Docker daemon  232.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_121701
20201002_121702 - Build completed successfully.


Already up to date.
[master 7fc7bf0] Automatic build 20201002_121701
 1 file changed, 35 insertions(+)
20201002_121712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201002_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_121721 - Docker push completed successfully.


20201002_121721 - All completed successfully
20201002_131701 - Starting Build.

Sending build context to Docker daemon  232.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_131701
20201002_131702 - Build completed successfully.


Already up to date.
[master 808277e] Automatic build 20201002_131701
 1 file changed, 35 insertions(+)
20201002_131712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201002_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_131723 - Docker push completed successfully.


20201002_131723 - All completed successfully
20201002_141701 - Starting Build.

Sending build context to Docker daemon  232.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_141701
20201002_141702 - Build completed successfully.


Already up to date.
[master 6dac75b] Automatic build 20201002_141701
 1 file changed, 35 insertions(+)
20201002_141713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201002_141701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_141722 - Docker push completed successfully.


20201002_141722 - All completed successfully
20201002_151701 - Starting Build.

Sending build context to Docker daemon  233.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_151701
20201002_151704 - Build completed successfully.


Already up to date.
[master dd7d5a4] Automatic build 20201002_151701
 1 file changed, 35 insertions(+)
20201002_151713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201002_151701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_151721 - Docker push completed successfully.


20201002_151721 - All completed successfully
20201002_161701 - Starting Build.

Sending build context to Docker daemon  233.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_161701
20201002_161703 - Build completed successfully.


20201002_161703 - git
[master ffcb0ef] Automatic build 20201002_161701
 1 file changed, 35 insertions(+)
20201002_161704 - git
20201002_161704 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20201002_161704 - Docker push FAILED!!


20201002_171701 - Starting Build.

Sending build context to Docker daemon  233.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_171701
20201002_171702 - Build completed successfully.


Already up to date.
[master b373269] Automatic build 20201002_171701
 1 file changed, 28 insertions(+)
20201002_171712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201002_171701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_171719 - Docker push completed successfully.


20201002_171719 - All completed successfully
20201002_181701 - Starting Build.

Sending build context to Docker daemon  233.9MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_181701
20201002_181702 - Build completed successfully.


Already up to date.
[master 0d28aa2] Automatic build 20201002_181701
 1 file changed, 35 insertions(+)
20201002_181711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201002_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_181717 - Docker push completed successfully.


20201002_181717 - All completed successfully
20201002_191701 - Starting Build.

Sending build context to Docker daemon  234.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_191701
20201002_191703 - Build completed successfully.


Already up to date.
[master b3b41c0] Automatic build 20201002_191701
 1 file changed, 35 insertions(+)
20201002_191711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201002_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_191717 - Docker push completed successfully.


20201002_191717 - All completed successfully
20201002_201701 - Starting Build.

Sending build context to Docker daemon  234.4MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_201701
20201002_201702 - Build completed successfully.


Already up to date.
[master 0baf936] Automatic build 20201002_201701
 1 file changed, 35 insertions(+)
20201002_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201002_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_201716 - Docker push completed successfully.


20201002_201716 - All completed successfully
20201002_211701 - Starting Build.

Sending build context to Docker daemon  234.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_211701
20201002_211703 - Build completed successfully.


20201002_211703 - git
[master d1e0b95] Automatic build 20201002_211701
 1 file changed, 35 insertions(+)
20201002_211703 - git
20201002_211703 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20201002_211704 - Docker push FAILED!!


20201002_221701 - Starting Build.

Sending build context to Docker daemon    235MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_221701
20201002_221702 - Build completed successfully.


Already up to date.
[master 53fc9fc] Automatic build 20201002_221701
 1 file changed, 28 insertions(+)
20201002_221713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201002_221701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_221722 - Docker push completed successfully.


20201002_221722 - All completed successfully
20201002_231701 - Starting Build.

Sending build context to Docker daemon  235.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201002_231701
20201002_231702 - Build completed successfully.


Already up to date.
[master dc28cc3] Automatic build 20201002_231701
 1 file changed, 35 insertions(+)
20201002_231712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201002_231701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201002_231720 - Docker push completed successfully.


20201002_231720 - All completed successfully
20201003_001701 - Starting Build.

Sending build context to Docker daemon  235.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_001701
20201003_001701 - Build completed successfully.


Already up to date.
[master 02511d3] Automatic build 20201003_001701
 1 file changed, 35 insertions(+)
20201003_001711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20201003_001701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_001720 - Docker push completed successfully.


20201003_001720 - All completed successfully
20201003_011701 - Starting Build.

Sending build context to Docker daemon  235.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_011701
20201003_011702 - Build completed successfully.


Already up to date.
[master c5f31d2] Automatic build 20201003_011701
 1 file changed, 35 insertions(+)
20201003_011712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_011701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_011720 - Docker push completed successfully.


20201003_011720 - All completed successfully
20201003_021701 - Starting Build.

Sending build context to Docker daemon    236MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_021701
20201003_021702 - Build completed successfully.


Already up to date.
[master 1d497ac] Automatic build 20201003_021701
 1 file changed, 35 insertions(+)
20201003_021710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201003_021701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_021719 - Docker push completed successfully.


20201003_021719 - All completed successfully
20201003_031701 - Starting Build.

Sending build context to Docker daemon  236.2MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_031701
20201003_031705 - Build completed successfully.


Already up to date.
[master 7ed24b4] Automatic build 20201003_031701
 1 file changed, 35 insertions(+)
20201003_031716 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_031701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_031731 - Docker push completed successfully.


20201003_031731 - All completed successfully
20201003_041701 - Starting Build.

Sending build context to Docker daemon  236.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_041701
20201003_041703 - Build completed successfully.


Already up to date.
[master 873b2ba] Automatic build 20201003_041701
 1 file changed, 35 insertions(+)
20201003_041712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201003_041701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_041719 - Docker push completed successfully.


20201003_041719 - All completed successfully
20201003_051701 - Starting Build.

Sending build context to Docker daemon  236.7MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_051701
20201003_051702 - Build completed successfully.


Already up to date.
[master a2e3fec] Automatic build 20201003_051701
 1 file changed, 35 insertions(+)
20201003_051710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201003_051701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_051718 - Docker push completed successfully.


20201003_051718 - All completed successfully
20201003_061701 - Starting Build.

Sending build context to Docker daemon    237MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_061701
20201003_061702 - Build completed successfully.


Already up to date.
[master 4800f05] Automatic build 20201003_061701
 1 file changed, 35 insertions(+)
20201003_061711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_061701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_061718 - Docker push completed successfully.


20201003_061718 - All completed successfully
20201003_071701 - Starting Build.

Sending build context to Docker daemon  237.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_071701
20201003_071702 - Build completed successfully.


Already up to date.
[master ff330a6] Automatic build 20201003_071701
 1 file changed, 35 insertions(+)
20201003_071711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_071701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_071717 - Docker push completed successfully.


20201003_071717 - All completed successfully
20201003_081701 - Starting Build.

Sending build context to Docker daemon  237.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_081701
20201003_081702 - Build completed successfully.


Already up to date.
[master 2c85e31] Automatic build 20201003_081701
 1 file changed, 35 insertions(+)
20201003_081711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_081701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_081717 - Docker push completed successfully.


20201003_081717 - All completed successfully
20201003_091701 - Starting Build.

Sending build context to Docker daemon  237.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_091701
20201003_091702 - Build completed successfully.


Already up to date.
[master 8427beb] Automatic build 20201003_091701
 1 file changed, 35 insertions(+)
20201003_091711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201003_091701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_091719 - Docker push completed successfully.


20201003_091719 - All completed successfully
20201003_101701 - Starting Build.

Sending build context to Docker daemon    238MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_101701
20201003_101702 - Build completed successfully.


Already up to date.
[master 2f80da6] Automatic build 20201003_101701
 1 file changed, 35 insertions(+)
20201003_101711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201003_101701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_101718 - Docker push completed successfully.


20201003_101718 - All completed successfully
20201003_111701 - Starting Build.

Sending build context to Docker daemon  238.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_111701
20201003_111702 - Build completed successfully.


Already up to date.
[master 104ea20] Automatic build 20201003_111701
 1 file changed, 35 insertions(+)
20201003_111711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20201003_111701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_111718 - Docker push completed successfully.


20201003_111718 - All completed successfully
20201003_121701 - Starting Build.

Sending build context to Docker daemon  238.5MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_121701
20201003_121702 - Build completed successfully.


Already up to date.
[master e81f99e] Automatic build 20201003_121701
 1 file changed, 35 insertions(+)
20201003_121711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
20201003_121701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_121717 - Docker push completed successfully.


20201003_121717 - All completed successfully
20201003_131701 - Starting Build.

Sending build context to Docker daemon  238.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_131701
20201003_131702 - Build completed successfully.


Already up to date.
[master 9ee4d1a] Automatic build 20201003_131701
 1 file changed, 35 insertions(+)
20201003_131711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_131701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_131718 - Docker push completed successfully.


20201003_131718 - All completed successfully
20201003_141701 - Starting Build.

Sending build context to Docker daemon    239MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_141701
20201003_141702 - Build completed successfully.


Already up to date.
[master 39245de] Automatic build 20201003_141701
 1 file changed, 35 insertions(+)
20201003_141710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201003_141701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_141717 - Docker push completed successfully.


20201003_141717 - All completed successfully
20201003_151701 - Starting Build.

Sending build context to Docker daemon  239.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_151701
20201003_151702 - Build completed successfully.


Already up to date.
[master 331c56f] Automatic build 20201003_151701
 1 file changed, 35 insertions(+)
20201003_151713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
20201003_151701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_151723 - Docker push completed successfully.


20201003_151723 - All completed successfully
20201003_161701 - Starting Build.

Sending build context to Docker daemon  239.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_161701
20201003_161702 - Build completed successfully.


Already up to date.
[master 550ae29] Automatic build 20201003_161701
 1 file changed, 35 insertions(+)
20201003_161711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201003_161701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_161719 - Docker push completed successfully.


20201003_161719 - All completed successfully
20201003_171701 - Starting Build.

Sending build context to Docker daemon  239.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_171701
20201003_171702 - Build completed successfully.


Already up to date.
[master 6d6878e] Automatic build 20201003_171701
 1 file changed, 35 insertions(+)
20201003_171711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
50644c29ef5a: Layer already exists
20201003_171701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_171719 - Docker push completed successfully.


20201003_171719 - All completed successfully
20201003_181701 - Starting Build.

Sending build context to Docker daemon  240.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_181701
20201003_181702 - Build completed successfully.


Already up to date.
[master 17fadbb] Automatic build 20201003_181701
 1 file changed, 35 insertions(+)
20201003_181710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201003_181701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_181717 - Docker push completed successfully.


20201003_181717 - All completed successfully
20201003_191701 - Starting Build.

Sending build context to Docker daemon  240.3MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_191701
20201003_191702 - Build completed successfully.


Already up to date.
[master 6e76a70] Automatic build 20201003_191701
 1 file changed, 35 insertions(+)
20201003_191713 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_191701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_191721 - Docker push completed successfully.


20201003_191721 - All completed successfully
20201003_201701 - Starting Build.

Sending build context to Docker daemon  240.6MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_201701
20201003_201702 - Build completed successfully.


Already up to date.
[master 27054e3] Automatic build 20201003_201701
 1 file changed, 35 insertions(+)
20201003_201711 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
b343ddcee16c: Layer already exists
e967c39e3c57: Layer already exists
20201003_201701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_201720 - Docker push completed successfully.


20201003_201720 - All completed successfully
20201003_211701 - Starting Build.

Sending build context to Docker daemon  240.8MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_211701
20201003_211703 - Build completed successfully.


Already up to date.
[master 3c479e3] Automatic build 20201003_211701
 1 file changed, 35 insertions(+)
20201003_211712 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
50644c29ef5a: Layer already exists
20201003_211701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_211722 - Docker push completed successfully.


20201003_211722 - All completed successfully
20201003_221701 - Starting Build.

Sending build context to Docker daemon  241.1MB
Step 1/4 : FROM alpine:latest
 ---> a24bb4013296
Step 2/4 : RUN apk update && apk upgrade
 ---> Using cache
 ---> 37bee122e2ee
Step 3/4 : RUN apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> d88cb3aa2ff1
Step 4/4 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 75052639a00a
Successfully built 75052639a00a
Successfully tagged blairy/python_3.8.5:20201003_221701
20201003_221705 - Build completed successfully.


Already up to date.
[master 29fed2e] Automatic build 20201003_221701
 1 file changed, 35 insertions(+)
20201003_221714 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
e967c39e3c57: Preparing
b343ddcee16c: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
e967c39e3c57: Layer already exists
b343ddcee16c: Layer already exists
20201003_221701: digest: sha256:814177fb33aa80d85ee40d22a9d851faa2caecf01b522c6a69411b9e2f9eacbb size: 951
20201003_221721 - Docker push completed successfully.


20201003_221721 - All completed successfully
20201003_225717 - Starting Build.

Sending build context to Docker daemon  241.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201003_225717
20201003_225718 - Build completed successfully.


Already up to date.
[master 4f41f07] Automatic build 20201003_225717
 2 files changed, 36 insertions(+), 22 deletions(-)
 rewrite Dockerfile (94%)
20201003_225729 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
2dcdacc3c736: Waiting
50644c29ef5a: Layer already exists
20201003_231701 - Starting Build.

Sending build context to Docker daemon  241.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201003_231701
20201003_231703 - Build completed successfully.


Already up to date.
[master c3cb095] Automatic build 20201003_231701
 1 file changed, 27 insertions(+)
20201003_231715 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
2dcdacc3c736: 2dcdacc3c736: Pushed
Pushed
20201003_225717: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201003_232430 - Docker push completed successfully.


20201003_232430 - All completed successfully
50644c29ef5a: Layer already exists
20201003_231701: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201003_233644 - Docker push completed successfully.


20201003_233644 - All completed successfully
20201004_001701 - Starting Build.

Sending build context to Docker daemon  241.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_001701
20201004_001702 - Build completed successfully.


Already up to date.
[master 5763b5e] Automatic build 20201004_001701
 1 file changed, 37 insertions(+)
20201004_001716 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_001701: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_001728 - Docker push completed successfully.


20201004_001728 - All completed successfully
20201004_011701 - Starting Build.

Sending build context to Docker daemon  242.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_011701
20201004_011702 - Build completed successfully.


Already up to date.
[master dc272fa] Automatic build 20201004_011701
 1 file changed, 31 insertions(+)
20201004_011710 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_011701: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_011717 - Docker push completed successfully.


20201004_011717 - All completed successfully
20201004_021301 - Starting Build.

Sending build context to Docker daemon  242.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_021301
20201004_021302 - Build completed successfully.


Already up to date.
[master 0d089c8] Automatic build 20201004_021301
 1 file changed, 30 insertions(+)
20201004_021311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_021301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_021319 - Docker push completed successfully.


20201004_021319 - All completed successfully
20201004_031301 - Starting Build.

Sending build context to Docker daemon  242.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_031301
20201004_031305 - Build completed successfully.


Already up to date.
[master c8eb8b7] Automatic build 20201004_031301
 1 file changed, 30 insertions(+)
20201004_031315 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Waiting
2dcdacc3c736: Waiting
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_031301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_031449 - Docker push completed successfully.


20201004_031449 - All completed successfully
20201004_041301 - Starting Build.

Sending build context to Docker daemon  242.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_041301
20201004_041302 - Build completed successfully.


Already up to date.
[master 18921bc] Automatic build 20201004_041301
 1 file changed, 32 insertions(+)
20201004_041310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_041301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_041316 - Docker push completed successfully.


20201004_041316 - All completed successfully
20201004_051301 - Starting Build.

Sending build context to Docker daemon  243.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_051301
20201004_051302 - Build completed successfully.


Already up to date.
[master 1d5520e] Automatic build 20201004_051301
 1 file changed, 30 insertions(+)
20201004_051313 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_051301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_051320 - Docker push completed successfully.


20201004_051320 - All completed successfully
20201004_061301 - Starting Build.

Sending build context to Docker daemon  243.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_061301
20201004_061303 - Build completed successfully.


Already up to date.
[master 6bcdc88] Automatic build 20201004_061301
 1 file changed, 30 insertions(+)
20201004_061312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_061301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_061318 - Docker push completed successfully.


20201004_061318 - All completed successfully
20201004_071301 - Starting Build.

Sending build context to Docker daemon  243.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_071301
20201004_071302 - Build completed successfully.


Already up to date.
[master f302961] Automatic build 20201004_071301
 1 file changed, 30 insertions(+)
20201004_071311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_071301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_071317 - Docker push completed successfully.


20201004_071317 - All completed successfully
20201004_081301 - Starting Build.

Sending build context to Docker daemon  243.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_081301
20201004_081302 - Build completed successfully.


Already up to date.
[master 25f0e64] Automatic build 20201004_081301
 1 file changed, 30 insertions(+)
20201004_081310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_081301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_081317 - Docker push completed successfully.


20201004_081317 - All completed successfully
20201004_091301 - Starting Build.

Sending build context to Docker daemon  244.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_091301
20201004_091303 - Build completed successfully.


Already up to date.
[master 15c5703] Automatic build 20201004_091301
 1 file changed, 30 insertions(+)
20201004_091312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_091301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_091319 - Docker push completed successfully.


20201004_091319 - All completed successfully
20201004_101301 - Starting Build.

Sending build context to Docker daemon  244.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_101301
20201004_101302 - Build completed successfully.


Already up to date.
[master afc13e2] Automatic build 20201004_101301
 1 file changed, 30 insertions(+)
20201004_101311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_101301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_101319 - Docker push completed successfully.


20201004_101319 - All completed successfully
20201004_111301 - Starting Build.

Sending build context to Docker daemon  244.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_111301
20201004_111302 - Build completed successfully.


Already up to date.
[master a732afa] Automatic build 20201004_111301
 1 file changed, 30 insertions(+)
20201004_111312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_111301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_111320 - Docker push completed successfully.


20201004_111320 - All completed successfully
20201004_121301 - Starting Build.

Sending build context to Docker daemon  244.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_121301
20201004_121302 - Build completed successfully.


Already up to date.
[master b6cd23b] Automatic build 20201004_121301
 1 file changed, 30 insertions(+)
20201004_121310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_121301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_121317 - Docker push completed successfully.


20201004_121317 - All completed successfully
20201004_131301 - Starting Build.

Sending build context to Docker daemon  245.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_131301
20201004_131302 - Build completed successfully.


Already up to date.
[master 4e8e292] Automatic build 20201004_131301
 1 file changed, 30 insertions(+)
20201004_131314 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_131301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_131343 - Docker push completed successfully.


20201004_131343 - All completed successfully
20201004_141301 - Starting Build.

Sending build context to Docker daemon  245.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_141301
20201004_141302 - Build completed successfully.


Already up to date.
[master a38b593] Automatic build 20201004_141301
 1 file changed, 30 insertions(+)
20201004_141310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_141301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_141317 - Docker push completed successfully.


20201004_141317 - All completed successfully
20201004_151301 - Starting Build.

Sending build context to Docker daemon  245.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_151301
20201004_151302 - Build completed successfully.


Already up to date.
[master ae9ef2c] Automatic build 20201004_151301
 1 file changed, 30 insertions(+)
20201004_151310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_151301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_151317 - Docker push completed successfully.


20201004_151317 - All completed successfully
20201004_161301 - Starting Build.

Sending build context to Docker daemon    246MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_161301
20201004_161302 - Build completed successfully.


Already up to date.
[master 46d0b94] Automatic build 20201004_161301
 1 file changed, 30 insertions(+)
20201004_161311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_161301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_161318 - Docker push completed successfully.


20201004_161318 - All completed successfully
20201004_171301 - Starting Build.

Sending build context to Docker daemon  246.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_171301
20201004_171302 - Build completed successfully.


Already up to date.
[master ccb9e91] Automatic build 20201004_171301
 1 file changed, 30 insertions(+)
20201004_171311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_171301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_171317 - Docker push completed successfully.


20201004_171317 - All completed successfully
20201004_181301 - Starting Build.

Sending build context to Docker daemon  246.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_181301
20201004_181303 - Build completed successfully.


Already up to date.
[master 9f940c0] Automatic build 20201004_181301
 1 file changed, 30 insertions(+)
20201004_181311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_181301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_181318 - Docker push completed successfully.


20201004_181318 - All completed successfully
20201004_191301 - Starting Build.

Sending build context to Docker daemon  246.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_191301
20201004_191302 - Build completed successfully.


Already up to date.
[master 4a0a217] Automatic build 20201004_191301
 1 file changed, 30 insertions(+)
20201004_191311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_191301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_191317 - Docker push completed successfully.


20201004_191317 - All completed successfully
20201004_201301 - Starting Build.

Sending build context to Docker daemon    247MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_201301
20201004_201302 - Build completed successfully.


Already up to date.
[master 3b32d93] Automatic build 20201004_201301
 1 file changed, 30 insertions(+)
20201004_201311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_201301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_201321 - Docker push completed successfully.


20201004_201321 - All completed successfully
20201004_211301 - Starting Build.

Sending build context to Docker daemon  247.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_211301
20201004_211302 - Build completed successfully.


Already up to date.
[master 096c3f5] Automatic build 20201004_211301
 1 file changed, 30 insertions(+)
20201004_211314 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201004_211301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_211322 - Docker push completed successfully.


20201004_211322 - All completed successfully
20201004_221301 - Starting Build.

Sending build context to Docker daemon  247.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_221301
20201004_221303 - Build completed successfully.


Already up to date.
[master afaad84] Automatic build 20201004_221301
 1 file changed, 30 insertions(+)
20201004_221314 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_221301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_221324 - Docker push completed successfully.


20201004_221324 - All completed successfully
20201004_231301 - Starting Build.

Sending build context to Docker daemon  247.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201004_231301
20201004_231302 - Build completed successfully.


Already up to date.
[master e337298] Automatic build 20201004_231301
 1 file changed, 30 insertions(+)
20201004_231312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201004_231301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201004_231319 - Docker push completed successfully.


20201004_231319 - All completed successfully
20201005_001301 - Starting Build.

Sending build context to Docker daemon    248MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_001301
20201005_001302 - Build completed successfully.


Already up to date.
[master ae987ad] Automatic build 20201005_001301
 1 file changed, 30 insertions(+)
20201005_001312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_001301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_001320 - Docker push completed successfully.


20201005_001320 - All completed successfully
20201005_011301 - Starting Build.

Sending build context to Docker daemon  248.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_011301
20201005_011303 - Build completed successfully.


Already up to date.
[master 71c0e63] Automatic build 20201005_011301
 1 file changed, 30 insertions(+)
20201005_011312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_011301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_011319 - Docker push completed successfully.


20201005_011319 - All completed successfully
20201005_021301 - Starting Build.

Sending build context to Docker daemon  248.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_021301
20201005_021302 - Build completed successfully.


Already up to date.
[master aa103a1] Automatic build 20201005_021301
 1 file changed, 30 insertions(+)
20201005_021311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_021301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_021318 - Docker push completed successfully.


20201005_021318 - All completed successfully
20201005_031301 - Starting Build.

Sending build context to Docker daemon  248.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_031301
20201005_031302 - Build completed successfully.


Already up to date.
[master 07ef409] Automatic build 20201005_031301
 1 file changed, 30 insertions(+)
20201005_031311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_031301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_031318 - Docker push completed successfully.


20201005_031318 - All completed successfully
20201005_041301 - Starting Build.

Sending build context to Docker daemon  249.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_041301
20201005_041302 - Build completed successfully.


Already up to date.
[master f68829e] Automatic build 20201005_041301
 1 file changed, 30 insertions(+)
20201005_041311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_041301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_041317 - Docker push completed successfully.


20201005_041317 - All completed successfully
20201005_051301 - Starting Build.

Sending build context to Docker daemon  249.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_051301
20201005_051302 - Build completed successfully.


Already up to date.
[master 63b8c74] Automatic build 20201005_051301
 1 file changed, 30 insertions(+)
20201005_051311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_051301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_051317 - Docker push completed successfully.


20201005_051317 - All completed successfully
20201005_061301 - Starting Build.

Sending build context to Docker daemon  249.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_061301
20201005_061302 - Build completed successfully.


Already up to date.
[master 387482d] Automatic build 20201005_061301
 1 file changed, 30 insertions(+)
20201005_061311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_061301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_061317 - Docker push completed successfully.


20201005_061317 - All completed successfully
20201005_071301 - Starting Build.

Sending build context to Docker daemon  249.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_071301
20201005_071302 - Build completed successfully.


Already up to date.
[master edcd9d3] Automatic build 20201005_071301
 1 file changed, 30 insertions(+)
20201005_071311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_071301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_071317 - Docker push completed successfully.


20201005_071317 - All completed successfully
20201005_081301 - Starting Build.

Sending build context to Docker daemon  250.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_081301
20201005_081302 - Build completed successfully.


Already up to date.
[master d943c49] Automatic build 20201005_081301
 1 file changed, 30 insertions(+)
20201005_081311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_081301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_081317 - Docker push completed successfully.


20201005_081317 - All completed successfully
20201005_091301 - Starting Build.

Sending build context to Docker daemon  250.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_091301
20201005_091302 - Build completed successfully.


Already up to date.
[master 9d298e5] Automatic build 20201005_091301
 1 file changed, 30 insertions(+)
20201005_091311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_091301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_091319 - Docker push completed successfully.


20201005_091319 - All completed successfully
20201005_101301 - Starting Build.

Sending build context to Docker daemon  250.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_101301
20201005_101302 - Build completed successfully.


Already up to date.
[master 6f3aace] Automatic build 20201005_101301
 1 file changed, 30 insertions(+)
20201005_101310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_101301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_101317 - Docker push completed successfully.


20201005_101317 - All completed successfully
20201005_111301 - Starting Build.

Sending build context to Docker daemon  250.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_111301
20201005_111302 - Build completed successfully.


Already up to date.
[master acf2eee] Automatic build 20201005_111301
 1 file changed, 30 insertions(+)
20201005_111311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_111301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_111319 - Docker push completed successfully.


20201005_111319 - All completed successfully
20201005_121301 - Starting Build.

Sending build context to Docker daemon  251.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_121301
20201005_121302 - Build completed successfully.


Already up to date.
[master ad045a0] Automatic build 20201005_121301
 1 file changed, 30 insertions(+)
20201005_121311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_121301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_121318 - Docker push completed successfully.


20201005_121318 - All completed successfully
20201005_131301 - Starting Build.

Sending build context to Docker daemon  251.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_131301
20201005_131302 - Build completed successfully.


Already up to date.
[master 7bce0cc] Automatic build 20201005_131301
 1 file changed, 30 insertions(+)
20201005_131311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_131301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_131319 - Docker push completed successfully.


20201005_131319 - All completed successfully
20201005_141301 - Starting Build.

Sending build context to Docker daemon  251.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_141301
20201005_141302 - Build completed successfully.


Already up to date.
[master 3338572] Automatic build 20201005_141301
 1 file changed, 30 insertions(+)
20201005_141312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_141301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_141320 - Docker push completed successfully.


20201005_141320 - All completed successfully
20201005_151301 - Starting Build.

Sending build context to Docker daemon  251.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_151301
20201005_151302 - Build completed successfully.


Already up to date.
[master ec3de99] Automatic build 20201005_151301
 1 file changed, 30 insertions(+)
20201005_151311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_151301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_151319 - Docker push completed successfully.


20201005_151319 - All completed successfully
20201005_161301 - Starting Build.

Sending build context to Docker daemon  252.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_161301
20201005_161302 - Build completed successfully.


Already up to date.
[master e8c7ad0] Automatic build 20201005_161301
 1 file changed, 30 insertions(+)
20201005_161312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_161301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_161322 - Docker push completed successfully.


20201005_161322 - All completed successfully
20201005_171301 - Starting Build.

Sending build context to Docker daemon  252.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_171301
20201005_171302 - Build completed successfully.


Already up to date.
[master 8fdd367] Automatic build 20201005_171301
 1 file changed, 30 insertions(+)
20201005_171312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_171301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_171322 - Docker push completed successfully.


20201005_171322 - All completed successfully
20201005_181301 - Starting Build.

Sending build context to Docker daemon  252.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_181301
20201005_181302 - Build completed successfully.


Already up to date.
[master 41a14bb] Automatic build 20201005_181301
 1 file changed, 30 insertions(+)
20201005_181311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_181301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_181317 - Docker push completed successfully.


20201005_181317 - All completed successfully
20201005_191301 - Starting Build.

Sending build context to Docker daemon    253MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_191301
20201005_191303 - Build completed successfully.


Already up to date.
[master 1324e92] Automatic build 20201005_191301
 1 file changed, 30 insertions(+)
20201005_191312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_191301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_191319 - Docker push completed successfully.


20201005_191319 - All completed successfully
20201005_201301 - Starting Build.

Sending build context to Docker daemon  253.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_201301
20201005_201303 - Build completed successfully.


Already up to date.
[master 9aadb2c] Automatic build 20201005_201301
 1 file changed, 30 insertions(+)
20201005_201312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201005_201301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_201320 - Docker push completed successfully.


20201005_201320 - All completed successfully
20201005_211301 - Starting Build.

Sending build context to Docker daemon  253.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_211301
20201005_211306 - Build completed successfully.


Already up to date.
[master 293d389] Automatic build 20201005_211301
 1 file changed, 30 insertions(+)
20201005_211318 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_211301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_211324 - Docker push completed successfully.


20201005_211324 - All completed successfully
20201005_221301 - Starting Build.

Sending build context to Docker daemon  253.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_221301
20201005_221304 - Build completed successfully.


Already up to date.
[master f95962f] Automatic build 20201005_221301
 1 file changed, 30 insertions(+)
20201005_221313 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_221301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_221319 - Docker push completed successfully.


20201005_221319 - All completed successfully
20201005_231301 - Starting Build.

Sending build context to Docker daemon    254MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201005_231301
20201005_231305 - Build completed successfully.


Already up to date.
[master b7bec22] Automatic build 20201005_231301
 1 file changed, 30 insertions(+)
20201005_231314 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201005_231301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201005_231320 - Docker push completed successfully.


20201005_231320 - All completed successfully
20201006_001301 - Starting Build.

Sending build context to Docker daemon  254.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_001301
20201006_001305 - Build completed successfully.


Already up to date.
[master b1afee7] Automatic build 20201006_001301
 1 file changed, 30 insertions(+)
20201006_001314 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_001301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_001328 - Docker push completed successfully.


20201006_001328 - All completed successfully
20201006_011301 - Starting Build.

Sending build context to Docker daemon  254.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_011301
20201006_011303 - Build completed successfully.


Already up to date.
[master 48025b2] Automatic build 20201006_011301
 1 file changed, 30 insertions(+)
20201006_011311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_011301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_011317 - Docker push completed successfully.


20201006_011317 - All completed successfully
20201006_021301 - Starting Build.

Sending build context to Docker daemon  254.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_021301
20201006_021302 - Build completed successfully.


Already up to date.
[master 16b86ae] Automatic build 20201006_021301
 1 file changed, 30 insertions(+)
20201006_021311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_021301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_021317 - Docker push completed successfully.


20201006_021317 - All completed successfully
20201006_031301 - Starting Build.

Sending build context to Docker daemon    255MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_031301
20201006_031302 - Build completed successfully.


Already up to date.
[master 2e1c014] Automatic build 20201006_031301
 1 file changed, 30 insertions(+)
20201006_031311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_031301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_031318 - Docker push completed successfully.


20201006_031318 - All completed successfully
20201006_041301 - Starting Build.

Sending build context to Docker daemon  255.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_041301
20201006_041303 - Build completed successfully.


Already up to date.
[master 57085f8] Automatic build 20201006_041301
 1 file changed, 30 insertions(+)
20201006_041312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_041301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_041319 - Docker push completed successfully.


20201006_041319 - All completed successfully
20201006_051301 - Starting Build.

Sending build context to Docker daemon  255.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_051301
20201006_051302 - Build completed successfully.


Already up to date.
[master 09e8a5d] Automatic build 20201006_051301
 1 file changed, 30 insertions(+)
20201006_051310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_051301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_051320 - Docker push completed successfully.


20201006_051320 - All completed successfully
20201006_061301 - Starting Build.

Sending build context to Docker daemon  255.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_061301
20201006_061302 - Build completed successfully.


Already up to date.
[master 03e2e76] Automatic build 20201006_061301
 1 file changed, 30 insertions(+)
20201006_061311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_061301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_061323 - Docker push completed successfully.


20201006_061323 - All completed successfully
20201006_071301 - Starting Build.

Sending build context to Docker daemon  256.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_071301
20201006_071302 - Build completed successfully.


Already up to date.
[master bd9ebd5] Automatic build 20201006_071301
 1 file changed, 30 insertions(+)
20201006_071313 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_071301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_071323 - Docker push completed successfully.


20201006_071323 - All completed successfully
20201006_081301 - Starting Build.

Sending build context to Docker daemon  256.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_081301
20201006_081302 - Build completed successfully.


Already up to date.
[master 324713a] Automatic build 20201006_081301
 1 file changed, 30 insertions(+)
20201006_081311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_081301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_081317 - Docker push completed successfully.


20201006_081317 - All completed successfully
20201006_091301 - Starting Build.

Sending build context to Docker daemon  256.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_091301
20201006_091302 - Build completed successfully.


Already up to date.
[master 9e309cc] Automatic build 20201006_091301
 1 file changed, 30 insertions(+)
20201006_091310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_091301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_091317 - Docker push completed successfully.


20201006_091317 - All completed successfully
20201006_101301 - Starting Build.

Sending build context to Docker daemon  256.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_101301
20201006_101302 - Build completed successfully.


Already up to date.
[master bae1f1a] Automatic build 20201006_101301
 1 file changed, 30 insertions(+)
20201006_101310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_101301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_101317 - Docker push completed successfully.


20201006_101317 - All completed successfully
20201006_111301 - Starting Build.

Sending build context to Docker daemon  257.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_111301
20201006_111302 - Build completed successfully.


Already up to date.
[master e8d72a5] Automatic build 20201006_111301
 1 file changed, 30 insertions(+)
20201006_111311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_111301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_111317 - Docker push completed successfully.


20201006_111317 - All completed successfully
20201006_121301 - Starting Build.

Sending build context to Docker daemon  257.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_121301
20201006_121302 - Build completed successfully.


20201006_121312 - git
[master db9a24b] Automatic build 20201006_121301
 1 file changed, 30 insertions(+)
20201006_121318 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_121301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_121325 - Docker push completed successfully.


20201006_121325 - All completed successfully
20201006_131301 - Starting Build.

Sending build context to Docker daemon  257.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_131301
20201006_131302 - Build completed successfully.


20201006_131331 - git
[master 53ee50c] Automatic build 20201006_131301
 1 file changed, 30 insertions(+)
20201006_131359 - git
20201006_131359 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20201006_131414 - Docker push FAILED!!


20201006_141301 - Starting Build.

Sending build context to Docker daemon  257.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_141301
20201006_141302 - Build completed successfully.


Already up to date.
[master 3fc82a3] Automatic build 20201006_141301
 1 file changed, 25 insertions(+)
20201006_141312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_141301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_141320 - Docker push completed successfully.


20201006_141320 - All completed successfully
20201006_151301 - Starting Build.

Sending build context to Docker daemon  258.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_151301
20201006_151303 - Build completed successfully.


Already up to date.
[master ba6202e] Automatic build 20201006_151301
 1 file changed, 30 insertions(+)
20201006_151311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_151301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_151318 - Docker push completed successfully.


20201006_151318 - All completed successfully
20201006_161301 - Starting Build.

Sending build context to Docker daemon  258.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_161301
20201006_161302 - Build completed successfully.


Already up to date.
[master 665e6f6] Automatic build 20201006_161301
 1 file changed, 30 insertions(+)
20201006_161310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_161301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_161318 - Docker push completed successfully.


20201006_161318 - All completed successfully
20201006_171301 - Starting Build.

Sending build context to Docker daemon  258.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_171301
20201006_171302 - Build completed successfully.


Already up to date.
[master f39c5f6] Automatic build 20201006_171301
 1 file changed, 30 insertions(+)
20201006_171309 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_171301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_171316 - Docker push completed successfully.


20201006_171316 - All completed successfully
20201006_181301 - Starting Build.

Sending build context to Docker daemon  258.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_181301
20201006_181303 - Build completed successfully.


Already up to date.
[master 6ba8395] Automatic build 20201006_181301
 1 file changed, 30 insertions(+)
20201006_181312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_181301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_181319 - Docker push completed successfully.


20201006_181319 - All completed successfully
20201006_191301 - Starting Build.

Sending build context to Docker daemon  259.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_191301
20201006_191303 - Build completed successfully.


Already up to date.
[master 207467f] Automatic build 20201006_191301
 1 file changed, 30 insertions(+)
20201006_191313 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_191301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_191323 - Docker push completed successfully.


20201006_191323 - All completed successfully
20201006_201301 - Starting Build.

Sending build context to Docker daemon  259.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_201301
20201006_201305 - Build completed successfully.


Already up to date.
[master 8f3cd78] Automatic build 20201006_201301
 1 file changed, 30 insertions(+)
20201006_201316 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201006_201301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_201322 - Docker push completed successfully.


20201006_201322 - All completed successfully
20201006_211301 - Starting Build.

Sending build context to Docker daemon  259.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_211301
20201006_211302 - Build completed successfully.


Already up to date.
[master 8b77a81] Automatic build 20201006_211301
 1 file changed, 30 insertions(+)
20201006_211312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_211301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_211319 - Docker push completed successfully.


20201006_211319 - All completed successfully
20201006_221301 - Starting Build.

Sending build context to Docker daemon    260MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_221301
20201006_221306 - Build completed successfully.


Already up to date.
[master 4955b49] Automatic build 20201006_221301
 1 file changed, 30 insertions(+)
20201006_221316 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_221301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_221323 - Docker push completed successfully.


20201006_221323 - All completed successfully
20201006_231301 - Starting Build.

Sending build context to Docker daemon  260.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201006_231301
20201006_231303 - Build completed successfully.


Already up to date.
[master e947aa8] Automatic build 20201006_231301
 1 file changed, 30 insertions(+)
20201006_231312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201006_231301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201006_231318 - Docker push completed successfully.


20201006_231318 - All completed successfully
20201007_001301 - Starting Build.

Sending build context to Docker daemon  260.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_001301
20201007_001303 - Build completed successfully.


Already up to date.
[master 7c17e2e] Automatic build 20201007_001301
 1 file changed, 30 insertions(+)
20201007_001312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_001301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_001319 - Docker push completed successfully.


20201007_001319 - All completed successfully
20201007_011301 - Starting Build.

Sending build context to Docker daemon  260.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_011301
20201007_011302 - Build completed successfully.


Already up to date.
[master 2a3a024] Automatic build 20201007_011301
 1 file changed, 30 insertions(+)
20201007_011311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_011301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_011318 - Docker push completed successfully.


20201007_011318 - All completed successfully
20201007_021301 - Starting Build.

Sending build context to Docker daemon    261MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_021301
20201007_021302 - Build completed successfully.


Already up to date.
[master 046cf89] Automatic build 20201007_021301
 1 file changed, 30 insertions(+)
20201007_021311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_021301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_021318 - Docker push completed successfully.


20201007_021318 - All completed successfully
20201007_031301 - Starting Build.

Sending build context to Docker daemon  261.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_031301
20201007_031302 - Build completed successfully.


Already up to date.
[master 27f3b8b] Automatic build 20201007_031301
 1 file changed, 30 insertions(+)
20201007_031312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_031301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_031320 - Docker push completed successfully.


20201007_031320 - All completed successfully
20201007_041301 - Starting Build.

Sending build context to Docker daemon  261.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_041301
20201007_041302 - Build completed successfully.


Already up to date.
[master fcbd5ad] Automatic build 20201007_041301
 1 file changed, 30 insertions(+)
20201007_041310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_041301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_041318 - Docker push completed successfully.


20201007_041318 - All completed successfully
20201007_051301 - Starting Build.

Sending build context to Docker daemon  261.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_051301
20201007_051302 - Build completed successfully.


Already up to date.
[master 2e7efd7] Automatic build 20201007_051301
 1 file changed, 30 insertions(+)
20201007_051311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_051301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_051318 - Docker push completed successfully.


20201007_051318 - All completed successfully
20201007_061301 - Starting Build.

Sending build context to Docker daemon  262.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_061301
20201007_061303 - Build completed successfully.


Already up to date.
[master 7d89814] Automatic build 20201007_061301
 1 file changed, 30 insertions(+)
20201007_061312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_061301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_061318 - Docker push completed successfully.


20201007_061318 - All completed successfully
20201007_071301 - Starting Build.

Sending build context to Docker daemon  262.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_071301
20201007_071302 - Build completed successfully.


Already up to date.
[master 956efec] Automatic build 20201007_071301
 1 file changed, 30 insertions(+)
20201007_071310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_071301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_071317 - Docker push completed successfully.


20201007_071317 - All completed successfully
20201007_081301 - Starting Build.

Sending build context to Docker daemon  262.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_081301
20201007_081302 - Build completed successfully.


Already up to date.
[master 2e9dedc] Automatic build 20201007_081301
 1 file changed, 30 insertions(+)
20201007_081310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_081301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_081317 - Docker push completed successfully.


20201007_081317 - All completed successfully
20201007_091302 - Starting Build.

Sending build context to Docker daemon  262.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_091302
20201007_091303 - Build completed successfully.


Already up to date.
[master cc9f29e] Automatic build 20201007_091302
 1 file changed, 30 insertions(+)
20201007_091311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_091302: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_091318 - Docker push completed successfully.


20201007_091318 - All completed successfully
20201007_101301 - Starting Build.

Sending build context to Docker daemon  263.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_101301
20201007_101305 - Build completed successfully.


Already up to date.
[master e64f2e1] Automatic build 20201007_101301
 1 file changed, 30 insertions(+)
20201007_101314 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_101301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_101320 - Docker push completed successfully.


20201007_101320 - All completed successfully
20201007_111301 - Starting Build.

Sending build context to Docker daemon  263.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_111301
20201007_111303 - Build completed successfully.


Already up to date.
[master 1914fd5] Automatic build 20201007_111301
 1 file changed, 30 insertions(+)
20201007_111312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_111301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_111318 - Docker push completed successfully.


20201007_111318 - All completed successfully
20201007_121301 - Starting Build.

Sending build context to Docker daemon  263.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_121301
20201007_121304 - Build completed successfully.


Already up to date.
[master 63df827] Automatic build 20201007_121301
 1 file changed, 30 insertions(+)
20201007_121312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_121301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_121318 - Docker push completed successfully.


20201007_121318 - All completed successfully
20201007_131301 - Starting Build.

Sending build context to Docker daemon  263.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_131301
20201007_131305 - Build completed successfully.


Already up to date.
[master 530a451] Automatic build 20201007_131301
 1 file changed, 30 insertions(+)
20201007_131313 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_131301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_131319 - Docker push completed successfully.


20201007_131319 - All completed successfully
20201007_141301 - Starting Build.

Sending build context to Docker daemon  264.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_141301
20201007_141302 - Build completed successfully.


Already up to date.
[master ce0262b] Automatic build 20201007_141301
 1 file changed, 30 insertions(+)
20201007_141311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_141301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_141317 - Docker push completed successfully.


20201007_141317 - All completed successfully
20201007_151301 - Starting Build.

Sending build context to Docker daemon  264.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_151301
20201007_151303 - Build completed successfully.


Already up to date.
[master 4a86304] Automatic build 20201007_151301
 1 file changed, 30 insertions(+)
20201007_151312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_151301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_151318 - Docker push completed successfully.


20201007_151318 - All completed successfully
20201007_161301 - Starting Build.

Sending build context to Docker daemon  264.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_161301
20201007_161302 - Build completed successfully.


Already up to date.
[master 8d06ee6] Automatic build 20201007_161301
 1 file changed, 30 insertions(+)
20201007_161310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_161301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_161319 - Docker push completed successfully.


20201007_161319 - All completed successfully
20201007_171301 - Starting Build.

Sending build context to Docker daemon    265MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_171301
20201007_171304 - Build completed successfully.


Already up to date.
[master 8a3ef5b] Automatic build 20201007_171301
 1 file changed, 30 insertions(+)
20201007_171313 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_171301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_171321 - Docker push completed successfully.


20201007_171321 - All completed successfully
20201007_181301 - Starting Build.

Sending build context to Docker daemon  265.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_181301
20201007_181302 - Build completed successfully.


20201007_181302 - git
[master 94f8fda] Automatic build 20201007_181301
 1 file changed, 30 insertions(+)
20201007_181303 - git
20201007_181303 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20201007_181303 - Docker push FAILED!!


20201007_191301 - Starting Build.

Sending build context to Docker daemon  265.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_191301
20201007_191303 - Build completed successfully.


Already up to date.
[master 5af8386] Automatic build 20201007_191301
 1 file changed, 25 insertions(+)
20201007_191312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_191301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_191320 - Docker push completed successfully.


20201007_191320 - All completed successfully
20201007_201301 - Starting Build.

Sending build context to Docker daemon  265.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_201301
20201007_201313 - Build completed successfully.


Already up to date.
[master 058709d] Automatic build 20201007_201301
 1 file changed, 30 insertions(+)
20201007_201320 - git
20201007_201320 - git failed!!
20201007_201322 - Docker push FAILED!!


20201007_211301 - Starting Build.

Sending build context to Docker daemon    266MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_211301
20201007_211304 - Build completed successfully.


Already up to date.
[master 6fc886e] Automatic build 20201007_211301
 1 file changed, 24 insertions(+)
20201007_211315 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_211301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_211324 - Docker push completed successfully.


20201007_211324 - All completed successfully
20201007_221301 - Starting Build.

Sending build context to Docker daemon  266.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_221301
20201007_221302 - Build completed successfully.


Already up to date.
[master 28f5a52] Automatic build 20201007_221301
 1 file changed, 30 insertions(+)
20201007_221311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201007_221301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_221318 - Docker push completed successfully.


20201007_221318 - All completed successfully
20201007_231301 - Starting Build.

Sending build context to Docker daemon  266.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201007_231301
20201007_231302 - Build completed successfully.


Already up to date.
[master ee719a5] Automatic build 20201007_231301
 1 file changed, 30 insertions(+)
20201007_231311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201007_231301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201007_231318 - Docker push completed successfully.


20201007_231318 - All completed successfully
20201008_001301 - Starting Build.

Sending build context to Docker daemon  266.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_001301
20201008_001303 - Build completed successfully.


Already up to date.
[master e3ce051] Automatic build 20201008_001301
 1 file changed, 30 insertions(+)
20201008_001312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_001301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_001325 - Docker push completed successfully.


20201008_001325 - All completed successfully
20201008_011301 - Starting Build.

Sending build context to Docker daemon  267.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_011301
20201008_011302 - Build completed successfully.


Already up to date.
[master 09160b2] Automatic build 20201008_011301
 1 file changed, 30 insertions(+)
20201008_011311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_011301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_011318 - Docker push completed successfully.


20201008_011318 - All completed successfully
20201008_021301 - Starting Build.

Sending build context to Docker daemon  267.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_021301
20201008_021306 - Build completed successfully.


Already up to date.
[master 94cdaa0] Automatic build 20201008_021301
 1 file changed, 30 insertions(+)
20201008_021316 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_021301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_021324 - Docker push completed successfully.


20201008_021324 - All completed successfully
20201008_031301 - Starting Build.

Sending build context to Docker daemon  267.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_031301
20201008_031306 - Build completed successfully.


Already up to date.
[master 177802a] Automatic build 20201008_031301
 1 file changed, 30 insertions(+)
20201008_031315 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_031301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_031322 - Docker push completed successfully.


20201008_031322 - All completed successfully
20201008_041301 - Starting Build.

Sending build context to Docker daemon  267.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_041301
20201008_041305 - Build completed successfully.


Already up to date.
[master 44ec79a] Automatic build 20201008_041301
 1 file changed, 30 insertions(+)
20201008_041315 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_041301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_041321 - Docker push completed successfully.


20201008_041321 - All completed successfully
20201008_051301 - Starting Build.

Sending build context to Docker daemon  268.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_051301
20201008_051302 - Build completed successfully.


Already up to date.
[master 1d7b4a5] Automatic build 20201008_051301
 1 file changed, 30 insertions(+)
20201008_051311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_051301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_051318 - Docker push completed successfully.


20201008_051318 - All completed successfully
20201008_061301 - Starting Build.

Sending build context to Docker daemon  268.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_061301
20201008_061302 - Build completed successfully.


Already up to date.
[master 84473a8] Automatic build 20201008_061301
 1 file changed, 30 insertions(+)
20201008_061311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_061301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_061317 - Docker push completed successfully.


20201008_061317 - All completed successfully
20201008_071301 - Starting Build.

Sending build context to Docker daemon  268.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_071301
20201008_071303 - Build completed successfully.


Already up to date.
[master f25da82] Automatic build 20201008_071301
 1 file changed, 30 insertions(+)
20201008_071311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_071301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_071318 - Docker push completed successfully.


20201008_071318 - All completed successfully
20201008_081301 - Starting Build.

Sending build context to Docker daemon  268.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_081301
20201008_081302 - Build completed successfully.


Already up to date.
[master b636761] Automatic build 20201008_081301
 1 file changed, 30 insertions(+)
20201008_081311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_081301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_081317 - Docker push completed successfully.


20201008_081317 - All completed successfully
20201008_091301 - Starting Build.

Sending build context to Docker daemon  269.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_091301
20201008_091302 - Build completed successfully.


Already up to date.
[master 1858555] Automatic build 20201008_091301
 1 file changed, 30 insertions(+)
20201008_091311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_091301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_091317 - Docker push completed successfully.


20201008_091317 - All completed successfully
20201008_101301 - Starting Build.

Sending build context to Docker daemon  269.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_101301
20201008_101302 - Build completed successfully.


Already up to date.
[master 5c4c19d] Automatic build 20201008_101301
 1 file changed, 30 insertions(+)
20201008_101311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_101301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_101318 - Docker push completed successfully.


20201008_101318 - All completed successfully
20201008_111301 - Starting Build.

Sending build context to Docker daemon  269.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_111301
20201008_111302 - Build completed successfully.


Already up to date.
[master 10eb5cd] Automatic build 20201008_111301
 1 file changed, 30 insertions(+)
20201008_111311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_111301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_111317 - Docker push completed successfully.


20201008_111317 - All completed successfully
20201008_121301 - Starting Build.

Sending build context to Docker daemon  269.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_121301
20201008_121303 - Build completed successfully.


Already up to date.
[master fd8e493] Automatic build 20201008_121301
 1 file changed, 30 insertions(+)
20201008_121312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_121301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_121319 - Docker push completed successfully.


20201008_121319 - All completed successfully
20201008_131301 - Starting Build.

Sending build context to Docker daemon  270.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_131301
20201008_131303 - Build completed successfully.


Already up to date.
[master 7766adf] Automatic build 20201008_131301
 1 file changed, 30 insertions(+)
20201008_131312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_131301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_131322 - Docker push completed successfully.


20201008_131322 - All completed successfully
20201008_141301 - Starting Build.

Sending build context to Docker daemon  270.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_141301
20201008_141302 - Build completed successfully.


Already up to date.
[master 67d53a6] Automatic build 20201008_141301
 1 file changed, 30 insertions(+)
20201008_141311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_141301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_141318 - Docker push completed successfully.


20201008_141318 - All completed successfully
20201008_151301 - Starting Build.

Sending build context to Docker daemon  270.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_151301
20201008_151302 - Build completed successfully.


Already up to date.
[master cd250e6] Automatic build 20201008_151301
 1 file changed, 30 insertions(+)
20201008_151311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_151301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_151318 - Docker push completed successfully.


20201008_151318 - All completed successfully
20201008_161301 - Starting Build.

Sending build context to Docker daemon    271MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_161301
20201008_161302 - Build completed successfully.


Already up to date.
[master 216e4ed] Automatic build 20201008_161301
 1 file changed, 30 insertions(+)
20201008_161311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_161301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_161318 - Docker push completed successfully.


20201008_161318 - All completed successfully
20201008_171301 - Starting Build.

Sending build context to Docker daemon  271.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_171301
20201008_171302 - Build completed successfully.


Already up to date.
[master 0bb7b2d] Automatic build 20201008_171301
 1 file changed, 30 insertions(+)
20201008_171311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_171301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_171319 - Docker push completed successfully.


20201008_171319 - All completed successfully
20201008_181301 - Starting Build.

Sending build context to Docker daemon  271.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_181301
20201008_181302 - Build completed successfully.


Already up to date.
[master b788004] Automatic build 20201008_181301
 1 file changed, 30 insertions(+)
20201008_181311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_181301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_181317 - Docker push completed successfully.


20201008_181317 - All completed successfully
20201008_191301 - Starting Build.

Sending build context to Docker daemon  271.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_191301
20201008_191302 - Build completed successfully.


Already up to date.
[master fc03f6c] Automatic build 20201008_191301
 1 file changed, 30 insertions(+)
20201008_191311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_191301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_191318 - Docker push completed successfully.


20201008_191318 - All completed successfully
20201008_201301 - Starting Build.

Sending build context to Docker daemon  272.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_201301
20201008_201302 - Build completed successfully.


Already up to date.
[master 0889a87] Automatic build 20201008_201301
 1 file changed, 30 insertions(+)
20201008_201310 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_201301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_201316 - Docker push completed successfully.


20201008_201316 - All completed successfully
20201008_211301 - Starting Build.

Sending build context to Docker daemon  272.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_211301
20201008_211303 - Build completed successfully.


Already up to date.
[master 1c1d9dc] Automatic build 20201008_211301
 1 file changed, 30 insertions(+)
20201008_211311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_211301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_211318 - Docker push completed successfully.


20201008_211318 - All completed successfully
20201008_221301 - Starting Build.

Sending build context to Docker daemon  272.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_221301
20201008_221302 - Build completed successfully.


Already up to date.
[master 264c3f2] Automatic build 20201008_221301
 1 file changed, 30 insertions(+)
20201008_221312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201008_221301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_221318 - Docker push completed successfully.


20201008_221318 - All completed successfully
20201008_231301 - Starting Build.

Sending build context to Docker daemon  272.8MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201008_231301
20201008_231302 - Build completed successfully.


Already up to date.
[master 9dea78e] Automatic build 20201008_231301
 1 file changed, 30 insertions(+)
20201008_231311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201008_231301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201008_231318 - Docker push completed successfully.


20201008_231318 - All completed successfully
20201009_001301 - Starting Build.

Sending build context to Docker daemon  273.1MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_001301
20201009_001303 - Build completed successfully.


Already up to date.
[master 50d9fd2] Automatic build 20201009_001301
 1 file changed, 30 insertions(+)
20201009_001312 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201009_001301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_001325 - Docker push completed successfully.


20201009_001325 - All completed successfully
20201009_011301 - Starting Build.

Sending build context to Docker daemon  273.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_011301
20201009_011303 - Build completed successfully.


Already up to date.
[master 76c3ce0] Automatic build 20201009_011301
 1 file changed, 30 insertions(+)
20201009_011311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201009_011301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_011317 - Docker push completed successfully.


20201009_011317 - All completed successfully
20201009_021301 - Starting Build.

Sending build context to Docker daemon  273.6MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_021301
20201009_021302 - Build completed successfully.


Already up to date.
[master 85afaed] Automatic build 20201009_021301
 1 file changed, 30 insertions(+)
20201009_021311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201009_021301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_021318 - Docker push completed successfully.


20201009_021318 - All completed successfully
20201009_031301 - Starting Build.

Sending build context to Docker daemon  273.9MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_031301
20201009_031302 - Build completed successfully.


Already up to date.
[master 585ec1c] Automatic build 20201009_031301
 1 file changed, 30 insertions(+)
20201009_031311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201009_031301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_031317 - Docker push completed successfully.


20201009_031317 - All completed successfully
20201009_041301 - Starting Build.

Sending build context to Docker daemon  274.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_041301
20201009_041303 - Build completed successfully.


Already up to date.
[master 45f1323] Automatic build 20201009_041301
 1 file changed, 30 insertions(+)
20201009_041311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201009_041301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_041318 - Docker push completed successfully.


20201009_041318 - All completed successfully
20201009_051301 - Starting Build.

Sending build context to Docker daemon  274.4MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_051301
20201009_051303 - Build completed successfully.


Already up to date.
[master 8727c6f] Automatic build 20201009_051301
 1 file changed, 30 insertions(+)
20201009_051311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201009_051301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_051318 - Docker push completed successfully.


20201009_051318 - All completed successfully
20201009_061301 - Starting Build.

Sending build context to Docker daemon  274.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_061301
20201009_061302 - Build completed successfully.


Already up to date.
[master 3322706] Automatic build 20201009_061301
 1 file changed, 30 insertions(+)
20201009_061311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
2dcdacc3c736: Layer already exists
50644c29ef5a: Layer already exists
20201009_061301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_061319 - Docker push completed successfully.


20201009_061319 - All completed successfully
20201009_071301 - Starting Build.

Sending build context to Docker daemon    275MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_071301
20201009_071302 - Build completed successfully.


Already up to date.
[master d6e8cac] Automatic build 20201009_071301
 1 file changed, 30 insertions(+)
20201009_071311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201009_071301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_071317 - Docker push completed successfully.


20201009_071317 - All completed successfully
20201009_081301 - Starting Build.

Sending build context to Docker daemon  275.2MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_081301
20201009_081302 - Build completed successfully.


Already up to date.
[master 7d24619] Automatic build 20201009_081301
 1 file changed, 30 insertions(+)
20201009_081311 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201009_081301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_081318 - Docker push completed successfully.


20201009_081318 - All completed successfully
20201009_091301 - Starting Build.

Sending build context to Docker daemon  275.5MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_091301
20201009_091302 - Build completed successfully.


20201009_091513 - git
[master faad91b] Automatic build 20201009_091301
 1 file changed, 30 insertions(+)
20201009_091724 - git
20201009_091724 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20201009_091734 - Docker push FAILED!!


20201009_101301 - Starting Build.

Sending build context to Docker daemon  275.7MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_101301
20201009_101303 - Build completed successfully.


20201009_101303 - git
[master 86a9435] Automatic build 20201009_101301
 1 file changed, 25 insertions(+)
20201009_101303 - git
20201009_101303 - git failed!!
The push refers to repository [docker.io/blairy/python_3.8.5]
20201009_101303 - Docker push FAILED!!


20201009_111301 - Starting Build.

Sending build context to Docker daemon    276MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_111301
20201009_111304 - Build completed successfully.


Already up to date.
[master 4807f50] Automatic build 20201009_111301
 1 file changed, 25 insertions(+)
20201009_111314 - git completed successfully.
The push refers to repository [docker.io/blairy/python_3.8.5]
2dcdacc3c736: Preparing
50644c29ef5a: Preparing
50644c29ef5a: Layer already exists
2dcdacc3c736: Layer already exists
20201009_111301: digest: sha256:fa4f9c1988b4c1e8fce22f0e3596826365a6ac824621904abbe78bf65ecfa8cb size: 740
20201009_111322 - Docker push completed successfully.


20201009_111322 - All completed successfully
20201009_121301 - Starting Build.

Sending build context to Docker daemon  276.3MB
Step 1/3 : FROM alpine:latest
 ---> a24bb4013296
Step 2/3 : RUN apk update && apk upgrade &&     apk add py3-pip py3-beautifulsoup4
 ---> Using cache
 ---> 8dab6c11afc2
Step 3/3 : ENTRYPOINT ["python3.8"]
 ---> Using cache
 ---> 38a755a154d2
Successfully built 38a755a154d2
Successfully tagged blairy/python_3.8.5:20201009_121301
20201009_121302 - Build completed successfully.


20201009_121302 - git
